{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"d3\"","webpack://[name]/./src/fornac.css","webpack://[name]/./node_modules/slugid/index.js","webpack://[name]/./src/naview/connection.js","webpack://[name]/./src/naview/loop.js","webpack://[name]/./src/naview/region.js","webpack://[name]/(webpack)/buildin/global.js","webpack://[name]/./src/img/play.svg","webpack://[name]/./node_modules/slugid/slugid.js","webpack://[name]/./node_modules/buffer/index.js","webpack://[name]/./node_modules/base64-js/index.js","webpack://[name]/./node_modules/ieee754/index.js","webpack://[name]/./node_modules/isarray/index.js","webpack://[name]/./node_modules/uuid/uuid.js","webpack://[name]/./node_modules/uuid/rng-browser.js","webpack://[name]/./src/d3-context-menu.js","webpack://[name]/./src/rnautils.js","webpack://[name]/./src/rnagraph.js","webpack://[name]/./src/simplernaplot.js","webpack://[name]/./src/naview/radloop.js","webpack://[name]/./src/naview/base.js","webpack://[name]/./src/naview/naview.js","webpack://[name]/./src/fornac.js","webpack://[name]/./src/rnaplot.js","webpack://[name]/./src/rnatreemap.js","webpack://[name]/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","node","plot","selectedNode","nodeLabel","link","plotLabel","transparent","dragLine","brush","__webpack_exports__","Connection","_loop_js__WEBPACK_IMPORTED_MODULE_0__","_region_js__WEBPACK_IMPORTED_MODULE_1__","this","loop","Loop","region","Region","start","end","xrad","yrad","angle","extruded","broken","_isNull","isNull","setNull","getLoop","setLoop","getRegion","setRegion","getStart","setStart","getEnd","setEnd","getXrad","setXrad","getYrad","setYrad","getAngle","setAngle","isExtruded","setExtruded","isBroken","setBroken","_connection_js__WEBPACK_IMPORTED_MODULE_0__","nconnection","connections","_connections","number","depth","mark","x","y","radius","getNconnection","setNconnection","setConnection","getConnection","addConnection","push","getNumber","setNumber","getDepth","setDepth","isMark","setMark","getX","setX","getY","setY","getRadius","setRadius","_start1","_end1","_start2","_end2","getStart1","setStart1","start1","getEnd1","setEnd1","end1","getStart2","setStart2","start2","getEnd2","setEnd2","end2","g","Function","e","Buffer","uuid","encode","uuid_","bytes","parse","toString","replace","substring","decode","slug","base64","unparse","v4","nice","global","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","_rng","_byteToHex","_hexToByte","bth","_seedBytes","_nodeId","_clockseq","_lastMSecs","_lastNSecs","options","rnds","random","rng","ii","v1","clockseq","msecs","Date","getTime","nsecs","dt","tl","tmh","oct","crypto","msCrypto","getRandomValues","_rnds8","_rnds","contextMenu","menu","opts","openCallback","closeCallback","previouslyMouseUp","uid","slugid","rootElement","orientation","initialPos","parentStart","onOpen","onClose","d3","selectAll","enter","append","classed","select","on","console","style","index","pMouseUp","clickAwayFunc","elm","mousePos","currentThis","mouse","openChildMenuUid","html","event","preventDefault","stopPropagation","attr","divider","disabled","action","title","error","children","childUid","boundingRect","getBoundingClientRect","childrenContextMenu","left","pageXOffset","top","pageYOffset","width","ArrowIcon","contextMenuSelection","pageX","pageY","innerWidth","numberSort","rnaUtilities","self","bracketLeft","split","bracketRight","inverseBrackets","bracket","maximumMatching","pt","mm","maximum","backtrackMaximumMatching","oldPt","map","mmBt","q","dotbracketToPairtable","dotbracket","valueOf","stack","inverseBracketLeft","inverseBracketRight","ni","pop","insertIntoStack","k","deleteFromStack","pairtableToDotbracket","seen","findUnmatched","to","toRemove","unmatched","origFrom","origTo","removePseudoknotsFromPairtable","newPt","removed","ptToElements","level","dotBracketBreaks","elements","u5","u3","sort","external","right","ColorScheme","colorsText","parseRange","rangeText","nums","parts1","parseColorText","colorText","lines","currMolecule","counter","colorsJson","colorValues","","range","domainValues","words","search","partsRight","domain","color","normalizeColors","moleculeName","minNum","MAX_VALUE","maxNum","MIN_VALUE","resnum","RNAGraph","seq","structName","startNumber","circularizeExternal","circular","pseudoknotPairs","nucsToNodes","addUids","uids","nucleotideNodes","nodes","filter","nodeType","computePairtable","pairtable","removeBreaks","targetString","breaks","breakIndex","seqBreaks","rnaLength","arraysEqual","addPositions","positions","labelNodes","breakNodesToFakeNodes","_loop","elemType","getPositions","getUids","reinforceStems","relevantElements","allNucs","nucs","addFakeNode","reinforceLoops","filterNucs","newNode1","rna","px","py","newNode2","updateLinkUids","links","source","tan","fakeNodeUid","newNode","newX","newY","coordsCounted","cos","linkType","ia","fromNode","connectFakeNodes","fakeNodes","linked","thisNode","thisNuc","JSON","stringify","distance","addExtraLinks","extraLinks","newLink","getNodeFromNucleotides","extraLinkType","elementsToJson","elemTypes","nodeName","prevNode","nextNode","addLabels","labelInterval","prevVec","nextVec","combinedVec","vecLength","sqrt","normedVec","offsetVec","recalculateElements","removePseudoknots","externalLoop","eloop","prev","hloop","numGreater","reassignLinkUids","addPseudoknots","addName","simpleXyCoordinates","pair_table","alpha","loop_size","stack_size","lp","stk","PIHALF","PI","i_old","partner","start_k","start_l","ladder","begin","v","diff","polygon","count","bubble","remember","poss","sin","Radloop","loopnumber","next","getLoopnumber","setLoopnumber","getNext","setNext","getPrev","setPrev","Base","mate","extracted","getMate","setMate","isExtracted","setExtracted","NAView","ANUM","MAXITER","bases","nbase","nregion","loop_count","loops","regions","rlphead","lencut","RADIUS_REDUCTION_FACTOR","angleinc","_h","HELIX_FACTOR","BACKBONE_DISTANCE","FornaContainer","element","passedOptions","assign","editable","displayAllLinks","applyForce","chargeDistance","friction","middleCharge","otherCharge","linkDistanceMultiplier","initialSize","layout","allowPanningAndZooming","transitionDuration","maxNodeRadius","resizeSvgOnResize","svgW","svgH","backgroundMenu","canvasMousePos","xScale","invert","yScale","addRNA","sequence","centerPos","nodeMenu","deleteNode","changeNode","insertNodeBeforeOrAfter","nodeContextMenu","backgroundContextMenu","scale","category20","mousedownNode","mouseupNode","linkContextMenuShown","linear","graph","magnitude","positionAnyNode","endPoint","startPoint","u","arrowTip","path","realLinkFilter","changeColors","moleculeColors","parseFloat","linkStrengths","pseudoknot","proteinChain","chainChain","intermolecule","other","displayParameters","displayBackground","displayNumbering","displayNodeOutline","displayNodeLabel","displayLinks","displayPseudoknotLinks","displayProteinLinks","colorScheme","customColors","animation","deaf","rnas","createInitialLayout","structure","avoidOthers","rg","rnaJson","naViewPositions","naview_xy_coordinates","newLinks","addExternalLinks","addRNAJSON","centerView","referenceNode","newNodeNum","newDotbracket","newSequence","splice","newPositions","positionOffset","newUids","pair","externalLinks","rnaGraph","_ref","maxX","minX","_ref$avoidOthers","_ref$centerPos","_ref$centerView","totalX","totalY","nodeCount","forEach","recalculateGraph","update","transitionRNA","newStructure","nextFunction","duration","newRNAJson","gnodes","visNodes","nodeKey","transition","visLinks","linkKey","newNodes","createNewNodes","exit","remove","each","updateStyle","createNewLinks","callback","setTimeout","uidsToNodes","fakeLinks","linkIndex","addNodes","json","entry","maxY","addCustomColors","addCustomColorsText","customColorsText","cs","changeColorScheme","clearNodes","fromJSON","jsonString","err","ProteinGraph","setSize","offsetHeight","offsetWidth","zoomer","brusher","svg","setOutlineColor","newColorScheme","fstyle","ordinal","category10","interpolate","interpolateLab","addEventListener","behavior","zoom","scaleExtent","selected","previouslySelected","vis","translate","keydown","keyup","focus","svgGraph","mpos","resetMouseVars","datum","ctrlKeydown","extent","clear","getBoundingBoxTransform","minY","maxRadius","molWidth","molHeight","widthRatio","heightRatio","minRatio","newMolWidth","newMolHeight","bbTransform","force","charge","linkDistance","linkStrength","gravity","shiftKeydown","selectedNodes","mouseDownNode","collide","nx1","nx2","ny1","ny2","quad","x1","y1","x2","y2","point","resumeForce","resume","drag","sourceEvent","d1","fixed","dx","dy","keyCode","getStructuresDotBracket","updateRnaGraph","nucleotidePositions","labelPositions","removeLink","sequence1","sequence2","rnaDotBracket","dotBracket1","dotBracket2","positions1","positions2","uids1","uids2","rna1","rna2","removeBackBoneLink","extraLinkIndex","linkClick","fake","fake_fake","label_link","currIdx","nodeIdxs","idx1","idx2","addBackBoneLink","dotbracket1","dotbracket2","seq1","seq2","newSeq","toAddExternal","toDelete","newRna","addLink","nodeMouseclick","defaultPrevented","nodeMouseup","basepairPossible","linkMenu","linkContextMenu","nodeMousedown","startAnimation","stopAnimation","stop","setFriction","setCharge","setGravity","setPseudoknotStrength","linksEnter","linkLines","text","gnodesEnter","ease","labelAndProteinNodes","allLinks","xlink","realNodes","displayFakeLinks","geom","quadtree","visit","rnaPlot","height","nucleotideRadius","rnaEdgePadding","showNucleotideLabels","startNucleotideNumber","bundleExternalLinks","rnaLayout","namePosition","chart","selection","fillViewportTransform","xValues","yValues","xExtent","yExtent","xRange","yRange","createOtherScale","firstScale","newDomain","newRange","scaleFactor","newWidth","newMargin","createTransformToFillViewport","createLinks","gs","struct_name","createNucleotides","createLabels","nameLabel","xyPos","xy","textBBox","getBBox","textSize","plotSize","createName","nodesDict","linksList","results","ForceEdgeBundling","edges","compatibility_threshold","step_size","fbundling","d3line","line","edge_subpoint_data","makeExternalLinksBundle","_","rnaTreemap","rnaTreemapNode","treemap","sticky","read_in_bases","find_regions","construct_loop","find_central_loop","traverse_loop","npairs","nb1","ibase","retloop","cp","rp","rlp","maxconn","maxdepth","determine_depths","anchor_connection","xs","ys","xe","xn","yn","xc","yc","xo","yo","astart","aend","cpnext","acp","cpprev","ic","da","maxang","icstart","icend","icmiddle","icroot","done","done_all_connections","rooted","sign","midx","midy","nrx","nry","mx","my","vx","vy","dotmv","nmidx","nmidy","icstart1","icup","icdown","icnext","direction","dan","rr","cpx","cpy","cpnextx","cpnexty","cnx","rcn","rc","lnx","lny","rl","ac","acn","sx","sy","dcp","imaxloop","indice","atan2","set_radius","determine_radius","connected_connection","find_ic_middle","asin","construct_extruded_segment","generate_region","mindit","ci","sumn","sumd","dit","imindit","aend1","aend2","aave","a1","a2","dac","nstart","nend","collision","construct_circle_segment","minf2","maxf2","find_center_for_arc","h","hhi","hlow","disc","theta","iter","acos","noIterationFailureYet"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,OACA,mBAAAC,eAAAC,IACAD,OAAA,OAAAJ,GACA,iBAAAC,QACAA,QAAA,OAAAD,EAAAG,QAAA,OAEAJ,EAAA,OAAAC,EAAAD,EAAA,IARA,CASCO,OAAA,SAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAX,QAAA,IAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QA0DA,OArDAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAxB,GACA,oBAAAyB,eAAAC,aACAN,OAAAC,eAAArB,EAAAyB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAArB,EAAA,cAAiD2B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAlC,GACA,IAAAiB,EAAAjB,KAAA6B,WACA,WAA2B,OAAA7B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oBClFAxC,EAAAD,QAAAM,mBCCAL,EAAAD,QAAA,CAAkB0C,KAAA,cAAAC,KAAA,cAAAC,aAAA,sBAAAC,UAAA,mBAAAC,KAAA,cAAAC,UAAA,mBAAAC,YAAA,qBAAAC,SAAA,kBAAAC,MAAA,iCCqBlBjD,EAAAD,QAAiBQ,EAAQ,iCCtBzBA,EAAAgB,EAAA2B,GAAA3C,EAAAQ,EAAAmC,EAAA,+BAAAC,IAAA,IAAAC,EAAA7C,EAAA,GAAA8C,EAAA9C,EAAA,GAGO,SAAS4C,IACfG,KAAKC,KAAO,IAAIC,IAChBF,KAAKG,OAAS,IAAIC,IAElBJ,KAAKK,MAAQ,KACVL,KAAKM,IAAM,KACdN,KAAKO,KAAO,KACTP,KAAKQ,KAAO,KACZR,KAAKS,MAAQ,KAGhBT,KAAKU,SAAW,KAEhBV,KAAKW,OAAS,KAEdX,KAAKY,SAAU,EAGhBf,EAAWd,UAAU8B,OAAS,WAC7B,OAAOb,KAAKY,SAGbf,EAAWd,UAAU+B,QAAU,SAASD,GACvCb,KAAKY,QAAUC,GAGhBhB,EAAWd,UAAUgC,QAAU,WAC9B,OAAOf,KAAKC,MAGbJ,EAAWd,UAAUiC,QAAU,SAASf,GACvCD,KAAKC,KAAOA,GAGbJ,EAAWd,UAAUkC,UAAY,WAChC,OAAOjB,KAAKG,QAGbN,EAAWd,UAAUmC,UAAY,SAASf,GACzCH,KAAKG,OAASA,GAGfN,EAAWd,UAAUoC,SAAW,WAC/B,OAAOnB,KAAKK,OAGbR,EAAWd,UAAUqC,SAAW,SAASf,GACxCL,KAAKK,MAAQA,GAGdR,EAAWd,UAAUsC,OAAS,WAC7B,OAAOrB,KAAKM,KAGbT,EAAWd,UAAUuC,OAAS,SAAShB,GACtCN,KAAKM,IAAMA,GAGZT,EAAWd,UAAUwC,QAAU,WAC9B,OAAOvB,KAAKO,MAGbV,EAAWd,UAAUyC,QAAU,SAASjB,GACvCP,KAAKO,KAAOA,GAGbV,EAAWd,UAAU0C,QAAU,WAC9B,OAAOzB,KAAKQ,MAGbX,EAAWd,UAAU2C,QAAU,SAASlB,GACvCR,KAAKQ,KAAOA,GAGbX,EAAWd,UAAU4C,SAAW,WAC/B,OAAO3B,KAAKS,OAGbZ,EAAWd,UAAU6C,SAAW,SAASnB,GACxCT,KAAKS,MAAQA,GAGdZ,EAAWd,UAAU8C,WAAa,WACjC,OAAO7B,KAAKU,UAGbb,EAAWd,UAAU+C,YAAc,SAASpB,GAC3CV,KAAKU,SAAWA,GAGjBb,EAAWd,UAAUgD,SAAW,WAC/B,OAAO/B,KAAKW,QAGbd,EAAWd,UAAUiD,UAAY,SAASrB,GACzCX,KAAKW,OAASA,iCClGf1D,EAAAQ,EAAAmC,EAAA,sBAAAM,IAAA,IAAA+B,EAAAhF,EAAA,GAEO,SAASiD,IACfF,KAAKkC,YAAc,KACnBlC,KAAKmC,YAAc,GACnBnC,KAAKoC,aAAe,GACpBpC,KAAKqC,OAAS,KACdrC,KAAKsC,MAAQ,KACbtC,KAAKuC,KAAO,KACZvC,KAAKwC,EAAI,KACNxC,KAAKyC,EAAI,KACTzC,KAAK0C,OAAS,KAGlBxC,EAAKnB,UAAU4D,eAAiB,WAC/B,OAAO3C,KAAKkC,aAGbhC,EAAKnB,UAAU6D,eAAiB,SAASV,GACxClC,KAAKkC,YAAcA,GAGpBhC,EAAKnB,UAAU8D,cAAgB,SAAS1F,EAAGK,GACjC,MAALA,EACHwC,KAAKoC,aAAajF,GAAKK,GAGlBwC,KAAKoC,aAAajF,KACtB6C,KAAKoC,aAAajF,GAAK,IAAI0C,cAE5BG,KAAKoC,aAAajF,GAAG2D,SAAQ,KAI/BZ,EAAKnB,UAAU+D,cAAgB,SAAS3F,GACvC,IAAI0C,EAAalD,EAAQ,GACpBqD,KAAKoC,aAAajF,KAChB6C,KAAKoC,aAAajF,GAAK,IAAI0C,GAElC,IAAIrC,EAAIwC,KAAKoC,aAAajF,GAC1B,OAAIK,EAAEqD,SACE,KAGArD,GAIT0C,EAAKnB,UAAUgE,cAAgB,SAAS5F,EAAGK,GAC1CwC,KAAKoC,aAAaY,KAAKxF,IAGxB0C,EAAKnB,UAAUkE,UAAY,WAC1B,OAAOjD,KAAKqC,QAGbnC,EAAKnB,UAAUmE,UAAY,SAASb,GACnCrC,KAAKqC,OAASA,GAGfnC,EAAKnB,UAAUoE,SAAW,WACzB,OAAOnD,KAAKsC,OAGbpC,EAAKnB,UAAUqE,SAAW,SAASd,GAClCtC,KAAKsC,MAAQA,GAGdpC,EAAKnB,UAAUsE,OAAS,WACvB,OAAOrD,KAAKuC,MAGbrC,EAAKnB,UAAUuE,QAAU,SAASf,GACjCvC,KAAKuC,KAAOA,GAGbrC,EAAKnB,UAAUwE,KAAO,WACrB,OAAOvD,KAAKwC,GAGbtC,EAAKnB,UAAUyE,KAAO,SAAShB,GAC9BxC,KAAKwC,EAAIA,GAGVtC,EAAKnB,UAAU0E,KAAO,WACrB,OAAOzD,KAAKyC,GAGbvC,EAAKnB,UAAU2E,KAAO,SAASjB,GAC9BzC,KAAKyC,EAAIA,GAGVvC,EAAKnB,UAAU4E,UAAY,WAC1B,OAAO3D,KAAK0C,QAGbxC,EAAKnB,UAAU6E,UAAY,SAASlB,GACnC1C,KAAK0C,OAASA,iCCjGR,SAAStC,IACfJ,KAAK6D,QAAU,KACZ7D,KAAK8D,MAAQ,KACb9D,KAAK+D,QAAU,KACf/D,KAAKgE,MAAQ,KAJjB/G,EAAAQ,EAAAmC,EAAA,sBAAAQ,IAOAA,EAAOrB,UAAUkF,UAAY,WAC5B,OAAOjE,KAAK6D,SAGbzD,EAAOrB,UAAUmF,UAAY,SAASC,GACrCnE,KAAK6D,QAAUM,GAGhB/D,EAAOrB,UAAUqF,QAAU,WAC1B,OAAOpE,KAAK8D,OAGb1D,EAAOrB,UAAUsF,QAAU,SAASC,GACnCtE,KAAK8D,MAAQQ,GAGdlE,EAAOrB,UAAUwF,UAAY,WAC5B,OAAOvE,KAAK+D,SAGb3D,EAAOrB,UAAUyF,UAAY,SAASC,GACrCzE,KAAK+D,QAAUU,GAGhBrE,EAAOrB,UAAU2F,QAAU,WAC1B,OAAO1E,KAAKgE,OAGb5D,EAAOrB,UAAU4F,QAAU,SAASC,GACnC5E,KAAKgE,MAAQY,kBCpCd,IAAAC,EAGAA,EAAA,WACA,OAAA7E,KADA,GAIA,IAEA6E,KAAA,IAAAC,SAAA,iBACC,MAAAC,GAED,iBAAAjI,SAAA+H,EAAA/H,QAOAJ,EAAAD,QAAAoI,mBCnBAnI,EAAAD,QAAiBQ,EAAAgC,EAAuB,yDCAxC,SAAA+F,GAsBA,IAAAC,EAAWhI,EAAQ,IAMnBR,EAAAyI,OAAA,SAAAC,GACA,IAAAC,EAAAH,EAAAI,MAAAF,GAMA,OALA,IAAAH,EAAAI,GAAAE,SAAA,UAEAC,QAAA,WACAA,QAAA,WACAC,UAAA,OAOA/I,EAAAgJ,OAAA,SAAAC,GACA,IAAAC,EAAAD,EACAH,QAAA,UACAA,QAAA,UACA,KACA,OAAAN,EAAAW,QAAA,IAAAZ,EAAAW,EAAA,YAMAlJ,EAAAoJ,GAAA,WAOA,OANAZ,EAAAY,GAAA,SAAAb,EAAA,KACAM,SAAA,UAEAC,QAAA,WACAA,QAAA,WACAC,UAAA,OAeA/I,EAAAqJ,KAAA,WACA,IAAAV,EAAAH,EAAAY,GAAA,SAAAb,EAAA,KAOA,OANAI,EAAA,OAAAA,EAAA,GACAA,EAAAE,SAAA,UAEAC,QAAA,WACAA,QAAA,WACAC,UAAA,+DChFA,SAAAO;;;;;;;AAUA,IAAAJ,EAAa1I,EAAQ,IACrB+I,EAAc/I,EAAQ,IACtBgJ,EAAchJ,EAAQ,IAmDtB,SAAAiJ,IACA,OAAAlB,EAAAmB,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAAC,GACA,GAAAJ,IAAAI,EACA,UAAAC,WAAA,8BAcA,OAZAvB,EAAAmB,qBAEAE,EAAA,IAAAG,WAAAF,IACAG,UAAAzB,EAAAjG,WAGA,OAAAsH,IACAA,EAAA,IAAArB,EAAAsB,IAEAD,EAAAC,UAGAD,EAaA,SAAArB,EAAA0B,EAAAC,EAAAL,GACA,KAAAtB,EAAAmB,qBAAAnG,gBAAAgF,GACA,WAAAA,EAAA0B,EAAAC,EAAAL,GAIA,oBAAAI,EAAA,CACA,oBAAAC,EACA,UAAAC,MACA,qEAGA,OAAAC,EAAA7G,KAAA0G,GAEA,OAAAI,EAAA9G,KAAA0G,EAAAC,EAAAL,GAWA,SAAAQ,EAAAT,EAAAjI,EAAAuI,EAAAL,GACA,oBAAAlI,EACA,UAAA2I,UAAA,yCAGA,0BAAAC,aAAA5I,aAAA4I,YA6HA,SAAAX,EAAAY,EAAAC,EAAAZ,GAGA,GAFAW,EAAAE,WAEAD,EAAA,GAAAD,EAAAE,WAAAD,EACA,UAAAX,WAAA,6BAGA,GAAAU,EAAAE,WAAAD,GAAAZ,GAAA,GACA,UAAAC,WAAA,6BAIAU,OADAG,IAAAF,QAAAE,IAAAd,EACA,IAAAE,WAAAS,QACGG,IAAAd,EACH,IAAAE,WAAAS,EAAAC,GAEA,IAAAV,WAAAS,EAAAC,EAAAZ,GAGAtB,EAAAmB,qBAEAE,EAAAY,GACAR,UAAAzB,EAAAjG,UAGAsH,EAAAgB,EAAAhB,EAAAY,GAEA,OAAAZ,EAvJAiB,CAAAjB,EAAAjI,EAAAuI,EAAAL,GAGA,iBAAAlI,EAwFA,SAAAiI,EAAAkB,EAAAC,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAxC,EAAAyC,WAAAD,GACA,UAAAT,UAAA,8CAGA,IAAAT,EAAA,EAAAa,EAAAI,EAAAC,GAGAE,GAFArB,EAAAD,EAAAC,EAAAC,IAEAqB,MAAAJ,EAAAC,GAEAE,IAAApB,IAIAD,IAAAuB,MAAA,EAAAF,IAGA,OAAArB,EA5GAwB,CAAAxB,EAAAjI,EAAAuI,GAsJA,SAAAN,EAAAyB,GACA,GAAA9C,EAAA+C,SAAAD,GAAA,CACA,IAAAE,EAAA,EAAAC,EAAAH,EAAAxB,QAGA,YAFAD,EAAAD,EAAAC,EAAA2B,IAEA1B,OACAD,GAGAyB,EAAAI,KAAA7B,EAAA,IAAA2B,GACA3B,GAGA,GAAAyB,EAAA,CACA,uBAAAd,aACAc,EAAAK,kBAAAnB,aAAA,WAAAc,EACA,uBAAAA,EAAAxB,SA+8CA8B,EA/8CAN,EAAAxB,SAg9CA8B,EA/8CAhC,EAAAC,EAAA,GAEAgB,EAAAhB,EAAAyB,GAGA,cAAAA,EAAAO,MAAApC,EAAA6B,EAAAQ,MACA,OAAAjB,EAAAhB,EAAAyB,EAAAQ,MAw8CA,IAAAF,EAp8CA,UAAArB,UAAA,sFA9KAwB,CAAAlC,EAAAjI,GA4BA,SAAAoK,EAAAC,GACA,oBAAAA,EACA,UAAA1B,UAAA,oCACG,GAAA0B,EAAA,EACH,UAAAlC,WAAA,wCA4BA,SAAAM,EAAAR,EAAAoC,GAGA,GAFAD,EAAAC,GACApC,EAAAD,EAAAC,EAAAoC,EAAA,MAAAR,EAAAQ,KACAzD,EAAAmB,oBACA,QAAAhJ,EAAA,EAAmBA,EAAAsL,IAAUtL,EAC7BkJ,EAAAlJ,GAAA,EAGA,OAAAkJ,EAwCA,SAAAgB,EAAAhB,EAAAY,GACA,IAAAX,EAAAW,EAAAX,OAAA,MAAA2B,EAAAhB,EAAAX,QACAD,EAAAD,EAAAC,EAAAC,GACA,QAAAnJ,EAAA,EAAiBA,EAAAmJ,EAAYnJ,GAAA,EAC7BkJ,EAAAlJ,GAAA,IAAA8J,EAAA9J,GAEA,OAAAkJ,EA+DA,SAAA4B,EAAA3B,GAGA,GAAAA,GAAAJ,IACA,UAAAK,WAAA,0DACAL,IAAAZ,SAAA,cAEA,SAAAgB,EAsFA,SAAAa,EAAAI,EAAAC,GACA,GAAAxC,EAAA+C,SAAAR,GACA,OAAAA,EAAAjB,OAEA,uBAAAU,aAAA,mBAAAA,YAAA0B,SACA1B,YAAA0B,OAAAnB,iBAAAP,aACA,OAAAO,EAAAJ,WAEA,iBAAAI,IACAA,EAAA,GAAAA,GAGA,IAAAS,EAAAT,EAAAjB,OACA,OAAA0B,EAAA,SAIA,IADA,IAAAW,GAAA,IAEA,OAAAnB,GACA,YACA,aACA,aACA,OAAAQ,EACA,WACA,YACA,UAAAZ,EACA,OAAAwB,EAAArB,GAAAjB,OACA,WACA,YACA,cACA,eACA,SAAA0B,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAAa,EAAAtB,GAAAjB,OACA,QACA,GAAAqC,EAAA,OAAAC,EAAArB,GAAAjB,OACAkB,GAAA,GAAAA,GAAAsB,cACAH,GAAA,GAgFA,SAAAI,EAAAC,EAAApK,EAAArB,GACA,IAAAJ,EAAA6L,EAAApK,GACAoK,EAAApK,GAAAoK,EAAAzL,GACAyL,EAAAzL,GAAAJ,EAmIA,SAAA8L,EAAAd,EAAAC,EAAAlB,EAAAM,EAAA0B,GAEA,OAAAf,EAAA7B,OAAA,SAmBA,GAhBA,iBAAAY,GACAM,EAAAN,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAiC,MAAAjC,KAEAA,EAAAgC,EAAA,EAAAf,EAAA7B,OAAA,GAIAY,EAAA,IAAAA,EAAAiB,EAAA7B,OAAAY,GACAA,GAAAiB,EAAA7B,OAAA,CACA,GAAA4C,EAAA,SACAhC,EAAAiB,EAAA7B,OAAA,OACG,GAAAY,EAAA,GACH,IAAAgC,EACA,SADAhC,EAAA,EAUA,GALA,iBAAAkB,IACAA,EAAApD,EAAA8B,KAAAsB,EAAAZ,IAIAxC,EAAA+C,SAAAK,GAEA,WAAAA,EAAA9B,QACA,EAEA8C,EAAAjB,EAAAC,EAAAlB,EAAAM,EAAA0B,GACG,oBAAAd,EAEH,OADAA,GAAA,IACApD,EAAAmB,qBACA,mBAAAK,WAAAzH,UAAAsK,QACAH,EACA1C,WAAAzH,UAAAsK,QAAA/L,KAAA6K,EAAAC,EAAAlB,GAEAV,WAAAzH,UAAAuK,YAAAhM,KAAA6K,EAAAC,EAAAlB,GAGAkC,EAAAjB,EAAA,CAAAC,GAAAlB,EAAAM,EAAA0B,GAGA,UAAAnC,UAAA,wCAGA,SAAAqC,EAAAG,EAAAnB,EAAAlB,EAAAM,EAAA0B,GACA,IA0BA/L,EA1BAqM,EAAA,EACAC,EAAAF,EAAAjD,OACAoD,EAAAtB,EAAA9B,OAEA,QAAAc,IAAAI,IAEA,UADAA,EAAAmC,OAAAnC,GAAAsB,gBACA,UAAAtB,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA+B,EAAAjD,OAAA,GAAA8B,EAAA9B,OAAA,EACA,SAEAkD,EAAA,EACAC,GAAA,EACAC,GAAA,EACAxC,GAAA,EAIA,SAAA0C,EAAAC,EAAA1M,GACA,WAAAqM,EACAK,EAAA1M,GAEA0M,EAAAC,aAAA3M,EAAAqM,GAKA,GAAAN,EAAA,CACA,IAAAa,GAAA,EACA,IAAA5M,EAAA+J,EAAwB/J,EAAAsM,EAAetM,IACvC,GAAAyM,EAAAL,EAAApM,KAAAyM,EAAAxB,GAAA,IAAA2B,EAAA,EAAA5M,EAAA4M,IAEA,IADA,IAAAA,MAAA5M,GACAA,EAAA4M,EAAA,IAAAL,EAAA,OAAAK,EAAAP,OAEA,IAAAO,IAAA5M,KAAA4M,GACAA,GAAA,OAKA,IADA7C,EAAAwC,EAAAD,IAAAvC,EAAAuC,EAAAC,GACAvM,EAAA+J,EAAwB/J,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAA6M,GAAA,EACAC,EAAA,EAAqBA,EAAAP,EAAeO,IACpC,GAAAL,EAAAL,EAAApM,EAAA8M,KAAAL,EAAAxB,EAAA6B,GAAA,CACAD,GAAA,EACA,MAGA,GAAAA,EAAA,OAAA7M,EAIA,SAeA,SAAA+M,EAAAL,EAAAtC,EAAA4C,EAAA7D,GACA6D,EAAAC,OAAAD,IAAA,EACA,IAAAE,EAAAR,EAAAvD,OAAA6D,EACA7D,GAGAA,EAAA8D,OAAA9D,IACA+D,IACA/D,EAAA+D,GAJA/D,EAAA+D,EASA,IAAAC,EAAA/C,EAAAjB,OACA,GAAAgE,EAAA,eAAAvD,UAAA,sBAEAT,EAAAgE,EAAA,IACAhE,EAAAgE,EAAA,GAEA,QAAAnN,EAAA,EAAiBA,EAAAmJ,IAAYnJ,EAAA,CAC7B,IAAAoN,EAAAC,SAAAjD,EAAAkD,OAAA,EAAAtN,EAAA,OACA,GAAAgM,MAAAoB,GAAA,OAAApN,EACA0M,EAAAM,EAAAhN,GAAAoN,EAEA,OAAApN,EAGA,SAAAuN,EAAAb,EAAAtC,EAAA4C,EAAA7D,GACA,OAAAqE,EAAA/B,EAAArB,EAAAsC,EAAAvD,OAAA6D,GAAAN,EAAAM,EAAA7D,GAGA,SAAAsE,EAAAf,EAAAtC,EAAA4C,EAAA7D,GACA,OAAAqE,EAq6BA,SAAAE,GAEA,IADA,IAAAC,EAAA,GACA3N,EAAA,EAAiBA,EAAA0N,EAAAvE,SAAgBnJ,EAEjC2N,EAAA9H,KAAA,IAAA6H,EAAAE,WAAA5N,IAEA,OAAA2N,EA36BAE,CAAAzD,GAAAsC,EAAAM,EAAA7D,GAGA,SAAA2E,EAAApB,EAAAtC,EAAA4C,EAAA7D,GACA,OAAAsE,EAAAf,EAAAtC,EAAA4C,EAAA7D,GAGA,SAAA4E,EAAArB,EAAAtC,EAAA4C,EAAA7D,GACA,OAAAqE,EAAA9B,EAAAtB,GAAAsC,EAAAM,EAAA7D,GAGA,SAAA6E,EAAAtB,EAAAtC,EAAA4C,EAAA7D,GACA,OAAAqE,EAk6BA,SAAAE,EAAAO,GAGA,IAFA,IAAA5N,EAAA6N,EAAAC,EACAR,EAAA,GACA3N,EAAA,EAAiBA,EAAA0N,EAAAvE,WACjB8E,GAAA,QADiCjO,EAGjCK,EAAAqN,EAAAE,WAAA5N,GACAkO,EAAA7N,GAAA,EACA8N,EAAA9N,EAAA,IACAsN,EAAA9H,KAAAsI,GACAR,EAAA9H,KAAAqI,GAGA,OAAAP,EA/6BAS,CAAAhE,EAAAsC,EAAAvD,OAAA6D,GAAAN,EAAAM,EAAA7D,GAkFA,SAAAkF,EAAA3B,EAAAxJ,EAAAC,GACA,WAAAD,GAAAC,IAAAuJ,EAAAvD,OACAX,EAAA8F,cAAA5B,GAEAlE,EAAA8F,cAAA5B,EAAAjC,MAAAvH,EAAAC,IAIA,SAAAoL,EAAA7B,EAAAxJ,EAAAC,GACAA,EAAAqL,KAAAC,IAAA/B,EAAAvD,OAAAhG,GAIA,IAHA,IAAAuL,EAAA,GAEA1O,EAAAkD,EACAlD,EAAAmD,GAAA,CACA,IAQAwL,EAAAC,EAAAC,EAAAC,EARAC,EAAArC,EAAA1M,GACAgP,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAA/O,EAAAiP,GAAA9L,EAGA,OAAA8L,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OAEA,WADAJ,EAAAjC,EAAA1M,EAAA,OAEA8O,GAAA,GAAAC,IAAA,KAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,OACAH,EAAAjC,EAAA1M,EAAA,GACA4O,EAAAlC,EAAA1M,EAAA,GACA,UAAA2O,IAAA,UAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,OACAH,EAAAjC,EAAA1M,EAAA,GACA4O,EAAAlC,EAAA1M,EAAA,GACA6O,EAAAnC,EAAA1M,EAAA,GACA,UAAA2O,IAAA,UAAAC,IAAA,UAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACAN,EAAA7I,KAAAmJ,IAAA,eACAA,EAAA,WAAAA,GAGAN,EAAA7I,KAAAmJ,GACAhP,GAAAiP,EAGA,OAQA,SAAAC,GACA,IAAArE,EAAAqE,EAAA/F,OACA,GAAA0B,GAAAsE,EACA,OAAA3C,OAAA4C,aAAAC,MAAA7C,OAAA0C,GAIA,IAAAR,EAAA,GACA1O,EAAA,EACA,KAAAA,EAAA6K,GACA6D,GAAAlC,OAAA4C,aAAAC,MACA7C,OACA0C,EAAAzE,MAAAzK,KAAAmP,IAGA,OAAAT,EAvBAY,CAAAZ,GA98BApP,EAAAuI,SACAvI,EAAAiQ,WAoTA,SAAApG,IACAA,OACAA,EAAA,GAEA,OAAAtB,EAAA2H,OAAArG,IAvTA7J,EAAAmQ,kBAAA,GA0BA5H,EAAAmB,yBAAAiB,IAAArB,EAAAI,oBACAJ,EAAAI,oBAQA,WACA,IACA,IAAAoD,EAAA,IAAA/C,WAAA,GAEA,OADA+C,EAAA9C,UAAA,CAAqBA,UAAAD,WAAAzH,UAAA8N,IAAA,WAAmD,YACxE,KAAAtD,EAAAsD,OACA,mBAAAtD,EAAAuD,UACA,IAAAvD,EAAAuD,SAAA,KAAA3F,WACG,MAAApC,GACH,UAfAgI,GAKAtQ,EAAAyJ,eAkEAlB,EAAAgI,SAAA,KAGAhI,EAAAiI,SAAA,SAAA1D,GAEA,OADAA,EAAA9C,UAAAzB,EAAAjG,UACAwK,GA2BAvE,EAAA8B,KAAA,SAAA1I,EAAAuI,EAAAL,GACA,OAAAQ,EAAA,KAAA1I,EAAAuI,EAAAL,IAGAtB,EAAAmB,sBACAnB,EAAAjG,UAAA0H,UAAAD,WAAAzH,UACAiG,EAAAyB,UAAAD,WACA,oBAAAtI,eAAAgP,SACAlI,EAAA9G,OAAAgP,WAAAlI,GAEAnH,OAAAC,eAAAkH,EAAA9G,OAAAgP,QAAA,CACA9O,MAAA,KACA+O,cAAA,KAiCAnI,EAAA2H,MAAA,SAAAlE,EAAA2E,EAAA5F,GACA,OArBA,SAAAnB,EAAAoC,EAAA2E,EAAA5F,GAEA,OADAgB,EAAAC,GACAA,GAAA,EACArC,EAAAC,EAAAoC,QAEArB,IAAAgG,EAIA,iBAAA5F,EACApB,EAAAC,EAAAoC,GAAA2E,OAAA5F,GACApB,EAAAC,EAAAoC,GAAA2E,QAEAhH,EAAAC,EAAAoC,GAQAkE,CAAA,KAAAlE,EAAA2E,EAAA5F,IAiBAxC,EAAA6B,YAAA,SAAA4B,GACA,OAAA5B,EAAA,KAAA4B,IAKAzD,EAAAqI,gBAAA,SAAA5E,GACA,OAAA5B,EAAA,KAAA4B,IAiHAzD,EAAA+C,SAAA,SAAAiB,GACA,cAAAA,MAAAsE,YAGAtI,EAAAuI,QAAA,SAAAC,EAAAxE,GACA,IAAAhE,EAAA+C,SAAAyF,KAAAxI,EAAA+C,SAAAiB,GACA,UAAAjC,UAAA,6BAGA,GAAAyG,IAAAxE,EAAA,SAKA,IAHA,IAAAxG,EAAAgL,EAAAlH,OACA7D,EAAAuG,EAAA1C,OAEAnJ,EAAA,EAAA6K,EAAA2D,KAAAC,IAAApJ,EAAAC,GAAuCtF,EAAA6K,IAAS7K,EAChD,GAAAqQ,EAAArQ,KAAA6L,EAAA7L,GAAA,CACAqF,EAAAgL,EAAArQ,GACAsF,EAAAuG,EAAA7L,GACA,MAIA,OAAAqF,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGAwC,EAAAyC,WAAA,SAAAD,GACA,OAAAmC,OAAAnC,GAAAsB,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIA9D,EAAAyI,OAAA,SAAAC,EAAApH,GACA,IAAAL,EAAAyH,GACA,UAAA3G,UAAA,+CAGA,OAAA2G,EAAApH,OACA,OAAAtB,EAAA2H,MAAA,GAGA,IAAAxP,EACA,QAAAiK,IAAAd,EAEA,IADAA,EAAA,EACAnJ,EAAA,EAAeA,EAAAuQ,EAAApH,SAAiBnJ,EAChCmJ,GAAAoH,EAAAvQ,GAAAmJ,OAIA,IAAA6B,EAAAnD,EAAA6B,YAAAP,GACAqH,EAAA,EACA,IAAAxQ,EAAA,EAAaA,EAAAuQ,EAAApH,SAAiBnJ,EAAA,CAC9B,IAAA0M,EAAA6D,EAAAvQ,GACA,IAAA6H,EAAA+C,SAAA8B,GACA,UAAA9C,UAAA,+CAEA8C,EAAA3B,KAAAC,EAAAwF,GACAA,GAAA9D,EAAAvD,OAEA,OAAA6B,GA8CAnD,EAAAmC,aA0EAnC,EAAAjG,UAAAuO,WAAA,EAQAtI,EAAAjG,UAAA6O,OAAA,WACA,IAAA5F,EAAAhI,KAAAsG,OACA,GAAA0B,EAAA,KACA,UAAAzB,WAAA,6CAEA,QAAApJ,EAAA,EAAiBA,EAAA6K,EAAS7K,GAAA,EAC1B4L,EAAA/I,KAAA7C,IAAA,GAEA,OAAA6C,MAGAgF,EAAAjG,UAAA8O,OAAA,WACA,IAAA7F,EAAAhI,KAAAsG,OACA,GAAA0B,EAAA,KACA,UAAAzB,WAAA,6CAEA,QAAApJ,EAAA,EAAiBA,EAAA6K,EAAS7K,GAAA,EAC1B4L,EAAA/I,KAAA7C,IAAA,GACA4L,EAAA/I,KAAA7C,EAAA,EAAAA,EAAA,GAEA,OAAA6C,MAGAgF,EAAAjG,UAAA+O,OAAA,WACA,IAAA9F,EAAAhI,KAAAsG,OACA,GAAA0B,EAAA,KACA,UAAAzB,WAAA,6CAEA,QAAApJ,EAAA,EAAiBA,EAAA6K,EAAS7K,GAAA,EAC1B4L,EAAA/I,KAAA7C,IAAA,GACA4L,EAAA/I,KAAA7C,EAAA,EAAAA,EAAA,GACA4L,EAAA/I,KAAA7C,EAAA,EAAAA,EAAA,GACA4L,EAAA/I,KAAA7C,EAAA,EAAAA,EAAA,GAEA,OAAA6C,MAGAgF,EAAAjG,UAAAuG,SAAA,WACA,IAAAgB,EAAA,EAAAtG,KAAAsG,OACA,WAAAA,EAAA,GACA,IAAAyH,UAAAzH,OAAAoF,EAAA1L,KAAA,EAAAsG,GAxHA,SAAAkB,EAAAnH,EAAAC,GACA,IAAAqI,GAAA,EAcA,SALAvB,IAAA/G,KAAA,KACAA,EAAA,GAIAA,EAAAL,KAAAsG,OACA,SAOA,SAJAc,IAAA9G,KAAAN,KAAAsG,UACAhG,EAAAN,KAAAsG,QAGAhG,GAAA,EACA,SAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,SAKA,IAFAmH,MAAA,UAGA,OAAAA,GACA,UACA,OAAAwG,EAAAhO,KAAAK,EAAAC,GAEA,WACA,YACA,OAAAoL,EAAA1L,KAAAK,EAAAC,GAEA,YACA,OAAA2N,EAAAjO,KAAAK,EAAAC,GAEA,aACA,aACA,OAAA4N,EAAAlO,KAAAK,EAAAC,GAEA,aACA,OAAAkL,EAAAxL,KAAAK,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAA6N,EAAAnO,KAAAK,EAAAC,GAEA,QACA,GAAAqI,EAAA,UAAA5B,UAAA,qBAAAS,GACAA,KAAA,IAAAsB,cACAH,GAAA,IAwDA6D,MAAAxM,KAAA+N,YAGA/I,EAAAjG,UAAAqP,OAAA,SAAApF,GACA,IAAAhE,EAAA+C,SAAAiB,GAAA,UAAAjC,UAAA,6BACA,OAAA/G,OAAAgJ,GACA,IAAAhE,EAAAuI,QAAAvN,KAAAgJ,IAGAhE,EAAAjG,UAAAsP,QAAA,WACA,IAAAxD,EAAA,GACAyD,EAAA7R,EAAAmQ,kBAKA,OAJA5M,KAAAsG,OAAA,IACAuE,EAAA7K,KAAAsF,SAAA,QAAAgJ,GAAAC,MAAA,SAAkDC,KAAA,KAClDxO,KAAAsG,OAAAgI,IAAAzD,GAAA,UAEA,WAAAA,EAAA,KAGA7F,EAAAjG,UAAAwO,QAAA,SAAAkB,EAAApO,EAAAC,EAAAoO,EAAAC,GACA,IAAA3J,EAAA+C,SAAA0G,GACA,UAAA1H,UAAA,6BAgBA,QAbAK,IAAA/G,IACAA,EAAA,QAEA+G,IAAA9G,IACAA,EAAAmO,IAAAnI,OAAA,QAEAc,IAAAsH,IACAA,EAAA,QAEAtH,IAAAuH,IACAA,EAAA3O,KAAAsG,QAGAjG,EAAA,GAAAC,EAAAmO,EAAAnI,QAAAoI,EAAA,GAAAC,EAAA3O,KAAAsG,OACA,UAAAC,WAAA,sBAGA,GAAAmI,GAAAC,GAAAtO,GAAAC,EACA,SAEA,GAAAoO,GAAAC,EACA,SAEA,GAAAtO,GAAAC,EACA,SAQA,GAAAN,OAAAyO,EAAA,SASA,IAPA,IAAAjM,GAJAmM,KAAA,IADAD,KAAA,GAMAjM,GAPAnC,KAAA,IADAD,KAAA,GASA2H,EAAA2D,KAAAC,IAAApJ,EAAAC,GAEAmM,EAAA5O,KAAA4H,MAAA8G,EAAAC,GACAE,EAAAJ,EAAA7G,MAAAvH,EAAAC,GAEAnD,EAAA,EAAiBA,EAAA6K,IAAS7K,EAC1B,GAAAyR,EAAAzR,KAAA0R,EAAA1R,GAAA,CACAqF,EAAAoM,EAAAzR,GACAsF,EAAAoM,EAAA1R,GACA,MAIA,OAAAqF,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA6HAwC,EAAAjG,UAAA+P,SAAA,SAAA1G,EAAAlB,EAAAM,GACA,WAAAxH,KAAAqJ,QAAAjB,EAAAlB,EAAAM,IAGAxC,EAAAjG,UAAAsK,QAAA,SAAAjB,EAAAlB,EAAAM,GACA,OAAAyB,EAAAjJ,KAAAoI,EAAAlB,EAAAM,GAAA,IAGAxC,EAAAjG,UAAAuK,YAAA,SAAAlB,EAAAlB,EAAAM,GACA,OAAAyB,EAAAjJ,KAAAoI,EAAAlB,EAAAM,GAAA,IAkDAxC,EAAAjG,UAAA4I,MAAA,SAAAJ,EAAA4C,EAAA7D,EAAAkB,GAEA,QAAAJ,IAAA+C,EACA3C,EAAA,OACAlB,EAAAtG,KAAAsG,OACA6D,EAAA,OAEG,QAAA/C,IAAAd,GAAA,iBAAA6D,EACH3C,EAAA2C,EACA7D,EAAAtG,KAAAsG,OACA6D,EAAA,MAEG,KAAA4E,SAAA5E,GAWH,UAAAvD,MACA,2EAXAuD,GAAA,EACA4E,SAAAzI,IACAA,GAAA,OACAc,IAAAI,MAAA,UAEAA,EAAAlB,EACAA,OAAAc,GASA,IAAAiD,EAAArK,KAAAsG,OAAA6D,EAGA,SAFA/C,IAAAd,KAAA+D,KAAA/D,EAAA+D,GAEA9C,EAAAjB,OAAA,IAAAA,EAAA,GAAA6D,EAAA,IAAAA,EAAAnK,KAAAsG,OACA,UAAAC,WAAA,0CAGAiB,MAAA,QAGA,IADA,IAAAmB,GAAA,IAEA,OAAAnB,GACA,UACA,OAAA0C,EAAAlK,KAAAuH,EAAA4C,EAAA7D,GAEA,WACA,YACA,OAAAoE,EAAA1K,KAAAuH,EAAA4C,EAAA7D,GAEA,YACA,OAAAsE,EAAA5K,KAAAuH,EAAA4C,EAAA7D,GAEA,aACA,aACA,OAAA2E,EAAAjL,KAAAuH,EAAA4C,EAAA7D,GAEA,aAEA,OAAA4E,EAAAlL,KAAAuH,EAAA4C,EAAA7D,GAEA,WACA,YACA,cACA,eACA,OAAA6E,EAAAnL,KAAAuH,EAAA4C,EAAA7D,GAEA,QACA,GAAAqC,EAAA,UAAA5B,UAAA,qBAAAS,GACAA,GAAA,GAAAA,GAAAsB,cACAH,GAAA,IAKA3D,EAAAjG,UAAAiQ,OAAA,WACA,OACA3G,KAAA,SACAC,KAAA2G,MAAAlQ,UAAA6I,MAAAtK,KAAA0C,KAAAkP,MAAAlP,KAAA,KAwFA,IAAAsM,EAAA,KAoBA,SAAA2B,EAAApE,EAAAxJ,EAAAC,GACA,IAAA6O,EAAA,GACA7O,EAAAqL,KAAAC,IAAA/B,EAAAvD,OAAAhG,GAEA,QAAAnD,EAAAkD,EAAqBlD,EAAAmD,IAASnD,EAC9BgS,GAAAxF,OAAA4C,aAAA,IAAA1C,EAAA1M,IAEA,OAAAgS,EAGA,SAAAjB,EAAArE,EAAAxJ,EAAAC,GACA,IAAA6O,EAAA,GACA7O,EAAAqL,KAAAC,IAAA/B,EAAAvD,OAAAhG,GAEA,QAAAnD,EAAAkD,EAAqBlD,EAAAmD,IAASnD,EAC9BgS,GAAAxF,OAAA4C,aAAA1C,EAAA1M,IAEA,OAAAgS,EAGA,SAAAnB,EAAAnE,EAAAxJ,EAAAC,GACA,IAAA0H,EAAA6B,EAAAvD,SAEAjG,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAA0H,KAAA1H,EAAA0H,GAGA,IADA,IAAAoH,EAAA,GACAjS,EAAAkD,EAAqBlD,EAAAmD,IAASnD,EAC9BiS,GAAAC,EAAAxF,EAAA1M,IAEA,OAAAiS,EAGA,SAAAjB,EAAAtE,EAAAxJ,EAAAC,GAGA,IAFA,IAAA8E,EAAAyE,EAAAjC,MAAAvH,EAAAC,GACAuL,EAAA,GACA1O,EAAA,EAAiBA,EAAAiI,EAAAkB,OAAkBnJ,GAAA,EACnC0O,GAAAlC,OAAA4C,aAAAnH,EAAAjI,GAAA,IAAAiI,EAAAjI,EAAA,IAEA,OAAA0O,EA0CA,SAAAyD,EAAAnF,EAAAoF,EAAAjJ,GACA,GAAA6D,EAAA,MAAAA,EAAA,YAAA5D,WAAA,sBACA,GAAA4D,EAAAoF,EAAAjJ,EAAA,UAAAC,WAAA,yCA+JA,SAAAiJ,EAAA3F,EAAAzL,EAAA+L,EAAAoF,EAAAjB,EAAA1C,GACA,IAAA5G,EAAA+C,SAAA8B,GAAA,UAAA9C,UAAA,+CACA,GAAA3I,EAAAkQ,GAAAlQ,EAAAwN,EAAA,UAAArF,WAAA,qCACA,GAAA4D,EAAAoF,EAAA1F,EAAAvD,OAAA,UAAAC,WAAA,sBAkDA,SAAAkJ,EAAA5F,EAAAzL,EAAA+L,EAAAuF,GACAtR,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAAjB,EAAA,EAAA8M,EAAA0B,KAAAC,IAAA/B,EAAAvD,OAAA6D,EAAA,GAAuDhN,EAAA8M,IAAO9M,EAC9D0M,EAAAM,EAAAhN,IAAAiB,EAAA,QAAAsR,EAAAvS,EAAA,EAAAA,MACA,GAAAuS,EAAAvS,EAAA,EAAAA,GA8BA,SAAAwS,EAAA9F,EAAAzL,EAAA+L,EAAAuF,GACAtR,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAAjB,EAAA,EAAA8M,EAAA0B,KAAAC,IAAA/B,EAAAvD,OAAA6D,EAAA,GAAuDhN,EAAA8M,IAAO9M,EAC9D0M,EAAAM,EAAAhN,GAAAiB,IAAA,GAAAsR,EAAAvS,EAAA,EAAAA,GAAA,IAmJA,SAAAyS,EAAA/F,EAAAzL,EAAA+L,EAAAoF,EAAAjB,EAAA1C,GACA,GAAAzB,EAAAoF,EAAA1F,EAAAvD,OAAA,UAAAC,WAAA,sBACA,GAAA4D,EAAA,YAAA5D,WAAA,sBAGA,SAAAsJ,EAAAhG,EAAAzL,EAAA+L,EAAAuF,EAAAI,GAKA,OAJAA,GACAF,EAAA/F,EAAAzL,EAAA+L,EAAA,GAEAnE,EAAA2B,MAAAkC,EAAAzL,EAAA+L,EAAAuF,EAAA,MACAvF,EAAA,EAWA,SAAA4F,EAAAlG,EAAAzL,EAAA+L,EAAAuF,EAAAI,GAKA,OAJAA,GACAF,EAAA/F,EAAAzL,EAAA+L,EAAA,GAEAnE,EAAA2B,MAAAkC,EAAAzL,EAAA+L,EAAAuF,EAAA,MACAvF,EAAA,EA/cAnF,EAAAjG,UAAA6I,MAAA,SAAAvH,EAAAC,GACA,IAoBA0P,EApBAhI,EAAAhI,KAAAsG,OAqBA,IApBAjG,OAGA,GACAA,GAAA2H,GACA,IAAA3H,EAAA,GACGA,EAAA2H,IACH3H,EAAA2H,IANA1H,OAAA8G,IAAA9G,EAAA0H,IAAA1H,GASA,GACAA,GAAA0H,GACA,IAAA1H,EAAA,GACGA,EAAA0H,IACH1H,EAAA0H,GAGA1H,EAAAD,IAAAC,EAAAD,GAGA2E,EAAAmB,qBACA6J,EAAAhQ,KAAA8M,SAAAzM,EAAAC,IACAmG,UAAAzB,EAAAjG,cACG,CACH,IAAAkR,EAAA3P,EAAAD,EACA2P,EAAA,IAAAhL,EAAAiL,OAAA7I,GACA,QAAAjK,EAAA,EAAmBA,EAAA8S,IAAc9S,EACjC6S,EAAA7S,GAAA6C,KAAA7C,EAAAkD,GAIA,OAAA2P,GAWAhL,EAAAjG,UAAAmR,WAAA,SAAA/F,EAAAhD,EAAA2I,GACA3F,GAAA,EACAhD,GAAA,EACA2I,GAAAR,EAAAnF,EAAAhD,EAAAnH,KAAAsG,QAKA,IAHA,IAAA8B,EAAApI,KAAAmK,GACAgG,EAAA,EACAhT,EAAA,IACAA,EAAAgK,IAAAgJ,GAAA,MACA/H,GAAApI,KAAAmK,EAAAhN,GAAAgT,EAGA,OAAA/H,GAGApD,EAAAjG,UAAAqR,WAAA,SAAAjG,EAAAhD,EAAA2I,GACA3F,GAAA,EACAhD,GAAA,EACA2I,GACAR,EAAAnF,EAAAhD,EAAAnH,KAAAsG,QAKA,IAFA,IAAA8B,EAAApI,KAAAmK,IAAAhD,GACAgJ,EAAA,EACAhJ,EAAA,IAAAgJ,GAAA,MACA/H,GAAApI,KAAAmK,IAAAhD,GAAAgJ,EAGA,OAAA/H,GAGApD,EAAAjG,UAAAsR,UAAA,SAAAlG,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAtG,KAAAmK,IAGAnF,EAAAjG,UAAAuR,aAAA,SAAAnG,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAtG,KAAAmK,GAAAnK,KAAAmK,EAAA,OAGAnF,EAAAjG,UAAA+K,aAAA,SAAAK,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAtG,KAAAmK,IAAA,EAAAnK,KAAAmK,EAAA,IAGAnF,EAAAjG,UAAAwR,aAAA,SAAApG,EAAA2F,GAGA,OAFAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,SAEAtG,KAAAmK,GACAnK,KAAAmK,EAAA,MACAnK,KAAAmK,EAAA,QACA,SAAAnK,KAAAmK,EAAA,IAGAnF,EAAAjG,UAAAyR,aAAA,SAAArG,EAAA2F,GAGA,OAFAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QAEA,SAAAtG,KAAAmK,IACAnK,KAAAmK,EAAA,OACAnK,KAAAmK,EAAA,MACAnK,KAAAmK,EAAA,KAGAnF,EAAAjG,UAAA0R,UAAA,SAAAtG,EAAAhD,EAAA2I,GACA3F,GAAA,EACAhD,GAAA,EACA2I,GAAAR,EAAAnF,EAAAhD,EAAAnH,KAAAsG,QAKA,IAHA,IAAA8B,EAAApI,KAAAmK,GACAgG,EAAA,EACAhT,EAAA,IACAA,EAAAgK,IAAAgJ,GAAA,MACA/H,GAAApI,KAAAmK,EAAAhN,GAAAgT,EAMA,OAFA/H,IAFA+H,GAAA,OAEA/H,GAAAuD,KAAA+E,IAAA,IAAAvJ,IAEAiB,GAGApD,EAAAjG,UAAA4R,UAAA,SAAAxG,EAAAhD,EAAA2I,GACA3F,GAAA,EACAhD,GAAA,EACA2I,GAAAR,EAAAnF,EAAAhD,EAAAnH,KAAAsG,QAKA,IAHA,IAAAnJ,EAAAgK,EACAgJ,EAAA,EACA/H,EAAApI,KAAAmK,IAAAhN,GACAA,EAAA,IAAAgT,GAAA,MACA/H,GAAApI,KAAAmK,IAAAhN,GAAAgT,EAMA,OAFA/H,IAFA+H,GAAA,OAEA/H,GAAAuD,KAAA+E,IAAA,IAAAvJ,IAEAiB,GAGApD,EAAAjG,UAAA6R,SAAA,SAAAzG,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACA,IAAAtG,KAAAmK,IACA,OAAAnK,KAAAmK,GAAA,GADAnK,KAAAmK,IAIAnF,EAAAjG,UAAA8R,YAAA,SAAA1G,EAAA2F,GACAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACA,IAAA8B,EAAApI,KAAAmK,GAAAnK,KAAAmK,EAAA,MACA,aAAA/B,EAAA,WAAAA,KAGApD,EAAAjG,UAAA+R,YAAA,SAAA3G,EAAA2F,GACAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACA,IAAA8B,EAAApI,KAAAmK,EAAA,GAAAnK,KAAAmK,IAAA,EACA,aAAA/B,EAAA,WAAAA,KAGApD,EAAAjG,UAAAgS,YAAA,SAAA5G,EAAA2F,GAGA,OAFAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QAEAtG,KAAAmK,GACAnK,KAAAmK,EAAA,MACAnK,KAAAmK,EAAA,OACAnK,KAAAmK,EAAA,QAGAnF,EAAAjG,UAAAiS,YAAA,SAAA7G,EAAA2F,GAGA,OAFAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QAEAtG,KAAAmK,IAAA,GACAnK,KAAAmK,EAAA,OACAnK,KAAAmK,EAAA,MACAnK,KAAAmK,EAAA,IAGAnF,EAAAjG,UAAAkS,YAAA,SAAA9G,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAN,EAAA4D,KAAA5J,KAAAmK,GAAA,SAGAnF,EAAAjG,UAAAmS,YAAA,SAAA/G,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAN,EAAA4D,KAAA5J,KAAAmK,GAAA,SAGAnF,EAAAjG,UAAAoS,aAAA,SAAAhH,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAN,EAAA4D,KAAA5J,KAAAmK,GAAA,SAGAnF,EAAAjG,UAAAqS,aAAA,SAAAjH,EAAA2F,GAEA,OADAA,GAAAR,EAAAnF,EAAA,EAAAnK,KAAAsG,QACAN,EAAA4D,KAAA5J,KAAAmK,GAAA,SASAnF,EAAAjG,UAAAsS,YAAA,SAAAjT,EAAA+L,EAAAhD,EAAA2I,IACA1R,KACA+L,GAAA,EACAhD,GAAA,EACA2I,IAEAN,EAAAxP,KAAA5B,EAAA+L,EAAAhD,EADAwE,KAAA+E,IAAA,IAAAvJ,GAAA,EACA,GAGA,IAAAgJ,EAAA,EACAhT,EAAA,EAEA,IADA6C,KAAAmK,GAAA,IAAA/L,IACAjB,EAAAgK,IAAAgJ,GAAA,MACAnQ,KAAAmK,EAAAhN,GAAAiB,EAAA+R,EAAA,IAGA,OAAAhG,EAAAhD,GAGAnC,EAAAjG,UAAAuS,YAAA,SAAAlT,EAAA+L,EAAAhD,EAAA2I,IACA1R,KACA+L,GAAA,EACAhD,GAAA,EACA2I,IAEAN,EAAAxP,KAAA5B,EAAA+L,EAAAhD,EADAwE,KAAA+E,IAAA,IAAAvJ,GAAA,EACA,GAGA,IAAAhK,EAAAgK,EAAA,EACAgJ,EAAA,EAEA,IADAnQ,KAAAmK,EAAAhN,GAAA,IAAAiB,IACAjB,GAAA,IAAAgT,GAAA,MACAnQ,KAAAmK,EAAAhN,GAAAiB,EAAA+R,EAAA,IAGA,OAAAhG,EAAAhD,GAGAnC,EAAAjG,UAAAwS,WAAA,SAAAnT,EAAA+L,EAAA2F,GAMA,OALA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,SACAnF,EAAAmB,sBAAA/H,EAAAuN,KAAA6F,MAAApT,IACA4B,KAAAmK,GAAA,IAAA/L,EACA+L,EAAA,GAWAnF,EAAAjG,UAAA0S,cAAA,SAAArT,EAAA+L,EAAA2F,GAUA,OATA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,WACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA,IAAA/L,EACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GAEAqR,EAAAzP,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAA2S,cAAA,SAAAtT,EAAA+L,EAAA2F,GAUA,OATA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,WACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA/L,IAAA,EACA4B,KAAAmK,EAAA,OAAA/L,GAEAqR,EAAAzP,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAUAnF,EAAAjG,UAAA4S,cAAA,SAAAvT,EAAA+L,EAAA2F,GAYA,OAXA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,gBACAnF,EAAAmB,qBACAnG,KAAAmK,EAAA,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,EACA4B,KAAAmK,GAAA,IAAA/L,GAEAuR,EAAA3P,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAA6S,cAAA,SAAAxT,EAAA+L,EAAA2F,GAYA,OAXA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,gBACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,EACA4B,KAAAmK,EAAA,OAAA/L,GAEAuR,EAAA3P,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAA8S,WAAA,SAAAzT,EAAA+L,EAAAhD,EAAA2I,GAGA,GAFA1R,KACA+L,GAAA,GACA2F,EAAA,CACA,IAAAgC,EAAAnG,KAAA+E,IAAA,IAAAvJ,EAAA,GAEAqI,EAAAxP,KAAA5B,EAAA+L,EAAAhD,EAAA2K,EAAA,GAAAA,GAGA,IAAA3U,EAAA,EACAgT,EAAA,EACA4B,EAAA,EAEA,IADA/R,KAAAmK,GAAA,IAAA/L,IACAjB,EAAAgK,IAAAgJ,GAAA,MACA/R,EAAA,OAAA2T,GAAA,IAAA/R,KAAAmK,EAAAhN,EAAA,KACA4U,EAAA,GAEA/R,KAAAmK,EAAAhN,IAAAiB,EAAA+R,GAAA,GAAA4B,EAAA,IAGA,OAAA5H,EAAAhD,GAGAnC,EAAAjG,UAAAiT,WAAA,SAAA5T,EAAA+L,EAAAhD,EAAA2I,GAGA,GAFA1R,KACA+L,GAAA,GACA2F,EAAA,CACA,IAAAgC,EAAAnG,KAAA+E,IAAA,IAAAvJ,EAAA,GAEAqI,EAAAxP,KAAA5B,EAAA+L,EAAAhD,EAAA2K,EAAA,GAAAA,GAGA,IAAA3U,EAAAgK,EAAA,EACAgJ,EAAA,EACA4B,EAAA,EAEA,IADA/R,KAAAmK,EAAAhN,GAAA,IAAAiB,IACAjB,GAAA,IAAAgT,GAAA,MACA/R,EAAA,OAAA2T,GAAA,IAAA/R,KAAAmK,EAAAhN,EAAA,KACA4U,EAAA,GAEA/R,KAAAmK,EAAAhN,IAAAiB,EAAA+R,GAAA,GAAA4B,EAAA,IAGA,OAAA5H,EAAAhD,GAGAnC,EAAAjG,UAAAkT,UAAA,SAAA7T,EAAA+L,EAAA2F,GAOA,OANA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,YACAnF,EAAAmB,sBAAA/H,EAAAuN,KAAA6F,MAAApT,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA4B,KAAAmK,GAAA,IAAA/L,EACA+L,EAAA,GAGAnF,EAAAjG,UAAAmT,aAAA,SAAA9T,EAAA+L,EAAA2F,GAUA,OATA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,gBACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA,IAAA/L,EACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GAEAqR,EAAAzP,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAAoT,aAAA,SAAA/T,EAAA+L,EAAA2F,GAUA,OATA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,gBACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA/L,IAAA,EACA4B,KAAAmK,EAAA,OAAA/L,GAEAqR,EAAAzP,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAAqT,aAAA,SAAAhU,EAAA+L,EAAA2F,GAYA,OAXA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,0BACAnF,EAAAmB,qBACAnG,KAAAmK,GAAA,IAAA/L,EACA4B,KAAAmK,EAAA,GAAA/L,IAAA,EACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,IAEAuR,EAAA3P,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAGAnF,EAAAjG,UAAAsT,aAAA,SAAAjU,EAAA+L,EAAA2F,GAaA,OAZA1R,KACA+L,GAAA,EACA2F,GAAAN,EAAAxP,KAAA5B,EAAA+L,EAAA,0BACA/L,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA4G,EAAAmB,qBACAnG,KAAAmK,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,GACA4B,KAAAmK,EAAA,GAAA/L,IAAA,EACA4B,KAAAmK,EAAA,OAAA/L,GAEAuR,EAAA3P,KAAA5B,EAAA+L,GAAA,GAEAA,EAAA,GAgBAnF,EAAAjG,UAAAuT,aAAA,SAAAlU,EAAA+L,EAAA2F,GACA,OAAAD,EAAA7P,KAAA5B,EAAA+L,GAAA,EAAA2F,IAGA9K,EAAAjG,UAAAwT,aAAA,SAAAnU,EAAA+L,EAAA2F,GACA,OAAAD,EAAA7P,KAAA5B,EAAA+L,GAAA,EAAA2F,IAWA9K,EAAAjG,UAAAyT,cAAA,SAAApU,EAAA+L,EAAA2F,GACA,OAAAC,EAAA/P,KAAA5B,EAAA+L,GAAA,EAAA2F,IAGA9K,EAAAjG,UAAA0T,cAAA,SAAArU,EAAA+L,EAAA2F,GACA,OAAAC,EAAA/P,KAAA5B,EAAA+L,GAAA,EAAA2F,IAIA9K,EAAAjG,UAAAmJ,KAAA,SAAAuG,EAAAiE,EAAArS,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAAN,KAAAsG,QACAoM,GAAAjE,EAAAnI,SAAAoM,EAAAjE,EAAAnI,QACAoM,MAAA,GACApS,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,SACA,OAAAoO,EAAAnI,QAAA,IAAAtG,KAAAsG,OAAA,SAGA,GAAAoM,EAAA,EACA,UAAAnM,WAAA,6BAEA,GAAAlG,EAAA,GAAAA,GAAAL,KAAAsG,OAAA,UAAAC,WAAA,6BACA,GAAAjG,EAAA,YAAAiG,WAAA,2BAGAjG,EAAAN,KAAAsG,SAAAhG,EAAAN,KAAAsG,QACAmI,EAAAnI,OAAAoM,EAAApS,EAAAD,IACAC,EAAAmO,EAAAnI,OAAAoM,EAAArS,GAGA,IACAlD,EADA6K,EAAA1H,EAAAD,EAGA,GAAAL,OAAAyO,GAAApO,EAAAqS,KAAApS,EAEA,IAAAnD,EAAA6K,EAAA,EAAqB7K,GAAA,IAAQA,EAC7BsR,EAAAtR,EAAAuV,GAAA1S,KAAA7C,EAAAkD,QAEG,GAAA2H,EAAA,MAAAhD,EAAAmB,oBAEH,IAAAhJ,EAAA,EAAeA,EAAA6K,IAAS7K,EACxBsR,EAAAtR,EAAAuV,GAAA1S,KAAA7C,EAAAkD,QAGAmG,WAAAzH,UAAA4T,IAAArV,KACAmR,EACAzO,KAAA8M,SAAAzM,IAAA2H,GACA0K,GAIA,OAAA1K,GAOAhD,EAAAjG,UAAAqO,KAAA,SAAAhF,EAAA/H,EAAAC,EAAAkH,GAEA,oBAAAY,EAAA,CASA,GARA,iBAAA/H,GACAmH,EAAAnH,EACAA,EAAA,EACAC,EAAAN,KAAAsG,QACK,iBAAAhG,IACLkH,EAAAlH,EACAA,EAAAN,KAAAsG,QAEA,IAAA8B,EAAA9B,OAAA,CACA,IAAAsM,EAAAxK,EAAA2C,WAAA,GACA6H,EAAA,MACAxK,EAAAwK,GAGA,QAAAxL,IAAAI,GAAA,iBAAAA,EACA,UAAAT,UAAA,6BAEA,oBAAAS,IAAAxC,EAAAyC,WAAAD,GACA,UAAAT,UAAA,qBAAAS,OAEG,iBAAAY,IACHA,GAAA,KAIA,GAAA/H,EAAA,GAAAL,KAAAsG,OAAAjG,GAAAL,KAAAsG,OAAAhG,EACA,UAAAiG,WAAA,sBAGA,GAAAjG,GAAAD,EACA,OAAAL,KAQA,IAAA7C,EACA,GANAkD,KAAA,EACAC,OAAA8G,IAAA9G,EAAAN,KAAAsG,OAAAhG,IAAA,EAEA8H,MAAA,GAGA,iBAAAA,EACA,IAAAjL,EAAAkD,EAAmBlD,EAAAmD,IAASnD,EAC5B6C,KAAA7C,GAAAiL,MAEG,CACH,IAAAhD,EAAAJ,EAAA+C,SAAAK,GACAA,EACAQ,EAAA,IAAA5D,EAAAoD,EAAAZ,GAAAlC,YACA0C,EAAA5C,EAAAkB,OACA,IAAAnJ,EAAA,EAAeA,EAAAmD,EAAAD,IAAiBlD,EAChC6C,KAAA7C,EAAAkD,GAAA+E,EAAAjI,EAAA6K,GAIA,OAAAhI,MAMA,IAAA6S,EAAA,qBAmBA,SAAAxD,EAAAzQ,GACA,OAAAA,EAAA,OAAAA,EAAA0G,SAAA,IACA1G,EAAA0G,SAAA,IAGA,SAAAsD,EAAArB,EAAA6D,GAEA,IAAAe,EADAf,KAAA0H,IAMA,IAJA,IAAAxM,EAAAiB,EAAAjB,OACAyM,EAAA,KACA3N,EAAA,GAEAjI,EAAA,EAAiBA,EAAAmJ,IAAYnJ,EAAA,CAI7B,IAHAgP,EAAA5E,EAAAwD,WAAA5N,IAGA,OAAAgP,EAAA,OAEA,IAAA4G,EAAA,CAEA,GAAA5G,EAAA,QAEAf,GAAA,OAAAhG,EAAApC,KAAA,aACA,SACS,GAAA7F,EAAA,IAAAmJ,EAAA,EAET8E,GAAA,OAAAhG,EAAApC,KAAA,aACA,SAIA+P,EAAA5G,EAEA,SAIA,GAAAA,EAAA,QACAf,GAAA,OAAAhG,EAAApC,KAAA,aACA+P,EAAA5G,EACA,SAIAA,EAAA,OAAA4G,EAAA,UAAA5G,EAAA,YACK4G,IAEL3H,GAAA,OAAAhG,EAAApC,KAAA,aAMA,GAHA+P,EAAA,KAGA5G,EAAA,KACA,IAAAf,GAAA,WACAhG,EAAApC,KAAAmJ,QACK,GAAAA,EAAA,MACL,IAAAf,GAAA,WACAhG,EAAApC,KACAmJ,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAAf,GAAA,WACAhG,EAAApC,KACAmJ,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAAvF,MAAA,sBARA,IAAAwE,GAAA,WACAhG,EAAApC,KACAmJ,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAA/G,EA4BA,SAAAyD,EAAAgC,GACA,OAAAlF,EAAAqN,YAhIA,SAAAnI,GAIA,IAFAA,EAUA,SAAAA,GACA,OAAAA,EAAAoI,KAAApI,EAAAoI,OACApI,EAAAtF,QAAA,iBAZA2N,CAAArI,GAAAtF,QAAAsN,EAAA,KAEAvM,OAAA,WAEA,KAAAuE,EAAAvE,OAAA,MACAuE,GAAA,IAEA,OAAAA,EAuHAsI,CAAAtI,IAGA,SAAAF,EAAAyI,EAAAC,EAAAlJ,EAAA7D,GACA,QAAAnJ,EAAA,EAAiBA,EAAAmJ,KACjBnJ,EAAAgN,GAAAkJ,EAAA/M,QAAAnJ,GAAAiW,EAAA9M,UAD6BnJ,EAE7BkW,EAAAlW,EAAAgN,GAAAiJ,EAAAjW,GAEA,OAAAA,mDCrvDAV,EAAA0K,WAuCA,SAAAmM,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,UAAAE,EAAAC,GAAA,EAAAA,GA1CAjX,EAAAuW,YAiDA,SAAAM,GAeA,IAdA,IAAAK,EACAJ,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAhK,EAAA,IAAAqK,EAVA,SAAAN,EAAAG,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EASAG,CAAAP,EAAAG,EAAAC,IAEAI,EAAA,EAGA9L,EAAA0L,EAAA,EACAD,EAAA,EACAA,EAEAtW,EAAA,EAAiBA,EAAA6K,EAAS7K,GAAA,EAC1BwW,EACAI,EAAAT,EAAAvI,WAAA5N,KAAA,GACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,QACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,OACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,IACAoM,EAAAuK,KAAAH,GAAA,OACApK,EAAAuK,KAAAH,GAAA,MACApK,EAAAuK,KAAA,IAAAH,EAGA,IAAAD,IACAC,EACAI,EAAAT,EAAAvI,WAAA5N,KAAA,EACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,OACAoM,EAAAuK,KAAA,IAAAH,GAGA,IAAAD,IACAC,EACAI,EAAAT,EAAAvI,WAAA5N,KAAA,GACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,OACA4W,EAAAT,EAAAvI,WAAA5N,EAAA,OACAoM,EAAAuK,KAAAH,GAAA,MACApK,EAAAuK,KAAA,IAAAH,GAGA,OAAApK,GA1FA9M,EAAAgP,cAiHA,SAAAuI,GAQA,IAPA,IAAAL,EACA3L,EAAAgM,EAAA1N,OACA2N,EAAAjM,EAAA,EACAkM,EAAA,GAIA/W,EAAA,EAAAgX,EAAAnM,EAAAiM,EAA0C9W,EAAAgX,EAAUhX,GAHpD,MAIA+W,EAAAlR,KAAAoR,EACAJ,EAAA7W,IALA,MAKAgX,IAAAhX,EALA,QAUA,IAAA8W,GACAN,EAAAK,EAAAhM,EAAA,GACAkM,EAAAlR,KACAqR,EAAAV,GAAA,GACAU,EAAAV,GAAA,MACA,OAEG,IAAAM,IACHN,GAAAK,EAAAhM,EAAA,OAAAgM,EAAAhM,EAAA,GACAkM,EAAAlR,KACAqR,EAAAV,GAAA,IACAU,EAAAV,GAAA,MACAU,EAAAV,GAAA,MACA,MAIA,OAAAO,EAAA1F,KAAA,KA1IA,IALA,IAAA6F,EAAA,GACAN,EAAA,GACAH,EAAA,oBAAApN,sBAAAyI,MAEA2D,EAAA,mEACAzV,EAAA,EAAA6K,EAAA4K,EAAAtM,OAAkCnJ,EAAA6K,IAAS7K,EAC3CkX,EAAAlX,GAAAyV,EAAAzV,GACA4W,EAAAnB,EAAA7H,WAAA5N,MAQA,SAAAqW,EAAAF,GACA,IAAAtL,EAAAsL,EAAAhN,OAEA,GAAA0B,EAAA,IACA,UAAApB,MAAA,kDAKA,IAAA6M,EAAAH,EAAAjK,QAAA,KAOA,OANA,IAAAoK,MAAAzL,GAMA,CAAAyL,EAJAA,IAAAzL,EACA,EACA,EAAAyL,EAAA,GAqEA,SAAAW,EAAAJ,EAAA3T,EAAAC,GAGA,IAFA,IAAAqT,EARAW,EASAC,EAAA,GACApX,EAAAkD,EAAqBlD,EAAAmD,EAASnD,GAAA,EAC9BwW,GACAK,EAAA7W,IAAA,cACA6W,EAAA7W,EAAA,cACA,IAAA6W,EAAA7W,EAAA,IACAoX,EAAAvR,KAdAqR,GADAC,EAeAX,IAdA,OACAU,EAAAC,GAAA,OACAD,EAAAC,GAAA,MACAD,EAAA,GAAAC,IAaA,OAAAC,EAAA/F,KAAA,IAhGAuF,EAAA,IAAAhJ,WAAA,OACAgJ,EAAA,IAAAhJ,WAAA,sBCnBAtO,EAAAmN,KAAA,SAAAzB,EAAAgC,EAAAqK,EAAAC,EAAAC,GACA,IAAA3P,EAAAxH,EACAoX,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACA3X,EAAAqX,EAAAE,EAAA,IACAjX,EAAA+W,GAAA,IACAtV,EAAAiJ,EAAAgC,EAAAhN,GAOA,IALAA,GAAAM,EAEAsH,EAAA7F,GAAA,IAAA4V,GAAA,EACA5V,KAAA4V,EACAA,GAAAH,EACQG,EAAA,EAAW/P,EAAA,IAAAA,EAAAoD,EAAAgC,EAAAhN,MAAAM,EAAAqX,GAAA,GAKnB,IAHAvX,EAAAwH,GAAA,IAAA+P,GAAA,EACA/P,KAAA+P,EACAA,GAAAL,EACQK,EAAA,EAAWvX,EAAA,IAAAA,EAAA4K,EAAAgC,EAAAhN,MAAAM,EAAAqX,GAAA,GAEnB,OAAA/P,EACAA,EAAA,EAAA8P,MACG,IAAA9P,IAAA6P,EACH,OAAArX,EAAAwX,IAAAjC,KAAA5T,GAAA,KAEA3B,GAAAoO,KAAA+E,IAAA,EAAA+D,GACA1P,GAAA8P,EAEA,OAAA3V,GAAA,KAAA3B,EAAAoO,KAAA+E,IAAA,EAAA3L,EAAA0P,IAGAhY,EAAAkL,MAAA,SAAAQ,EAAA/J,EAAA+L,EAAAqK,EAAAC,EAAAC,GACA,IAAA3P,EAAAxH,EAAAC,EACAmX,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAI,EAAA,KAAAP,EAAA9I,KAAA+E,IAAA,OAAA/E,KAAA+E,IAAA,SACAvT,EAAAqX,EAAA,EAAAE,EAAA,EACAjX,EAAA+W,EAAA,KACAtV,EAAAd,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAuN,KAAAsJ,IAAA7W,GAEA+K,MAAA/K,QAAA0U,KACAvV,EAAA4L,MAAA/K,GAAA,IACA2G,EAAA6P,IAEA7P,EAAA4G,KAAA6F,MAAA7F,KAAAuJ,IAAA9W,GAAAuN,KAAAwJ,KACA/W,GAAAZ,EAAAmO,KAAA+E,IAAA,GAAA3L,IAAA,IACAA,IACAvH,GAAA,IAGAY,GADA2G,EAAA8P,GAAA,EACAG,EAAAxX,EAEAwX,EAAArJ,KAAA+E,IAAA,IAAAmE,IAEArX,GAAA,IACAuH,IACAvH,GAAA,GAGAuH,EAAA8P,GAAAD,GACArX,EAAA,EACAwH,EAAA6P,GACK7P,EAAA8P,GAAA,GACLtX,GAAAa,EAAAZ,EAAA,GAAAmO,KAAA+E,IAAA,EAAA+D,GACA1P,GAAA8P,IAEAtX,EAAAa,EAAAuN,KAAA+E,IAAA,EAAAmE,EAAA,GAAAlJ,KAAA+E,IAAA,EAAA+D,GACA1P,EAAA,IAIQ0P,GAAA,EAAWtM,EAAAgC,EAAAhN,GAAA,IAAAI,EAAAJ,GAAAM,EAAAF,GAAA,IAAAkX,GAAA,GAInB,IAFA1P,KAAA0P,EAAAlX,EACAoX,GAAAF,EACQE,EAAA,EAAUxM,EAAAgC,EAAAhN,GAAA,IAAA4H,EAAA5H,GAAAM,EAAAsH,GAAA,IAAA4P,GAAA,GAElBxM,EAAAgC,EAAAhN,EAAAM,IAAA,IAAAyB,kBClFA,IAAAoG,EAAA,GAAiBA,SAEjB5I,EAAAD,QAAAwS,MAAAhJ,SAAA,SAAAsD,GACA,wBAAAjE,EAAAhI,KAAAiM,qBCUA,IALA,IAAA6L,EAAWnY,EAAQ,IAGnBoY,EAAA,GACAC,EAAA,GACAnY,EAAA,EAAeA,EAAA,IAASA,IACxBkY,EAAAlY,MAAA,KAAAmI,SAAA,IAAAmF,OAAA,GACA6K,EAAAD,EAAAlY,MAuBA,SAAAyI,EAAAiE,EAAAM,GACA,IAAAhN,EAAAgN,GAAA,EAAAoL,EAAAF,EACA,OAAAE,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MAAA,IACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MAAA,IACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MAAA,IACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MAAA,IACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MACAoY,EAAA1L,EAAA1M,MAAAoY,EAAA1L,EAAA1M,MASA,IAAAqY,EAAAJ,IAGAK,EAAA,CACA,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIAE,EAAA,OAAAF,EAAA,MAAAA,EAAA,IAGAG,EAAA,EAAAC,EAAA,EAiFA,SAAA/P,EAAAgQ,EAAAhM,EAAAM,GAEA,IAAAhN,EAAA0M,GAAAM,GAAA,EAEA,qBACAN,EAAA,UAAAgM,EAAA,IAAA5G,MAAA,SACA4G,EAAA,MAIA,IAAAC,GAFAD,KAAA,IAEAE,SAAAF,EAAAG,KAAAZ,KAOA,GAJAU,EAAA,MAAAA,EAAA,MACAA,EAAA,MAAAA,EAAA,OAGAjM,EACA,QAAAoM,EAAA,EAAoBA,EAAA,GAASA,IAC7BpM,EAAA1M,EAAA8Y,GAAAH,EAAAG,GAIA,OAAApM,GAAAjE,EAAAkQ,GAIA,IAAA7Q,EAAAY,EACAZ,EAAAiR,GA1GA,SAAAL,EAAAhM,EAAAM,GACA,IAAAhN,EAAA0M,GAAAM,GAAA,EACAnB,EAAAa,GAAA,GAIAsM,OAAA/O,KAFAyO,KAAA,IAEAM,SAAAN,EAAAM,SAAAT,EAMAU,OAAAhP,IAAAyO,EAAAO,MAAAP,EAAAO,OAAA,IAAAC,MAAAC,UAIAC,OAAAnP,IAAAyO,EAAAU,MAAAV,EAAAU,MAAAX,EAAA,EAGAY,EAAAJ,EAAAT,GAAAY,EAAAX,GAAA,IAcA,GAXAY,EAAA,QAAApP,IAAAyO,EAAAM,WACAA,IAAA,UAKAK,EAAA,GAAAJ,EAAAT,SAAAvO,IAAAyO,EAAAU,QACAA,EAAA,GAIAA,GAAA,IACA,UAAA3P,MAAA,mDAGA+O,EAAAS,EACAR,EAAAW,EACAb,EAAAS,EAMA,IAAAM,GAAA,gBAHAL,GAAA,cAGAG,GAAA,WACAvN,EAAA7L,KAAAsZ,IAAA,OACAzN,EAAA7L,KAAAsZ,IAAA,OACAzN,EAAA7L,KAAAsZ,IAAA,MACAzN,EAAA7L,KAAA,IAAAsZ,EAGA,IAAAC,EAAAN,EAAA,yBACApN,EAAA7L,KAAAuZ,IAAA,MACA1N,EAAA7L,KAAA,IAAAuZ,EAGA1N,EAAA7L,KAAAuZ,IAAA,SACA1N,EAAA7L,KAAAuZ,IAAA,OAGA1N,EAAA7L,KAAAgZ,IAAA,MAGAnN,EAAA7L,KAAA,IAAAgZ,EAIA,IADA,IAAAhX,EAAA0W,EAAA1W,MAAAsW,EACA7W,EAAA,EAAiBA,EAAA,EAAOA,IACxBoK,EAAA7L,EAAAyB,GAAAO,EAAAP,GAGA,OAAAiL,GAAAjE,EAAAoD,IAmCA/D,EAAAY,KACAZ,EAAAI,MAhKA,SAAAnG,EAAA2K,EAAAM,GACA,IAAAhN,EAAA0M,GAAAM,GAAA,EAAA8L,EAAA,EAUA,IARApM,KAAA,GACA3K,EAAA4J,cAAAvD,QAAA,eAAsC,SAAAoR,GACtCV,EAAA,KACApM,EAAA1M,EAAA8Y,KAAAX,EAAAqB,MAKAV,EAAA,IACApM,EAAA1M,EAAA8Y,KAAA,EAGA,OAAApM,GAkJA5E,EAAAW,UAEAlJ,EAAAD,QAAAwI,gCCrLA,IAAA+Q,EAEAY,EAAA7Q,EAAA6Q,QAAA7Q,EAAA8Q,SACA,GAAAD,KAAAE,gBAAA,CAGA,IAAAC,EAAA,IAAAvQ,WAAA,IACAwP,EAAA,WAEA,OADAY,EAAAE,gBAAAC,GACAA,GAIA,IAAAf,EAAA,CAKA,IAAAgB,EAAA,IAAA/H,MAAA,IACA+G,EAAA,WACA,QAAA/X,EAAAd,EAAA,EAAsBA,EAAA,GAAQA,IAC9B,MAAAA,KAAAc,EAAA,WAAA0N,KAAAoK,UACAiB,EAAA7Z,GAAAc,MAAA,EAAAd,IAAA,OAGA,OAAA6Z,GAIAta,EAAAD,QAAAuZ,uJCxBO,SAASiB,EAAYC,EAAMC,GAC9B,IASIC,EACAC,EAVAC,GAAoB,EAEpBC,EAAMC,IAAO1R,OACb2R,EAAc,KACdC,EAAc,QAEdC,EAAa,KACbC,EAAc,KAqDlB,MAhDoB,mBAATT,EACPC,EAAeD,GAGfC,GADAD,EAAOA,GAAQ,IACKU,OACpBR,EAAgBF,EAAKW,SAGrB,gBAAiBX,IACjBM,EAAcN,EAAI,aAElB,QAASA,IAETQ,EAAaR,EAAKxJ,KAGlB,gBAAiBwJ,IACjBO,EAAcP,EAAKO,aAGnB,gBAAiBP,IACjBS,EAAcT,EAAKS,aAIvBG,IAAGC,UAAU,oBAAsBT,GAAKjP,KAAK,CAAC,IACzC2P,QACAC,OAAO,OACPC,QAAQ,mBAAmB,GAC3BA,QAAQ,mBAAqBZ,GAAK,GAGvCQ,IAAGK,OAAO,QAAQC,GAAG,yBAA2Bd,EAAK,WAC7CD,EACAA,GAAoB,GAGzBgB,QAAQpD,IAAI,oBAEX6C,IAAGK,OAAO,oBAAsBb,GAAKgB,MAAM,UAAW,QACvDb,EAAc,QAETL,GACAA,OAKD,SAAS/O,EAAMkQ,GAC2B,IADpBC,EACoB1K,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,IAAAA,UAAA,GAAjC2K,EAAiC3K,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAjB,aACxB4K,EAAM3Y,KAEN4Y,EAAW,KACXC,EAAc7Y,KAGd4Y,EADe,MAAfnB,EACWM,IAAGe,MAAM9Y,MAET+X,IAAGe,MAAMrB,GAGZiB,EACZ,IAAIK,EAAmB,KAEvBzB,EAAoBmB,EAEpBV,IAAGC,UAAU,oBAAsBT,GAAKyB,KAAK,IAC7C,IAAItL,EAAOqK,IAAGC,UAAU,oBAAsBT,GACzCc,GAAG,cAAe,SAAS5a,GACxB6a,QAAQpD,IAAI,sBACZ6C,IAAGK,OAAO,oBAAsBb,GAAKgB,MAAM,UAAW,QACtDb,EAAc,QAEdK,IAAGkB,MAAMC,iBACTnB,IAAGkB,MAAME,oBAEZjB,OAAO,MAoIZ,GAlIAxK,EAAKsK,UAAU,MAAM1P,KAAqB,mBAAT4O,EAAsBA,EAAK5O,GAAQ4O,GAAMe,QACrEC,OAAO,MACPkB,KAAK,QAAS,SAAS3b,GACpB6a,QAAQpD,IAAI,KAAMzX,GAClB,IAAI0R,EAAM,GAaV,OAZI1R,EAAE4b,UACFlK,GAAO,eAEP1R,EAAE6b,WACFnK,GAAO,gBAEN1R,EAAE8b,SACHpK,GAAO,cAEP,aAAc1R,IACd0R,GAAO,8BAEJA,IAEV6J,KAAK,SAASvb,GACX,OAAIA,EAAE4b,QACK,QAEN5b,EAAE+b,OACHlB,QAAQmB,MAAM,+DAES,iBAAZhc,EAAE+b,MAAsB/b,EAAE+b,MAAQ/b,EAAE+b,MAAMlR,MAE5D+P,GAAG,QAAS,SAAS5a,EAAGN,GACjBM,EAAE6b,UACD7b,EAAE8b,SACP9b,EAAE8b,OAAOZ,EAAKrQ,EAAMkQ,EAAOI,GAC3BN,QAAQpD,IAAI,eAGZ6C,IAAGC,UAAU,oBAAoBO,MAAM,UAAW,QAClDb,EAAc,QAEVL,GACAA,OAGPgB,GAAG,aAAc,SAAS5a,EAAGN,GAI1B,GAHA4a,IAAGK,OAAOpY,MACLmY,QAAQ,4BAA4B,GAEjB,MAApBY,EAA0B,CAQ1B,GAJAhB,IAAGK,OAAO,oBAAsBb,GAC3BS,UAAU,MACVG,QAAQ,4BAA4B,QAEhB,IAAd1a,EAAEic,SAOT,OANApB,QAAQpD,IAAI,qBAEZ6C,IAAGK,OAAO,oBAAsBW,GAC/BR,MAAM,UAAW,aAElBQ,EAAmB,MAIvB,GAAItb,EAAEkc,UAAYZ,EAEd,OAIAT,QAAQpD,IAAI,mCAGZ6C,IAAGK,OAAO,oBAAsBW,GAC/BR,MAAM,UAAW,QAElBQ,EAAmB,KAM3B,QAAyB,IAAdtb,EAAEic,SAAyB,CAClC,IAAIE,EAAe5Z,KAAK6Z,wBAEpBC,EAAsB,KAEtBA,EAAsB7C,EAAYxZ,EAAEic,SADrB,QAAfhC,EAC8C,CAACD,YAAeoB,EACxDlL,IAAO,CAAEiM,EAAaG,KAAOjd,OAAOkd,YAC9BJ,EAAaK,IAAM,EAAInd,OAAOod,aAC1CxC,YAAe,QAGD,CACI/J,IAAO,CAAEiM,EAAaG,KAAOH,EAAaO,MAAQrd,OAAOkd,YACnDJ,EAAaK,IAAM,EAAInd,OAAOod,aACvCzC,YAAeoB,EAClBjB,YAAe,CAACgC,EAAaG,KAAOjd,OAAOkd,YACzCJ,EAAaK,IAAM,EAAInd,OAAOod,eAGhDzc,EAAEkc,SAAWG,EAAoBtN,MAAMxM,KAAM,CAACsI,EAAKnL,GAAE,EACd,eACvC4b,EAAmBtb,EAAEkc,SAIzB5B,IAAGK,OAAOpY,MACLmY,QAAQ,4BAA4B,KAG5CE,GAAG,aAAc,SAAS5a,EAAGN,GAEF,MAApB4b,GACAhB,IAAGK,OAAOpY,MACLmY,QAAQ,4BAA4B,KAIjDzK,EAAKsK,UAAU,8BACdE,OAAO,OACPkB,KAAK,MAAOgB,KACZhB,KAAK,QAAS,QACdA,KAAK,SAAU,QACfb,MAAM,WAAY,YAClBA,MAAM,QAAS,OAKhBnB,IACkC,IAA9BA,EAAa9O,EAAMkQ,GACnB,OAAOjB,EAIf,IAAI8C,EAAuBtC,IAAGK,OAAO,oBAAsBb,GACtDgB,MAAM,UAAW,SAEJ,MAAdZ,EACAI,IAAGK,OAAO,oBAAsBb,GAC/BgB,MAAM,OAASR,IAAGkB,MAAMqB,MAAQ,EAAK,MACrC/B,MAAM,MAAQR,IAAGkB,MAAMsB,MAAQ,EAAK,MAErCxC,IAAGK,OAAO,oBAAsBb,GAC/BgB,MAAM,OAAQZ,EAAW,GAAK,MAC9BY,MAAM,MAAOZ,EAAW,GAAK,MAIlC,IAAIiC,EAAeS,EAAqBlb,OAAO0a,wBA2B/C,OAzBID,EAAaG,KAAOH,EAAaO,MAAQrd,OAAO0d,YAA6B,QAAf9C,KAC9DA,EAAc,OAGI,MAAdC,EAEAI,IAAGK,OAAO,oBAAsBb,GAC/BgB,MAAM,OAASR,IAAGkB,MAAMqB,MAAQ,EAAIV,EAAaO,MAAS,MAC1D5B,MAAM,MAAQR,IAAGkB,MAAMsB,MAAQ,EAAK,MAElB,MAAf3C,EACAG,IAAGK,OAAO,oBAAsBb,GAC/BgB,MAAM,OAASX,EAAY,GAAKgC,EAAaO,MAAS,MACtD5B,MAAM,MAAOX,EAAY,GAAK,MAE/BG,IAAGK,OAAO,oBAAsBb,GAC/BgB,MAAM,OAASZ,EAAW,GAAKiC,EAAaO,MAAS,MACrD5B,MAAM,MAAOZ,EAAW,GAAK,OAQtCL,EACOC,GAEXQ,IAAGkB,MAAMC,iBACTnB,IAAGkB,MAAME,kBAGF5B,ICzRf,IAAIkD,EAAa,SAASjN,EAAExE,GAAK,OAAOwE,EAAIxE,GAkZrC,IAAI0R,EAAe,IAhYnB,WACH,IAAIC,EAAO3a,KAIX2a,EAAKC,YAAe,iCAAiCC,MAAM,IAC3DF,EAAKG,aAAe,iCAAiCD,MAAM,IAE3DF,EAAKI,gBAAkB,SAASC,GAE5B,IADA,IAAInP,EAAM,GACD1O,EAAI,EAAGA,EAAI6d,EAAQ1U,OAAQnJ,IAChC0O,EAAImP,EAAQ7d,IAAMA,EAEtB,OAAO0O,GAGX8O,EAAKM,gBAAkB,SAAyBC,GAQ5C,IALA,IAAItc,EAAIsc,EAAG,GAIPC,EAAK,IAAIlM,MAAMrQ,EAAI,GACfzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAAI,CACvBge,EAAGhe,GAAK,IAAI8R,MAAMrQ,EAAI,GACtB,IAAI,IAAIqL,EAAI9M,EAAG8M,GAAKrL,EAAGqL,IACvBkR,EAAGhe,GAAG8M,GAAK,EAEf,IAAImR,EAAU,EAGd,IAAQje,EAAIyB,EAZD,EAYY,EAAGzB,EAAI,EAAGA,IAEjC,IAAQ8M,EAAI9M,EAdD,EAcY,EAAG8M,GAAKrL,EAAGqL,IAAI,CAClCmR,EAAUD,EAAGhe,GAAG8M,EAAE,GAElB,IAAI,IAAI7M,EAAI6M,EAjBL,EAiBgB,EAAG7M,GAAKD,EAAGC,IAC3B8d,EAAG9d,KAAO6M,IAGTmR,EAAUzP,KAAK2C,IAAI8M,GAAWhe,EAAID,EAAKge,EAAGhe,GAAGC,EAAE,GAAK,GAAK,GAAM6M,EAAI7M,EAAI,EAAI,EAAK+d,EAAG/d,EAAE,GAAG6M,EAAE,GAAK,KAIvGkR,EAAGhe,GAAG8M,GAAKmR,EAKf,OAFAA,EAAUD,EAAG,GAAGvc,GAETuc,GAGXR,EAAKU,yBAA2B,SAASF,EAAIG,GAC3C,IAAIJ,EAAKjM,MAAMzC,MAAM,KACAyC,MAAMkM,EAAG7U,SAASiV,IAAI,WAAa,OAAO,IAI/D,OADAZ,EAAKa,KAAKL,EAAID,EAAII,EAAO,EAAGH,EAAG7U,OAAO,GAC/B4U,GAGTP,EAAKa,KAAO,SAASL,EAAID,EAAII,EAAOne,EAAG8M,GAErC,IAAImR,EAAUD,EAAGhe,GAAG8M,GAGpB,KAAGA,EAAI9M,EAAI,EAFA,GAIX,GAAGge,EAAGhe,GAAG8M,EAAE,IAAMmR,EAAjB,CAKA,IAAI,IAAIK,EAAIxR,EATD,EASY,EAAGwR,GAAKte,EAAGse,IAChC,GAAIH,EAAMrR,KAAOwR,IAGGA,EAAIte,EAAKge,EAAGhe,GAAGse,EAAE,GAAK,IACtBxR,EAAIwR,EAAI,EAAI,EAAKN,EAAGM,EAAE,GAAGxR,EAAE,GAAK,GAEvB,GAAKmR,EAS9B,OAPAF,EAAGO,GAAKxR,EACRiR,EAAGjR,GAAKwR,EAELte,EAAIse,GACHd,EAAKa,KAAKL,EAAID,EAAII,EAAOne,EAAGse,EAAI,QAEpCd,EAAKa,KAAKL,EAAID,EAAII,EAAOG,EAAI,EAAGxR,EAAI,GAM1CqO,QAAQpD,IAAI,YAAc/X,EAAI,IAAM8M,EAAI,+BAzBtC0Q,EAAKa,KAAKL,EAAID,EAAII,EAAOne,EAAG8M,EAAE,IA6BlC0Q,EAAKe,sBAAwB,SAASC,GAElC,IAAIT,EAAKjM,MAAMzC,MAAM,KAAM,IAAIyC,MAAM0M,EAAWrV,OAAS,IAAIiV,IAAInR,OAAOrL,UAAU6c,QAAQ,GAG1FV,EAAG,GAAKS,EAAWrV,OAInB,IADA,IAAIuV,EAAQ,GACH1e,EAAI,EAAGA,EAAIwd,EAAKC,YAAYtU,OAAQnJ,IACzC0e,EAAM1e,GAAK,GAIf,IAAI2e,EAAqBnB,EAAKI,gBAAgBJ,EAAKC,aAC/CmB,EAAsBpB,EAAKI,gBAAgBJ,EAAKG,cAEpD,IAAS3d,EAAI,EAAGA,EAAIwe,EAAWrV,OAAQnJ,IAAK,CACxC,IAAIqQ,EAAImO,EAAWxe,GACf6e,EAAK7e,EAAI,EAEb,GAAS,KAALqQ,GAAiB,KAALA,EAEZ0N,EAAGc,GAAM,OAET,GAAIxO,KAAKsO,EAELD,EAAMC,EAAmBtO,IAAIxK,KAAKgZ,OAC/B,MAAIxO,KAAKuO,GAOZ,KAAM,sCALN,IAAI9R,EAAI4R,EAAME,EAAoBvO,IAAIyO,MAEtCf,EAAGc,GAAM/R,EACTiR,EAAGjR,GAAK+R,GAOpB,IAAK,IAAItd,KAAOmd,EACZ,GAAIA,EAAMnd,GAAK4H,OAAS,EACpB,KAAM,8BAAgCuV,EAAMnd,GAAK,GAIzD,OAAOwc,GAGXP,EAAKuB,gBAAkB,SAASL,EAAO1e,EAAG8M,GAEtC,IADA,IAAIkS,EAAI,EACDN,EAAMM,GAAG7V,OAAS,GAAKuV,EAAMM,GAAGN,EAAMM,GAAG7V,OAAS,GAAK2D,GAC1DkS,GAAK,EAIT,OADAN,EAAMM,GAAGnZ,KAAKiH,GACPkS,GAGXxB,EAAKyB,gBAAkB,SAASP,EAAO5R,GAEnC,IADA,IAAIkS,EAAI,EACmB,IAApBN,EAAMM,GAAG7V,QAAgBuV,EAAMM,GAAGN,EAAMM,GAAG7V,OAAO,IAAM2D,GAC3DkS,GAAK,EAGT,OADAN,EAAMM,GAAGF,MACFE,GAGXxB,EAAK0B,sBAAwB,SAASnB,GAGlC,IADA,IAAIW,EAAQ,GACH1e,EAAI,EAAGA,EAAI+d,EAAG,GAAI/d,IACvB0e,EAAM1e,GAAK,GAGf,IAAImf,EAAO,GACPzQ,EAAM,GAEV,IAAS1O,EAAI,EAAGA,EAAI+d,EAAG,GAAK,EAAG/d,IAAK,CAChC,GAAc,IAAV+d,EAAG/d,IAAY+d,EAAG/d,KAAMmf,EACxB,KAAM,+CAEVA,EAAKpB,EAAG/d,KAAM,EAEA,IAAV+d,EAAG/d,GACH0O,GAAO,IAEHqP,EAAG/d,GAAKA,EACR0O,GAAO8O,EAAKC,YAAYD,EAAKuB,gBAAgBL,EAAO1e,EAAG+d,EAAG/d,KAE1D0O,GAAO8O,EAAKG,aAAaH,EAAKyB,gBAAgBP,EAAO1e,IAKjE,OAAO0O,GAGX8O,EAAK4B,cAAgB,SAASrB,EAAIpU,EAAM0V,GAWpC,IAPA,IAAIC,EAAW,GACXC,EAAY,GAEZC,EAAW7V,EACX8V,EAASJ,EAGJrf,EAAI2J,EAAM3J,GAAKqf,EAAIrf,IACV,IAAV+d,EAAG/d,KAAa+d,EAAG/d,GAAK2J,GAAQoU,EAAG/d,GAAKqf,IACxCE,EAAU1Z,KAAK,CAAC7F,EAAE+d,EAAG/d,KAE7B,IAASA,EAAIwf,EAAUxf,GAAKyf,EAAQzf,IAAK,CACrC,KAAiB,IAAV+d,EAAG/d,IAAYA,GAAKyf,GAAQzf,IAInC,IAFAqf,EAAKtB,EAAG/d,GAED+d,EAAG/d,KAAOqf,GACbrf,IACAqf,IAGJC,EAAWA,EAAShP,OAAOkN,EAAK4B,cAAcrB,EAAI/d,EAAGqf,IAMzD,OAHIE,EAAUpW,OAAS,GACnBmW,EAASzZ,KAAK0Z,GAEXD,GAGX9B,EAAKkC,+BAAiC,SAAS3B,GAY3C,IAJA,IAAIC,EAAKR,EAAKM,gBAAgBC,GAC1B4B,EAAQnC,EAAKU,yBAAyBF,EAAID,GAC1C6B,EAAU,GAEL5f,EAAI,EAAGA,EAAI+d,EAAG5U,OAAQnJ,IACvB+d,EAAG/d,GAAKA,GAGR2f,EAAM3f,IAAM+d,EAAG/d,KACf4f,EAAQ/Z,KAAK,CAAC7F,EAAG+d,EAAG/d,KACpB+d,EAAGA,EAAG/d,IAAM,EACZ+d,EAAG/d,GAAK,GAIhB,OAAO4f,GAGXpC,EAAKqC,aAAe,SAAS9B,EAAI+B,EAAO9f,EAAG8M,EAAGiT,GAe1C,IAAIC,EAAW,GACXC,EAAK,CAACjgB,EAAE,GACRkgB,EAAK,CAACpT,EAAE,GAKZ,GAHI8D,UAAUzH,OAAS,IACnB4W,EAAmB,IAEnB/f,EAAI8M,EACJ,MAAO,GAKP,KAAiB,IAAViR,EAAG/d,GAAUA,IAAOigB,EAAGpa,KAAK7F,GACnC,KAAiB,IAAV+d,EAAGjR,GAAUA,IAAOoT,EAAGra,KAAKiH,GAEnC,GAAI9M,EAAI8M,EAAG,CAGP,GADAmT,EAAGpa,KAAK7F,GACM,IAAV8f,EACA,MAAO,CAAC,CAAC,IAAIA,EAAOG,EAAGE,KAAK7C,KAO5B,IAHA,IAAI8C,GAAW,EACXxD,EAAO,GACPyD,EAAQ,GACHrB,EAAI,EAAGA,EAAIiB,EAAG9W,OAAQ6V,IACvBoB,EACAC,EAAMxa,KAAKoa,EAAGjB,IAEdpC,EAAK/W,KAAKoa,EAAGjB,IAEbe,EAAiB7T,QAAQ+T,EAAGjB,KAAO,IACnCoB,GAAW,GAGnB,MACW,CAAC,CAAC,IAAIN,EAAOG,EAAGE,KAAK7C,KAQxC,GAAIS,EAAG/d,IAAM8M,EAAG,CAEZ,IAAI1M,EAAI6f,EAKR,IAJIjB,EAAIhf,EAGRI,EAAEyF,KAAKmZ,GACAA,GAAKlS,GAAG,CAOX,IALAkT,EAAWA,EAAS1P,OAAOkN,EAAKqC,aAAa9B,EAAI+B,EAAOd,EAAGjB,EAAGiB,GAAIe,IAGlE3f,EAAEyF,KAAKkY,EAAGiB,IACVA,EAAIjB,EAAGiB,GAAK,EACK,IAAVjB,EAAGiB,IAAYA,GAAKlS,EAAGkS,IAAO5e,EAAEyF,KAAKmZ,GAC5C5e,EAAEyF,KAAKmZ,GAYX,OAVA5e,EAAE0e,OACF1e,EAAIA,EAAEkQ,OAAO4P,IAEP/W,OAAS,IACG,IAAV2W,EACAE,EAASna,KAAK,CAAC,IAAKia,EAAO1f,EAAE+f,KAAK7C,KAElC0C,EAASna,KAAK,CAAC,IAAKia,EAAO1f,EAAE+f,KAAK7C,MAGnC0C,EAGPjC,EAAG/d,KAAO8M,IAEVmT,EAAGpa,KAAK7F,GACRkgB,EAAGra,KAAKiH,GAEOmT,EAAG3P,OAAO4P,GACZ/W,OAAS,IACJ,IAAV2W,EACAE,EAASna,KAAK,CAAC,IAAIia,EAAOG,EAAG3P,OAAO4P,GAAIC,KAAK7C,KAE7C0C,EAASna,KAAK,CAAC,IAAIia,EAAOG,EAAG3P,OAAO4P,GAAIC,KAAK7C,OAMzD,IAFA,IAAIvb,EAAI,GAEDgc,EAAG/d,KAAO8M,GAAK9M,EAAI8M,GAEtB/K,EAAE8D,KAAK7F,GACP+B,EAAE8D,KAAKiH,GAEP9M,GAAK,EACL8M,GAAK,EAELgT,GAAS,EAOjB,OAJIG,EAAK,CAACjgB,EAAE,GACRkgB,EAAK,CAACpT,EAAE,GACRkT,EAASna,KAAK,CAAC,IAAKia,EAAO/d,EAAEoe,KAAK7C,KAE/B0C,EAAS1P,OAAOkN,EAAKqC,aAAa9B,EAAI+B,EAAO9f,EAAG8M,EAAGiT,MAO3D,SAASO,EAAYC,GACxB,IAAI/C,EAAO3a,KA+IX,OA9IA2a,EAAK+C,WAAaA,EAElB/C,EAAKgD,WAAa,SAASC,GAKvB,IAHA,IAAI1J,EAAQ0J,EAAU/C,MAAM,KACxBgD,EAAO,GAEF1gB,EAAI,EAAGA,EAAI+W,EAAM5N,OAAQnJ,IAAK,CAEnC,IAAI2gB,EAAS5J,EAAM/W,GAAG0d,MAAM,KAE5B,GAAqB,GAAjBiD,EAAOxX,OACPuX,EAAK7a,KAAKwH,SAASsT,EAAO,UACzB,GAAqB,GAAjBA,EAAOxX,OAKZ,IAJA,IAAIQ,EAAO0D,SAASsT,EAAO,IACvBtB,EAAKhS,SAASsT,EAAO,IAGhB7T,EAAInD,EAAMmD,GAAKuS,EAAIvS,IACxB4T,EAAK7a,KAAKiH,QAEdqO,QAAQpD,IAAI,qCAAsC0I,GAI1D,OAAOC,GAGXlD,EAAKoD,eAAiB,SAASC,GAe3B,IAPA,IAAIC,EAAQD,EAAUnD,MAAM,MACxBqD,EAAe,GACfC,EAAU,EACVC,EAAa,CAACC,YAAa,CAACC,GAAG,IAAKC,MAAM,CAAC,QAAS,cACpDC,EAAe,GAGVrhB,EAAI,EAAGA,EAAI8gB,EAAM3X,OAAQnJ,IAE9B,GAAmB,KAAf8gB,EAAM9gB,GAAG,GAWb,IAFA,IAAIshB,EAAQR,EAAM9gB,GAAG8V,OAAO4H,MAAM,SAEzB5Q,EAAI,EAAGA,EAAIwU,EAAMnY,OAAQ2D,IAC9B,GAAId,MAAMsV,EAAMxU,IAAK,CACjB,GAAiC,IAA7BwU,EAAMxU,GAAGyU,OAAO,SAAgB,CAEhC,IACIC,EADQF,EAAMxU,GAAG4Q,MAAM,KACJ,GAAGA,MAAM,KAChCuD,EAAWG,MAAQ,CAACI,EAAW,GAAIA,EAAW,IAC9C,SAGJ,GAAiC,GAA7BF,EAAMxU,GAAGyU,OAAO,UAAgB,CAEhC,IACIC,EADQF,EAAMxU,GAAG4Q,MAAM,KACJ,GAAGA,MAAM,KAChCuD,EAAWQ,OAAS,CAACD,EAAW,GAAIA,EAAW,IAC/C,SASJ,IAJA,IAAIzK,EAAQuK,EAAMxU,GAAG4Q,MAAM,KACvBgD,EAAOlD,EAAKgD,WAAWzJ,EAAM,IAC7B2K,EAAQ3K,EAAM,GAETiI,EAAI,EAAGA,EAAI0B,EAAKvX,OAAQ6V,IACzBhT,MAAM0V,GACNT,EAAWC,YAAYH,GAAcL,EAAK1B,IAAM0C,GAEhDT,EAAWC,YAAYH,GAAcL,EAAK1B,KAAO0C,EACjDL,EAAaxb,KAAKoH,OAAOyU,UAMjCT,EAAWC,YAAYH,GAAcC,GAAW/T,OAAOqU,EAAMxU,IAC7DkU,GAAW,EAEXK,EAAaxb,KAAKoH,OAAOqU,EAAMxU,UA/CnCiU,EAAeD,EAAM9gB,GAAG8V,OAAOrL,MAAM,GACrCuW,EAAU,EAEVC,EAAWC,YAAYH,GAAgB,GAsD/C,MALM,WAAYE,IACdA,EAAWQ,OAAS,CAACjT,KAAKC,IAAIY,MAAM,KAAMgS,GAAe7S,KAAK2C,IAAI9B,MAAM,KAAMgS,KAElF7D,EAAKyD,WAAaA,EAEXzD,GAGXA,EAAKmE,gBAAkB,WAKnB,IAAI1gB,EAEJ,IAAK,IAAI2gB,KAAgBpE,EAAKyD,WAAY,CACtC,IAAIY,EAAS5U,OAAO6U,UAChBC,EAAS9U,OAAO+U,UAGpB,IAAK,IAAIC,KAAUzE,EAAKyD,WAAWC,YAAYU,GAEvB,iBADpB3gB,EAAQuc,EAAKyD,WAAWC,YAAYU,GAAcK,MAE1ChhB,EAAQ4gB,IACRA,EAAS5gB,GACTA,EAAQ8gB,IACRA,EAAS9gB,IAKrB,IAAKghB,KAAUzE,EAAKyD,WAAWC,YAAYU,GAEnB,iBADpB3gB,EAAQuc,EAAKyD,WAAWC,YAAYU,GAAcK,MAE9CzE,EAAKyD,WAAWC,YAAYU,GAAcK,IAAWhhB,EAAQ4gB,IAAYE,EAASF,IAK9F,OAAOrE,GAGXA,EAAKoD,eAAepD,EAAK+C,YAClB/C,ECjiBX,IAAIF,EAAa,SAASjN,EAAExE,GAAK,OAAOwE,EAAIxE,GA8CrC,SAASqW,IAAsE,IAA7DC,EAA6DvR,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAvD,GAAI4N,EAAmD5N,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAtC,GAAIwR,EAAkCxR,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAArB,GAAIyR,EAAiBzR,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAH,EAC3E4M,EAAO3a,KAEX2a,EAAKtS,KAAO,MACZsS,EAAK8E,qBAAsB,EAC3B9E,EAAK2E,IAAMA,EACX3E,EAAKgB,WAAaA,EAClBhB,EAAK4E,WAAaA,EAClB5E,EAAK+E,UAAW,EAEiB,KAA7B/E,EAAKgB,WAAW/T,OAAO,KAEvB+S,EAAKgB,WAAahB,EAAKgB,WAAW/T,MAAM,GAAI,GAC5C+S,EAAK+E,UAAW,GAGpB/E,EAAKpD,IAAMC,IAAO1R,OAElB6U,EAAKwC,SAAW,GAEhBxC,EAAKgF,gBAAkB,GACvBhF,EAAKiF,YAAc,GAEnBjF,EAAKkF,QAAU,SAASC,GAGpB,IAFA,IAAIC,EAAkBpF,EAAKqF,MAAMC,OAAO,SAASxiB,GAAK,MAAqB,cAAdA,EAAEyiB,WAEtD/iB,EAAI,EAAGA,EAAI2iB,EAAKxZ,QAAUnJ,EAAI4iB,EAAgBzZ,OAAQnJ,IAC3D4iB,EAAgB5iB,GAAGoa,IAAMuI,EAAK3iB,GAGlC,OAAOwd,GAGXA,EAAKwF,iBAAmB,WACpBxF,EAAKyF,UAAY1F,EAAagB,sBAAsBf,EAAKgB,aAG7DhB,EAAK0F,aAAe,SAASC,GAMzB,IAHA,IAAIC,EAAS,GACTC,GAAc,GAEVA,EAAaF,EAAajX,QAAQ,OAAS,GAC/CkX,EAAOvd,KAAKwd,GACZF,EAAeA,EAAa9a,UAAU,EAAGgb,GAAcF,EAAa9a,UAAUgb,EAAW,EAAGF,EAAaha,QAI7G,MAAO,CAACga,aAAcA,EAAeC,OAAQA,IAGjD,IAAIpR,EAAMwL,EAAK0F,aAAa1F,EAAKgB,YACjChB,EAAKgB,WAAaxM,EAAImR,aACtB3F,EAAKuC,iBAAmB/N,EAAIoR,OAE5BpR,EAAMwL,EAAK0F,aAAa1F,EAAK2E,KAC7B3E,EAAK2E,IAAMnQ,EAAImR,aACf3F,EAAK8F,UAAYtR,EAAIoR,OAErB5F,EAAK+F,UAAY/F,EAAKgB,WAAWrV,OD3G9B,SAAqBkH,EAAGxE,GAG7B,GAAIwE,IAAMxE,EAAG,OAAO,EACpB,GAAU,OAANwE,GAAoB,OAANxE,EAAY,OAAO,EACrC,GAAIwE,EAAElH,QAAU0C,EAAE1C,OAAQ,OAAO,EAKjC,IAAK,IAAInJ,EAAI,EAAGA,EAAIqQ,EAAElH,SAAUnJ,EAC9B,GAAIqQ,EAAErQ,KAAO6L,EAAE7L,GAAI,OAAO,EAE5B,OAAO,ECgGAwjB,CAAYhG,EAAKuC,iBAAkBvC,EAAK8F,aACzCnI,QAAQpD,IAAI,oDACZoD,QAAQpD,IAAI,+CAGhByF,EAAKwF,mBAELxF,EAAKiG,aAAe,SAASV,EAAUW,GAGnC,IAFA,IAAIC,EAAanG,EAAKqF,MAAMC,OAAO,SAASxiB,GAAK,OAAOA,EAAEyiB,UAAYA,IAE5D/iB,EAAI,EAAGA,EAAI2jB,EAAWxa,OAAQnJ,IACpC2jB,EAAW3jB,GAAGqF,EAAIqe,EAAU1jB,GAAG,GAC/B2jB,EAAW3jB,GAAGsF,EAAIoe,EAAU1jB,GAAG,GAGnC,OAAOwd,GAGXA,EAAKoG,sBAAwB,WAKzB,IAHA,IAAID,EAAanG,EAAKqF,MAAMC,OAAO,SAASxiB,GAAK,MAAqB,cAAdA,EAAEyiB,WAGjD/iB,EAAI,EAAGA,EAAI2jB,EAAWxa,OAAQnJ,IAC/Bwd,EAAKuC,iBAAiB7T,QAAQlM,IAAM,IACpC2jB,EAAW3jB,GAAG+iB,SAAW,SACzBY,EAAW3jB,EAAE,GAAG+iB,SAAW,UAInC,IAZoC,IAAAc,EAAA,SAY3B7jB,GACDwD,GAAS,EAIb,IAAK,IAAIsJ,EAAI,EAAGA,EAAI0Q,EAAKwC,SAAShgB,GAAG,GAAGmJ,OAAQ2D,IACxC0Q,EAAKuC,iBAAiB7T,QAAQsR,EAAKwC,SAAShgB,GAAG,GAAG8M,KAAO,IACzDtJ,GAAS,GAGbA,EACAga,EAAKwC,SAAShgB,GAAG,GAAGoe,IAAI,SAAS/Y,GACpB,GAALA,IAEJmY,EAAKqF,MAAMxd,EAAE,GAAGye,SAAW,OAG/BtG,EAAKwC,SAAShgB,GAAG,GAAGoe,IAAI,SAAS/Y,GACpB,GAALA,IAEJmY,EAAKqF,MAAMxd,EAAE,GAAGye,SAAWtG,EAAKwC,SAAShgB,GAAG,OApB/CA,EAAI,EAAGA,EAAIwd,EAAKwC,SAAS7W,OAAQnJ,IAAK,KACvCwD,EADuCqgB,EAAtC7jB,GAwBT,OAAOwd,GAGXA,EAAKuG,aAAe,SAAShB,GAIzB,IAHA,IAAIW,EAAY,GACZd,EAAkBpF,EAAKqF,MAAMC,OAAO,SAASxiB,GAAK,OAAOA,EAAEyiB,UAAYA,IAElE/iB,EAAI,EAAGA,EAAI4iB,EAAgBzZ,OAAQnJ,IACxC0jB,EAAU7d,KAAK,CAAC+c,EAAgB5iB,GAAGqF,EAAGud,EAAgB5iB,GAAGsF,IAE7D,OAAOoe,GAGXlG,EAAKwG,QAAU,WAKX,IADA,IAAIrB,EAAO,GACF3iB,EAAI,EAAGA,EAAIwd,EAAKgB,WAAWrV,OAAQnJ,IACxC2iB,EAAK9c,KAAK2X,EAAKqF,MAAM7iB,GAAGoa,KAE5B,OAAOuI,GAGXnF,EAAKyG,eAAiB,WAMlB,IALA,IAAIlG,EAAKP,EAAKyF,UACViB,EAAmB1G,EAAKwC,SAAS8C,OAAQ,SAASxiB,GAClD,MAAe,KAARA,EAAE,IAAaA,EAAE,GAAG6I,QAAU,IAGhCnJ,EAAI,EAAGA,EAAIkkB,EAAiB/a,OAAQnJ,IAIzC,IAHA,IAAImkB,EAAUD,EAAiBlkB,GAAG,GAC9BokB,EAAOD,EAAQ1Z,MAAM,EAAG0Z,EAAQhb,OAAS,GAEpC2D,EAAI,EAAGA,EAAIsX,EAAKjb,OAAO,EAAG2D,IAC/B0Q,EAAK6G,YAAY,CAACD,EAAKtX,GAAIsX,EAAKtX,EAAE,GAAIiR,EAAGqG,EAAKtX,EAAE,IAAKiR,EAAGqG,EAAKtX,MAIrE,OAAO0Q,GAGXA,EAAK8G,eAAiB,WAQlB,IAJA,IAAIC,EAAa,SAASjkB,GACtB,OAAa,IAANA,GAAWA,GAAKkd,EAAKgB,WAAWrV,QAGlCnJ,EAAI,EAAGA,EAAIwd,EAAKwC,SAAS7W,OAAQnJ,IACtC,GAA2B,KAAvBwd,EAAKwC,SAAShgB,GAAG,KAAewd,EAAK8E,qBAA8C,KAAvB9E,EAAKwC,SAAShgB,GAAG,IAAjF,CAGA,IAAIokB,EAAO5G,EAAKwC,SAAShgB,GAAG,GAAG8iB,OAAOyB,GAEtC,GAA2B,KAAvB/G,EAAKwC,SAAShgB,GAAG,GAAW,CAC5B,IAAIwkB,EAAW,CAACjkB,KAAQ,GACpB4W,KAAQ,EAER5R,OAAU,EACVkf,IAAOjH,EACPuF,SAAY,SACZe,SAAY,IACZM,KAAQ,GACR/e,EAAKmY,EAAKqF,MAAMrF,EAAK+F,UAAU,GAAGle,EAClCC,EAAKkY,EAAKqF,MAAMrF,EAAK+F,UAAU,GAAGje,EAClCof,GAAMlH,EAAKqF,MAAMrF,EAAK+F,UAAU,GAAGmB,GACnCC,GAAMnH,EAAKqF,MAAMrF,EAAK+F,UAAU,GAAGoB,GACnCvK,IAAOC,IAAO1R,QACdic,EAAW,CAACrkB,KAAQ,GACpB4W,KAAQ,EAER5R,OAAU,EACVkf,IAAOjH,EACPuF,SAAY,SACZe,SAAY,IACZM,KAAQ,GACR/e,EAAKmY,EAAKqF,MAAM,GAAGxd,EACnBC,EAAKkY,EAAKqF,MAAM,GAAGvd,EACnBof,GAAMlH,EAAKqF,MAAM,GAAG6B,GACpBC,GAAMnH,EAAKqF,MAAM,GAAG8B,GACpBvK,IAAOC,IAAO1R,QAEdyb,EAAKve,KAAK2X,EAAKqF,MAAM1Z,OAAO,GAC5Bib,EAAKve,KAAK2X,EAAKqF,MAAM1Z,OAAO,GAC5BqU,EAAKqF,MAAMhd,KAAK2e,GAChBhH,EAAKqF,MAAMhd,KAAK+e,GAIxBpH,EAAK6G,YAAYD,GAGrB,OAAO5G,GAGXA,EAAKqH,eAAiB,WAClB,IAAK,IAAI7kB,EAAI,EAAGA,EAAIwd,EAAKsH,MAAM3b,OAAQnJ,IACnCwd,EAAKsH,MAAM9kB,GAAGoa,IAAMoD,EAAKsH,MAAM9kB,GAAG+kB,OAAO3K,IAAMoD,EAAKsH,MAAM9kB,GAAGsR,OAAO8I,IAGxE,OAAOoD,GAGXA,EAAK6G,YAAc,SAASD,GAQxB,IAPA,IAEI9gB,EAAS,OAAe,EAAI8gB,EAAKjb,QACjC5D,EAHa,IAGW,EAAIiJ,KAAKwW,IAAI1hB,IAErC2hB,EAAc,GAETjlB,EAAI,EAAGA,EAAIokB,EAAKjb,OAAQnJ,IAC7BilB,GAAezH,EAAKqF,MAAMuB,EAAKpkB,GAAG,GAAGoa,IAEzC,IAAI8K,EAAU,CAAC3kB,KAAQ,GACN4W,KAAQ,EAER5R,OAAUA,EACVkf,IAAOjH,EACPuF,SAAY,SACZe,SAAY,IACZM,KAAQA,EACRhK,IAAO6K,GACxBzH,EAAKqF,MAAMhd,KAAKqf,GAEhB,IAAIC,EAAO,EACPC,EAAO,EACPC,EAAgB,EAEpB/hB,EAA4B,SAAnB8gB,EAAKjb,OAAS,IAAgB,EAAIib,EAAKjb,QAChD5D,EAAS,GAAMiJ,KAAK8W,IAAIhiB,GAExB,IAAK,IAAIwJ,EAAI,EAAGA,EAAIsX,EAAKjb,OAAQ2D,IAC7B,KAAgB,IAAZsX,EAAKtX,IAAYsX,EAAKtX,GAAK0Q,EAAKgB,WAAWrV,QAA/C,CAIAqU,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAMuB,EAAKtX,GAAK,GAC/BwE,OAAUkM,EAAKqF,MAAMrF,EAAKqF,MAAM1Z,OAAO,GACvCoc,SAAY,OACZtkB,MAASsE,EACT6U,IAAOC,IAAO1R,SAE3Byb,EAAKjb,OAAS,GAEdqU,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAMuB,EAAKtX,GAAK,GAC/BwE,OAAUkM,EAAKqF,MAAMuB,GAAMtX,EAAI0B,KAAK6F,MAAM+P,EAAKjb,OAAS,IAAMib,EAAKjb,QAAU,GAC7Eoc,SAAY,OACZtkB,MAAkB,EAATsE,EACT6U,IAAOC,IAAO1R,SAGnC,IAAI6c,EAA0B,SAAnBpB,EAAKjb,OAAS,GAAgBib,EAAKjb,OAC1C9I,EAAI,EAAImO,KAAK8W,IAAI,SAAcE,EAAK,GAExChI,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAMuB,EAAKtX,GAAK,GAC/BwE,OAAUkM,EAAKqF,MAAMuB,GAAMtX,EAAI,GAAKsX,EAAKjb,QAAU,GACnDoc,SAAY,OACZtkB,MAASZ,IAI1B,IAAIolB,EAAWjI,EAAKqF,MAAMuB,EAAKtX,GAAG,GAC9B,MAAO2Y,IACPN,GAAQM,EAASpgB,EACjB+f,GAAQK,EAASngB,EAEjB+f,GAAiB,GAazB,OATIA,EAAgB,IAGhBH,EAAQ7f,EAAI8f,EAAOE,EACnBH,EAAQ5f,EAAI8f,EAAOC,EACnBH,EAAQR,GAAKQ,EAAQ7f,EACrB6f,EAAQP,GAAKO,EAAQ5f,GAGlBkY,GAGXA,EAAKkI,iBAAmB,WAcpB,IAbA,IAQIjD,EAAc,GACdkD,EAAYnI,EAAKqF,MAAMC,OALC,SAASxiB,GACjC,MAAqB,UAAdA,EAAEyiB,WAKT6C,EAAS,GAGJ5lB,EAAI,EAAGA,GAAKwd,EAAKqF,MAAM1Z,OAAQnJ,IACpCyiB,EAAYziB,GAAK,GAErB,IAASA,EAAI,EAAGA,EAAI2lB,EAAUxc,OAAQnJ,IAIlC,IAHA,IAAI6lB,EAAWF,EAAU3lB,GAGhB8M,EAAI,EAAGA,EAAI+Y,EAASzB,KAAKjb,OAAQ2D,IAAK,CAK3C,IAJA,IAAIgZ,EAAUD,EAASzB,KAAKtX,GAInBkS,EAAI,EAAGA,EAAIyD,EAAYqD,GAAS3c,OAAQ6V,IAC7C,KAAI+G,KAAKC,UAAU,CAACvD,EAAYqD,GAAS9G,GAAG5E,IAAKyL,EAASzL,KAAK+F,UAAWyF,GAA1E,CAGA,IAAIK,EAAWxD,EAAYqD,GAAS9G,GAAGzZ,OAASsgB,EAAStgB,OAEzDiY,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUtC,EAAYqD,GAAS9G,GAC9B1N,OAAUuU,EACV5kB,MAASglB,EAjCtB,GAkCaV,SAAY,cAG9BK,EAAOG,KAAKC,UAAU,CAACvD,EAAYqD,GAAS9G,GAAG5E,IAAKyL,EAASzL,KAAK+F,UAAW,EAGjFsC,EAAYqD,GAASjgB,KAAKggB,GAIlC,OAAOrI,GAIXA,EAAK0I,cAAgB,SAASC,GAC1B,QAAyB,IAAdA,EACP,OAAO3I,EAEX,IAAK,IAAIxd,EAAI,EAAGA,EAAImmB,EAAWhd,OAAQnJ,IAAK,CACxC,IAGIomB,EAAU,CAACrB,OAHFvH,EAAK6I,uBAAuBF,EAAWnmB,GAAG2J,MAGtB2H,OAFpBkM,EAAK6I,uBAAuBF,EAAWnmB,GAAGqf,IAEJkG,SAAY,QAC3De,cAAiBH,EAAWnmB,GAAGulB,SAAUnL,IAAOC,IAAO1R,QAEvD6U,EAAKsH,MAAMjf,KAAKugB,GAGxB,OAAO5I,GAIXA,EAAK+I,eAAiB,WAMlB,IAAIxI,EAAKP,EAAKyF,UACCzF,EAAKwC,SAEpBxC,EAAKqF,MAAQ,GACbrF,EAAKsH,MAAQ,GAIb,IAAI0B,EAAY,GAGhBhJ,EAAKwC,SAASG,OAEd,IAAK,IAAIngB,EAAI,EAAGA,EAAIwd,EAAKwC,SAAS7W,OAAQnJ,IAEtC,IADA,IAAIokB,EAAO5G,EAAKwC,SAAShgB,GAAG,GACnB8M,EAAI,EAAGA,EAAIsX,EAAKjb,OAAQ2D,IAC7B0Z,EAAUpC,EAAKtX,IAAM0Q,EAAKwC,SAAShgB,GAAG,GAI9C,IAAK,IAAIA,EAAI,EAAGA,GAAK+d,EAAG,GAAI/d,IAAK,CAC7B,IAAIymB,EAAWjJ,EAAK2E,IAAIniB,EAAE,IAEtBwd,EAAKuC,iBAAiB7T,QAAQlM,EAAE,IAAM,GACtCwd,EAAKuC,iBAAiB7T,QAAQlM,EAAE,IAAM,KACtCymB,EAAW,IAIfjJ,EAAKqF,MAAMhd,KAAK,CAACtF,KAAQkmB,EACRtP,IAAOkL,EAAcriB,EAAI,EACzBuF,OAAU,EACVkf,IAAOjH,EACPuF,SAAY,aACZX,WAAc5E,EAAK4E,WACnB0B,SAAY0C,EAAUxmB,GACtBoa,IAAOC,IAAO1R,OACdid,QAAU,IAG/B,IAAK,IAAI5lB,EAAI,EAAGA,EAAIwd,EAAKqF,MAAM1Z,OAAQnJ,IAE/Bwd,EAAKqF,MAAM7iB,GAAG0mB,SADR,IAAN1mB,EACyB,KAEAwd,EAAKqF,MAAM7iB,EAAE,GAGtCA,GAAKwd,EAAKqF,MAAM1Z,OAAO,EACvBqU,EAAKqF,MAAM7iB,GAAG2mB,SAAW,KAEzBnJ,EAAKqF,MAAM7iB,GAAG2mB,SAAWnJ,EAAKqF,MAAM7iB,EAAE,GAI9C,IAAK,IAAIA,EAAI,EAAGA,GAAK+d,EAAG,GAAI/d,IAEV,IAAV+d,EAAG/d,IAEHwd,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAM7iB,EAAE,GACvBsR,OAAUkM,EAAKqF,MAAM9E,EAAG/d,GAAG,GAC3BulB,SAAY,WACZtkB,MAAS,EACTmZ,IAAOC,IAAO1R,SAG/B3I,EAAI,IAEwC,IAAxCwd,EAAKuC,iBAAiB7T,QAAQlM,EAAE,KACO,GAAvCwd,EAAKuC,iBAAiB7T,QAAQlM,EAAE,KACO,GAAvCwd,EAAKuC,iBAAiB7T,QAAQlM,EAAE,KAGhCwd,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAM7iB,EAAE,GACxBsR,OAAUkM,EAAKqF,MAAM7iB,EAAE,GACvBulB,SAAY,WACZtkB,MAAS,EACTmZ,IAAOC,IAAO1R,SAC9B6U,EAAKqF,MAAM7iB,EAAE,GAAG4lB,QAAS,GAMrC,IAAK,IAAI5lB,EAAI,EAAGA,EAAIwd,EAAKgF,gBAAgBrZ,OAAQnJ,IAC7Cwd,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAMrF,EAAKgF,gBAAgBxiB,GAAG,GAAG,GACjDsR,OAAUkM,EAAKqF,MAAMrF,EAAKgF,gBAAgBxiB,GAAG,GAAG,GAChDulB,SAAY,aACZtkB,MAAS,EACTmZ,IAAOC,IAAO1R,SAYlC,OATI6U,EAAK+E,UACL/E,EAAKsH,MAAMjf,KAAK,CAACkf,OAAUvH,EAAKqF,MAAM,GACtBvR,OAAUkM,EAAKqF,MAAMrF,EAAK+F,UAAU,GACpCgC,SAAY,WACZtkB,MAAS,EACTmZ,IAAOC,IAAO1R,SAI3B6U,GAGXA,EAAKqC,aAAe,SAAS9B,EAAI+B,EAAO9f,EAAG8M,GAevC,IAAIkT,EAAW,GACXC,EAAK,CAACjgB,EAAE,GACRkgB,EAAK,CAACpT,EAAE,GAEZ,GAAI9M,EAAI8M,EACJ,MAAO,GAKP,KAAiB,IAAViR,EAAG/d,GAAUA,IAAOigB,EAAGpa,KAAK7F,GACnC,KAAiB,IAAV+d,EAAGjR,GAAUA,IAAOoT,EAAGra,KAAKiH,GAEnC,GAAI9M,EAAI8M,EAAG,CAGP,GADAmT,EAAGpa,KAAK7F,GACM,IAAV8f,EACA,MAAO,CAAC,CAAC,IAAIA,EAAOG,EAAGE,KAAK7C,KAO5B,IAHA,IAAI8C,GAAW,EACXxD,EAAO,GACPyD,EAAQ,GACHrB,EAAI,EAAGA,EAAIiB,EAAG9W,OAAQ6V,IACvBoB,EACAC,EAAMxa,KAAKoa,EAAGjB,IAEdpC,EAAK/W,KAAKoa,EAAGjB,IAEbxB,EAAKuC,iBAAiB7T,QAAQ+T,EAAGjB,KAAO,IACxCoB,GAAW,GAGnB,MACW,CAAC,CAAC,IAAIN,EAAOG,EAAGE,KAAK7C,KAQxC,GAAIS,EAAG/d,IAAM8M,EAAG,CAEZ,IAAI1M,EAAI6f,EACJjB,EAAIhf,EAIR,IADAI,EAAEyF,KAAKmZ,GACAA,GAAKlS,GAAG,CAOX,IALAkT,EAAWA,EAAS1P,OAAOkN,EAAKqC,aAAa9B,EAAI+B,EAAOd,EAAGjB,EAAGiB,KAG9D5e,EAAEyF,KAAKkY,EAAGiB,IACVA,EAAIjB,EAAGiB,GAAK,EACK,IAAVjB,EAAGiB,IAAYA,GAAKlS,EAAGkS,IAAO5e,EAAEyF,KAAKmZ,GAC5C5e,EAAEyF,KAAKmZ,GAYX,OAVA5e,EAAE0e,OACF1e,EAAIA,EAAEkQ,OAAO4P,IAEP/W,OAAS,IACG,IAAV2W,EACAE,EAASna,KAAK,CAAC,IAAKia,EAAO1f,EAAE+f,KAAK7C,KAElC0C,EAASna,KAAK,CAAC,IAAKia,EAAO1f,EAAE+f,KAAK7C,MAGnC0C,EAGPjC,EAAG/d,KAAO8M,IAEVmT,EAAGpa,KAAK7F,GACRkgB,EAAGra,KAAKiH,GAEOmT,EAAG3P,OAAO4P,GACZ/W,OAAS,IACJ,IAAV2W,EACAE,EAASna,KAAK,CAAC,IAAIia,EAAOG,EAAG3P,OAAO4P,GAAIC,KAAK7C,KAE7C0C,EAASna,KAAK,CAAC,IAAIia,EAAOG,EAAG3P,OAAO4P,GAAIC,KAAK7C,OAMzD,IAFA,IAAIvb,EAAI,GAEDgc,EAAG/d,KAAO8M,GAAK9M,EAAI8M,GAEtB/K,EAAE8D,KAAK7F,GACP+B,EAAE8D,KAAKiH,GAEP9M,GAAK,EACL8M,GAAK,EAELgT,GAAS,EAOjB,OAJIG,EAAK,CAACjgB,EAAE,GACRkgB,EAAK,CAACpT,EAAE,GACRkT,EAASna,KAAK,CAAC,IAAKia,EAAO/d,EAAEoe,KAAK7C,KAE/B0C,EAAS1P,OAAOkN,EAAKqC,aAAa9B,EAAI+B,EAAO9f,EAAG8M,KAG3D0Q,EAAKoJ,UAAY,WAA8C,IAArCvE,EAAqCzR,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAvB,EAAGiW,EAAoBjW,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GACvD,GAAsB,IAAlBiW,EACA,OAAOrJ,EAEX,IAAK,IAAIxd,EAAI,EAAGA,GAAKwd,EAAK+F,UAAWvjB,IAEjC,GAAIA,EAAI6mB,GAAkB,EAAG,CAEzB,IAAI1B,EAAMC,EAENS,EAAWrI,EAAKqF,MAAM7iB,EAAE,GACxB0mB,OAAQ,EAAEC,OAAQ,EAClBG,OAAO,EAAEC,OAAO,EAEE,GAAlBvJ,EAAK+F,WACLwD,EAAU,CAAClB,EAASxgB,EAAI,GAAIwgB,EAASvgB,GACrCwhB,EAAU,CAACjB,EAASxgB,EAAI,GAAIwgB,EAASvgB,KAIjCohB,EADK,GAAL1mB,EACWwd,EAAKqF,MAAMrF,EAAK+F,UAAY,GAE5B/F,EAAKqF,MAAM7iB,EAAI,GAI1B2mB,EADA3mB,GAAKwd,EAAK+F,UACC/F,EAAKqF,MAAM,GAEXrF,EAAKqF,MAAM7iB,GAG2B,IAAjDwd,EAAKyF,UAAU0D,EAASxP,IAAMkL,EAAY,IACO,IAAjD7E,EAAKyF,UAAUyD,EAASvP,IAAMkL,EAAY,IACO,IAAjD7E,EAAKyF,UAAU4C,EAAS1O,IAAMkL,EAAY,KAE1CqE,EAAWC,EAAWnJ,EAAKqF,MAAMrF,EAAKyF,UAAU4C,EAAS1O,IAAMkL,EAAY,GAAG,IAK7B,IAAjD7E,EAAKyF,UAAU4C,EAAS1O,IAAMkL,EAAY,IACO,IAAjD7E,EAAKyF,UAAU0D,EAASxP,IAAMkL,EAAY,IACO,IAAjD7E,EAAKyF,UAAUyD,EAASvP,IAAMkL,EAAY,IAK1C0E,EAAU,CAACJ,EAASthB,EAAIwgB,EAASxgB,EAAGshB,EAASrhB,EAAIugB,EAASvgB,GAC1DwhB,EAAU,CAACJ,EAASrhB,EAAIwgB,EAASxgB,EAAGqhB,EAASphB,EAAIugB,EAASvgB,KAL1DyhB,EAAU,CAAClB,EAASxgB,EAAIshB,EAASthB,EAAGwgB,EAASvgB,EAAIqhB,EAASrhB,GAC1DwhB,EAAU,CAACjB,EAASxgB,EAAIqhB,EAASrhB,EAAGwgB,EAASvgB,EAAIohB,EAASphB,KAQlE,IAAI0hB,EAAc,CAACD,EAAQ,GAAKD,EAAQ,GAAIC,EAAQ,GAAKD,EAAQ,IAC7DG,EAAYzY,KAAK0Y,KAAKF,EAAY,GAAKA,EAAY,GAAKA,EAAY,GAAKA,EAAY,IACrFG,EAAY,CAACH,EAAY,GAAKC,EAAWD,EAAY,GAAKC,GAC1DG,EAAY,EAAE,GAAKD,EAAU,IAAK,GAAKA,EAAU,IAErDhC,EAAO3H,EAAKqF,MAAM7iB,EAAE,GAAGqF,EAAI+hB,EAAU,GACrChC,EAAO5H,EAAKqF,MAAM7iB,EAAE,GAAGsF,EAAI8hB,EAAU,GAErC,IAAIlC,EAAU,CAAC3kB,KAAQP,EAAIqiB,EAAa,EACvBlL,KAAQ,EACR5R,OAAU,EACVkf,IAAOjH,EACPuF,SAAY,QACZX,WAAc5E,EAAK4E,WACnB0B,SAAY,IACZze,EAAK8f,EACL7f,EAAK8f,EACLV,GAAMS,EACNR,GAAMS,EACNhL,IAAOC,IAAO1R,QAC3Byd,EAAU,CAACrB,OAAUvH,EAAKqF,MAAM7iB,EAAE,GAC1BsR,OAAU4T,EACVjkB,MAAS,EACTskB,SAAY,aACZnL,IAAOC,IAAO1R,QAE1B6U,EAAKqF,MAAMhd,KAAKqf,GAChB1H,EAAKsH,MAAMjf,KAAKugB,GAIxB,OAAO5I,GAGXA,EAAK6J,oBAAsB,WAIvB,GAHA7J,EAAK8J,oBACL9J,EAAKwC,SAAWxC,EAAKqC,aAAarC,EAAKyF,UAAW,EAAG,EAAGzF,EAAKgB,WAAWrV,QAEpEqU,EAAK+E,SAAU,CAEf,IAAIgF,EAAe/J,EAAKwC,SAAS8C,OAAO,SAASxiB,GAAK,GAAY,KAARA,EAAE,GAAW,OAAO,IAE9E,GAAIinB,EAAape,OAAS,EAAG,CACzBqe,MAAQD,EAAa,GACrBnD,KAAOoD,MAAM,GAAGrH,KAAK7C,GAErBmK,KAAOrD,KAAK,GACZsD,OAAQ,EACRC,WAAa,EACb,IAAK,IAAI3nB,EAAI,EAAGA,EAAIokB,KAAKjb,OAAQnJ,IACzBokB,KAAKpkB,GAAKynB,KAAO,IACjBE,YAAc,GAElBF,KAAOrD,KAAKpkB,GAGE,GAAd2nB,WACAH,MAAM,GAAK,IACU,GAAdG,WACPH,MAAM,GAAK,IAEXA,MAAM,GAAK,KAKvB,OAAOhK,GAGXA,EAAKoK,iBAAmB,WAKpB,IAFA,IAES5nB,EAAI,EAAGA,EAAIwd,EAAKsH,MAAM3b,OAAQnJ,IACnCwd,EAAKsH,MAAM9kB,GAAGoa,IAAMoD,EAAKsH,MAAM9kB,GAAG+kB,OAAO3K,IAAMoD,EAAKsH,MAAM9kB,GAAGsR,OAAO8I,IAGxE,OAAOoD,GAGXA,EAAK8J,kBAAoB,WAIrB,OAHI9J,EAAKyF,UAAU9Z,OAAS,IACxBqU,EAAKgF,gBAAkBhF,EAAKgF,gBAAgBlS,OAAOiN,EAAamC,+BAA+BlC,EAAKyF,aAEjGzF,GAGXA,EAAKqK,eAAiB,WAOlB,IAHA,IAAI9J,EAAKP,EAAKyF,UACVT,EAAkBhF,EAAKgF,gBAElBxiB,EAAI,EAAGA,EAAIwiB,EAAgBrZ,OAAQnJ,IACxC+d,EAAGyE,EAAgBxiB,GAAG,IAAMwiB,EAAgBxiB,GAAG,GAC/C+d,EAAGyE,EAAgBxiB,GAAG,IAAMwiB,EAAgBxiB,GAAG,GAInD,OADAwd,EAAKgF,gBAAkB,GAChBhF,GAGXA,EAAKsK,QAAU,SAASvnB,GACpB,YAAmB,IAARA,GACPid,EAAKjd,KAAO,GACLid,IAEPA,EAAKjd,KAAOA,EACLid,IAKXA,EAAK+F,UAAY,GACjB/F,EAAK6J,sBAET7J,EAAK6I,uBAAyB,SAASjC,GAGnC,GAA6C,mBAAzC1jB,OAAOkB,UAAUuG,SAAShI,KAAKikB,IAC/B,IAAK,IAAItX,EAAI,EAAGA,EAAI0Q,EAAKqF,MAAM1Z,OAAQ2D,IACnC,GAAI,SAAU0Q,EAAKqF,MAAM/V,IACjB0Q,EAAKqF,MAAM/V,GAAGsX,KAAKnT,OAAOmT,GAC1B,OAAO5G,EAAKqF,MAAM/V,QAK9B,IAAK,IAAIA,EAAI,EAAGA,EAAI0Q,EAAKqF,MAAM1Z,OAAQ2D,IACnC,GAAI0Q,EAAKqF,MAAM/V,GAAGqK,KAAOiN,EACrB,OAAO5G,EAAKqF,MAAM/V,GAM9B,OADAqO,QAAQpD,IAAI,iCAAkCqM,GACvC,MCt0BR,SAAS2D,EAAqBC,GACnC,IAOIhoB,EAAG6K,EACFod,EAHD5iB,EAAI,GAAIC,EAAI,GAKhBuF,EAAMmd,EAAW,GACjB,IAAI1kB,EAAQwO,MAAMzC,MAAM,KAAM,IAAIyC,MAAMjH,EAAI,IAAIuT,IAAInR,OAAOrL,UAAU6c,QAAQ,GACzEyJ,EAAYpW,MAAMzC,MAAM,KAAM,IAAIyC,MAAM,GAAGtD,KAAK6F,MAAMxJ,EAAI,KAC3CuT,IAAInR,OAAOrL,UAAU6c,QAAS,GAC7C0J,EAAarW,MAAMzC,MAAM,KAAM,IAAIyC,MAAM,GAAGtD,KAAK6F,MAAMxJ,EAAI,KAC5CuT,IAAInR,OAAOrL,UAAU6c,QAAS,GAE7C2J,EAAK,EACLC,EAAM,EACNC,EAAS9Z,KAAK+Z,GAAK,GAGZ,SAAPzlB,EAAgB9C,EAAG8M,EAAGkb,GAItB,IAOGQ,EAAOC,EAASzJ,EAAG/e,EAAGyoB,EAASC,EAAS1Y,EAAM2Y,EAC9CC,EAAOC,EAAGC,EACZC,EATGC,EAAQ,EAKTnoB,EAAI,EAAGooB,EAAS,EAMnBC,EAAWrX,MAAMzC,MAAM,KAAM,IAAIyC,MAAO,EAAsB,EAApBtD,KAAK6F,OAAOvH,EAAE9M,GAAG,KAAQoe,IAAInR,OAAOrL,UAAU6c,QAAS,GAKrG,IAHA+J,EAAQxoB,EAAE,EAAG8M,IAGN9M,GAAK8M,GAER,IADA2b,EAAUT,EAAWhoB,KACC,GAAHA,EAEd,CACDipB,GAAS,EACTjK,EAAIhf,EAAGC,EAAIwoB,EACXU,IAAWroB,GAAKke,EAChBmK,IAAWroB,GAAKb,EAChBD,EAAIyoB,EAAQ,EAEZC,EAAU1J,EAAG2J,EAAU1oB,EACvB2oB,EAAS,EACT,GACI5J,IAAK/e,IAAK2oB,UAENZ,EAAWhJ,IAAM/e,GAAO+nB,EAAWhJ,GAAKA,GAGhD,GADA/O,EAAO2Y,EAAO,EACVA,GAAU,IACVtlB,EAAMolB,EAAQ,EAAEzY,IAASqY,EACzBhlB,EAAMqlB,EAAQ,EAAE1Y,IAASqY,EACzBhlB,EAAMolB,IAAmBJ,EACzBhlB,EAAMqlB,IAAmBL,EACrBM,EAAS,GACT,KAAO3Y,GAAQ,EAAGA,IACd3M,EAAMolB,EAAQzY,GAAQzB,KAAK+Z,GAC3BjlB,EAAMqlB,EAAQ1Y,GAAQzB,KAAK+Z,GAIvCJ,IAAaE,GAAOO,EAChB5J,GAAK/e,GACP6C,EAAKkc,EAAG/e,EAAG+nB,QA9BbhoB,IAAKipB,IAASC,IAqCtB,IAHAF,EAAUxa,KAAK+Z,IAAIU,EAAM,GAAGA,EAC5BE,IAAWroB,GAAKgM,EAChB+b,EAAQL,EAAQ,EAAI,EAAIA,EACnBM,EAAI,EAAGA,GAAKhoB,EAAGgoB,IAAK,CAErB,IADAC,EAAQI,EAASL,GAAGD,EACf5Y,EAAO,EAAGA,GAAQ8Y,EAAM9Y,IAC7B3M,EAAMulB,EAAM5Y,IAAS+Y,EACrB,GAAIF,EAAIhoB,EACJ,MACJ+nB,EAAQM,IAAWL,GAEvBZ,IAAYE,GAAMc,EAGlBpmB,CAAK,EAAG+H,EAAI,EAAGmd,GACfE,EAAUE,IAAO,EAEjBH,EAhGe,EAiGf5iB,EAAE,GAhGW,IAiGbC,EAAE,GAhGW,IAkGb,IAAI8jB,EAAO,GAGX,IADAA,EAAKvjB,KAAK,CAACR,EAAE,GAAIC,EAAE,KACdtF,EAAI,EAAGA,EAAI6K,EAAK7K,IACjBqF,EAAErF,GAAKqF,EAAErF,EAAE,GArGD,GAqGWwO,KAAK8W,IAAI2C,GAC9B3iB,EAAEtF,GAAKsF,EAAEtF,EAAE,GAtGD,GAsGWwO,KAAK6a,IAAIpB,GAE9BmB,EAAKvjB,KAAK,CAACR,EAAErF,GAAIsF,EAAEtF,KACnBioB,GAASzZ,KAAK+Z,GAAGjlB,EAAMtD,EAAE,GAG7B,OAAOopB,EChHF,SAASE,IACfzmB,KAAK0C,OAAS,KACd1C,KAAK0mB,WAAa,KAClB1mB,KAAK2mB,KAAO,KACT3mB,KAAK4kB,KAAO,UFCsB,IAA3Bjb,OAAO5K,UAAUkU,OACxBtJ,OAAO5K,UAAUkU,KAAO,WACpB,OAAOtJ,OAAO3J,MAAMuF,QAAQ,aAAc,MEAlDkhB,EAAQ1nB,UAAU4E,UAAY,WAC7B,OAAO3D,KAAK0C,QAGb+jB,EAAQ1nB,UAAU6E,UAAY,SAASlB,GACtC1C,KAAK0C,OAASA,GAGf+jB,EAAQ1nB,UAAU6nB,cAAgB,WACjC,OAAO5mB,KAAK0mB,YAGbD,EAAQ1nB,UAAU8nB,cAAgB,SAASH,GAC1C1mB,KAAK0mB,WAAaA,GAGnBD,EAAQ1nB,UAAU+nB,QAAU,WAC3B,OAAO9mB,KAAK2mB,MAGbF,EAAQ1nB,UAAUgoB,QAAU,SAASJ,GACpC3mB,KAAK2mB,KAAOA,GAGbF,EAAQ1nB,UAAUioB,QAAU,WAC3B,OAAOhnB,KAAK4kB,MAGb6B,EAAQ1nB,UAAUkoB,QAAU,SAASrC,GACpC5kB,KAAK4kB,KAAOA,qBClCN,SAASsC,IACflnB,KAAKmnB,KAAO,KACZnnB,KAAKwC,EAAI,KACNxC,KAAKyC,EAAI,KACZzC,KAAKonB,UAAY,KACjBpnB,KAAKG,OAAS,IAAIC,IAGnB8mB,EAAKnoB,UAAUsoB,QAAU,WACxB,OAAOrnB,KAAKmnB,MAGbD,EAAKnoB,UAAUuoB,QAAU,SAASH,GACjCnnB,KAAKmnB,KAAOA,GAGbD,EAAKnoB,UAAUwE,KAAO,WACrB,OAAOvD,KAAKwC,GAGb0kB,EAAKnoB,UAAUyE,KAAO,SAAShB,GAC9BxC,KAAKwC,EAAIA,GAGV0kB,EAAKnoB,UAAU0E,KAAO,WACrB,OAAOzD,KAAKyC,GAGbykB,EAAKnoB,UAAU2E,KAAO,SAASjB,GAC9BzC,KAAKyC,EAAIA,GAGVykB,EAAKnoB,UAAUwoB,YAAc,WAC5B,OAAOvnB,KAAKonB,WAGbF,EAAKnoB,UAAUyoB,aAAe,SAASJ,GACtCpnB,KAAKonB,UAAYA,GAGlBF,EAAKnoB,UAAUkC,UAAY,WAC1B,OAAOjB,KAAKG,QAGb+mB,EAAKnoB,UAAUmC,UAAY,SAASf,GACnCH,KAAKG,OAASA,cCzCR,SAASsnB,IACZznB,KAAK0nB,KAAO,KACf1nB,KAAK2nB,QAAU,IAEf3nB,KAAK4nB,MAAQ,GACb5nB,KAAK6nB,MAAQ,KACV7nB,KAAK8nB,QAAU,KACf9nB,KAAK+nB,WAAa,KAErB/nB,KAAKzD,KAAO,IAAI2D,IAChBF,KAAKgoB,MAAQ,GAEbhoB,KAAKioB,QAAU,GAEfjoB,KAAKkoB,QAAU,IAAIzB,EAEnBzmB,KAAKmoB,OAAS,GACdnoB,KAAKooB,wBAA0B,IAG/BpoB,KAAKqoB,SAAW,KAEhBroB,KAAKsoB,GAAK,KAIVtoB,KAAKuoB,aAAe,GACpBvoB,KAAKwoB,kBAAoB,GA0N1B,SAASlmB,EAAMijB,GACX,IAAIa,EAAQ,KACRjX,EAAM,KACN1R,EAAI,KAER,GAAI8nB,EAAG5iB,kBAAoB,EACvB,OAAO,EAEX,GAAI4iB,EAAGliB,SACH,OAAQ,EAEZkiB,EAAGjiB,SAAQ,GACX8iB,EAAQ,EACRjX,EAAM,EACN,IAAK,IAAIhS,EAAI,EAA0B,MAAvBooB,EAAGziB,cAAc3F,GAAYA,KACzCM,EAAI6E,EAAMijB,EAAGziB,cAAc3F,GAAG4D,aACrB,IACU,KAATqlB,EACFjX,EAAM1R,EAED0R,EAAM1R,IACX0R,EAAM1R,IAKlB,OADA8nB,EAAGjiB,SAAQ,GACJ6L,EAAM,ECrQV,SAASsZ,EAAeC,GAA6B,IAApBC,EAAoB5a,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GAChD4M,EAAO3a,KAgCX,GAVA2a,EAAK9E,QAAUhY,OAAO+qB,OApBR,CACVC,UAAY,EACZC,iBAAmB,EACnB9E,cAAiB,GACjB+E,YAAc,EACdC,eAAkB,IAClBC,SAAY,IACZC,cAAiB,GACjBC,aAAgB,GAChBC,uBAA0B,GAC1BC,YAAe,KACfC,OAAU,qBACVC,wBAA0B,EAC1BC,mBAAsB,IACtBC,cAAiB,GACjBC,mBAAqB,GAKaf,GAEL,OAA7BhO,EAAK9E,QAAQwT,aACb1O,EAAK9E,QAAQ8T,KAAOhP,EAAK9E,QAAQwT,YAAY,GAC7C1O,EAAK9E,QAAQ+T,KAAOjP,EAAK9E,QAAQwT,YAAY,KAE7C1O,EAAK9E,QAAQ8T,KAAO,IACpBhP,EAAK9E,QAAQ+T,KAAO,KAGK,GAAzBjP,EAAK9E,QAAQgT,SAAkB,CAC/B,IAAIgB,EAAiB,CACjB,CACIrQ,MAAO,WACPD,OAAQ,SAASZ,EAAKlb,EAAGN,EAAGyb,KAG5Bc,SAAU,CAAC,CACPF,MAAS,IACTD,OAAQ,SAASZ,EAAKlb,EAAGN,EAAGyb,GACxBN,QAAQpD,IAAI,YAAa0D,EAAU+B,EAAK9E,QAAQ8T,KAAMhP,EAAK9E,QAAQ+T,MACnE,IAAIE,EAAiB,CAACC,EAAOC,OAAOpR,EAAS,IACvBqR,EAAOD,OAAOpR,EAAS,KAC7CN,QAAQpD,IAAI,iBAAkB4U,GAE9BnP,EAAKuP,OAAO,IAAK,CAACC,SAAY,IAAKC,UAAaN,MAGxD,CACItQ,MAAS,IACTD,OAAQ,SAASZ,EAAKlb,EAAGN,EAAGyb,GACxBN,QAAQpD,IAAI,YAAa0D,EAAU+B,EAAK9E,QAAQ8T,KAAMhP,EAAK9E,QAAQ+T,MACnE,IAAIE,EAAiB,CAACC,EAAOC,OAAOpR,EAAS,IACvBqR,EAAOD,OAAOpR,EAAS,KAC7CN,QAAQpD,IAAI,iBAAkB4U,GAE9BnP,EAAKuP,OAAO,IAAK,CAACC,SAAY,IAAKC,UAAaN,MAIxD,CACItQ,MAAS,IACTD,OAAQ,SAASZ,EAAKlb,EAAGN,EAAGyb,GACxBN,QAAQpD,IAAI,YAAa0D,EAAU+B,EAAK9E,QAAQ8T,KAAMhP,EAAK9E,QAAQ+T,MACnE,IAAIE,EAAiB,CAACC,EAAOC,OAAOpR,EAAS,IACvBqR,EAAOD,OAAOpR,EAAS,KAC7CN,QAAQpD,IAAI,iBAAkB4U,GAE9BnP,EAAKuP,OAAO,IAAK,CAACC,SAAY,IAAKC,UAAaN,MAIxD,CACItQ,MAAS,IACTD,OAAQ,SAASZ,EAAKlb,EAAGN,EAAGyb,GACxBN,QAAQpD,IAAI,YAAa0D,EAAU+B,EAAK9E,QAAQ8T,KAAMhP,EAAK9E,QAAQ+T,MACnE,IAAIE,EAAiB,CAACC,EAAOC,OAAOpR,EAAS,IACvBqR,EAAOD,OAAOpR,EAAS,KAC7CN,QAAQpD,IAAI,iBAAkB4U,GAE9BnP,EAAKuP,OAAO,IAAK,CAACC,SAAY,IAAKC,UAAaN,OAKxDxQ,UAAU,IAId+Q,EAAW,CACX,CACI7Q,MAAO,cACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK2P,WAAW7sB,IAEpB6b,UAAU,GAEd,CACIE,MAAO,cACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBmb,QAAQpD,IAAI,qCACZoD,QAAQpD,IAAI,gCAAkCzX,IAElDic,SAAU,CACN,CACIF,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK4P,WAAW,IAAK9sB,KAG7B,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK4P,WAAW,IAAK9sB,KAI7B,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK4P,WAAW,IAAK9sB,KAI7B,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK4P,WAAW,IAAK9sB,OAKrC,CACI+b,MAAO,gBACPD,OAAQ,SAASZ,EAAKlb,EAAGN,KAGzBuc,SAAU,CACN,CACIF,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,GAAI,KAG9C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,GAAI,KAI9C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,GAAI,KAI9C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,GAAI,OAKtD,CACI+b,MAAO,eACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBmb,QAAQpD,IAAI,KAAMzX,IAGtBic,SAAU,CACN,CACIF,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,EAAG,KAI7C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,EAAG,KAG7C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,EAAG,KAG7C,CACI+b,MAAO,IACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrBwd,EAAK6P,wBAAwB,IAAK/sB,EAAG,QAOzDkd,EAAK8P,gBAAkBxT,EAAYoT,GACnC1P,EAAK+P,sBAAwBzT,EAAY4S,QAGzCvR,QAAQpD,IAAI,sBACZyF,EAAK8P,gBAAkB,aAGhB1S,IAAG4S,MAAMC,aAApB,IAIIC,EAAgB,KAChBC,EAAc,KACdC,GAAuB,EAEvBhB,EAAShS,IAAG4S,MAAMK,SACrBpM,OAAO,CAAC,EAAEjE,EAAK9E,QAAQ8T,OAAOpL,MAAM,CAAC,EAAE5D,EAAK9E,QAAQ8T,OACjDM,EAASlS,IAAG4S,MAAMK,SACrBpM,OAAO,CAAC,EAAEjE,EAAK9E,QAAQ+T,OAAOrL,MAAM,CAAC,EAAG5D,EAAK9E,QAAQ+T,OAElDqB,EAAQtQ,EAAKsQ,MAAQ,CACrBjL,MAAQ,GACRiC,MAAQ,IAyWZ,SAASiJ,EAAU1oB,GACf,OAAOmJ,KAAK0Y,KAAK7hB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAG5C,SAAS2oB,EAAgB1tB,GACrB,IAAI2tB,EAAW3tB,EACX4tB,EAAa5tB,EAAEomB,SAGnB,GAAmB,OAAfwH,GAIC5tB,EAAEslB,OAAP,CAIA,IAAIuI,EAAI,GAAGF,EAAS5oB,EAAI6oB,EAAW7oB,KAAM4oB,EAAS3oB,EAAI4oB,EAAW5oB,IAEjE,GAAY,GAAR6oB,EAAE,IAAmB,GAARA,EAAE,GAAnB,CAIA,IAAIrF,EAAI,GADRqF,EAAI,CAACA,EAAE,GAAKJ,EAAUI,GAAIA,EAAE,GAAKJ,EAAUI,KAC/B,GAAIA,EAAE,IAEdC,EAAW,CAAC9tB,EAAEiF,OAAS4oB,EAAE,GAAI7tB,EAAEiF,OAAS4oB,EAAE,IAE1CE,EAAO,KACED,EAAS,GArBL,GAqBwBD,EAAE,GAAKrF,EAAE,IAAM,GAAK,KAAOsF,EAAS,GArB5D,GAqB+ED,EAAE,GAAKrF,EAAE,IAAM,GAAK,IACvGsF,EAAS,GAAM,IAAOA,EAAS,GAAM,KACrCA,EAAS,GAvBL,GAuBwBD,EAAE,GAAKrF,EAAE,IAAM,GAAK,KAAOsF,EAAS,GAvB5D,GAuB+ED,EAAE,GAAKrF,EAAE,IAAM,GAE/GlO,IAAGK,OAAOpY,MAAMoZ,KAAK,IAAKoS,KAG9B,SAASC,EAAehuB,GACpB,MAAqB,YAAdA,EAAEilB,UACY,YAAdjlB,EAAEilB,UACY,iBAAdjlB,EAAEilB,UACY,cAAdjlB,EAAEilB,UACY,cAAdjlB,EAAEilB,UACY,YAAdjlB,EAAEilB,UACY,eAAdjlB,EAAEilB,SAwUb,SAASgJ,EAAaC,EAAgBluB,EAAGktB,GACrC,GAAIgB,EAAe3sB,eAAevB,EAAE6W,KAAM,CACtC,IAAIlM,EAAMwjB,WAAWD,EAAeluB,EAAE6W,MAEtC,OAAInL,MAAMf,GAGCujB,EAAeluB,EAAE6W,KAIjBqW,EAAMviB,GAGjB,MAAO,QAtuBfuS,EAAKkR,cAAgB,CACjBC,WAAc,EACdC,aAAgB,EAChBC,WAAc,EACdC,cAAiB,GACjB1O,SAAY,EACZ2O,MAAS,IAGbvR,EAAKwR,kBAAoB,CACrBC,kBAAqB,OACrBC,iBAAoB,OACpBC,mBAAsB,OACtBC,iBAAoB,OACpBC,aAAgB,OAChBC,uBAA0B,OAC1BC,oBAAuB,QAG3B/R,EAAKgS,YAAc,YACnBhS,EAAKiS,aAAe,GACpBjS,EAAKkS,UAAYlS,EAAK9E,QAAQkT,WAE9BpO,EAAKmS,MAAO,EACZnS,EAAKoS,KAAO,GACZpS,EAAK2I,WAAa,GAElBrU,MAAMlQ,UAAUqP,OAAS,SAAUnH,GAE/B,IAAKA,EACD,OAAO,EAGX,GAAIjH,KAAKsG,QAAUW,EAAMX,OACrB,OAAO,EAEX,IAAK,IAAInJ,EAAI,EAAGC,EAAE4C,KAAKsG,OAAQnJ,EAAIC,EAAGD,IAElC,GAAI6C,KAAK7C,aAAc8R,OAAShI,EAAM9J,aAAc8R,OAEhD,IAAKjP,KAAK7C,GAAGiR,OAAOnH,EAAM9J,IACtB,OAAO,OAEV,GAAI6C,KAAK7C,IAAM8J,EAAM9J,GAEtB,OAAO,EAGf,OAAO,GAIXwd,EAAKqS,oBAAsB,SAASC,GAA+B,IAApBtE,EAAoB5a,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GAEvD8H,EAAU,CACEsU,SAAY,GACZzsB,KAAQ,QACRmjB,UAAa,GACbmD,cAAiBrJ,EAAK9E,QAAQmO,cAC9BkJ,aAAe,EACfpN,KAAQ,GACRL,qBAAuB,GAGvC5J,EAAUhY,OAAO+qB,OAAO/S,EAAS8S,GAEjCrQ,QAAQpD,IAAI,gBAAiBW,EAAQiK,MACrC,IAAIqN,EAAK,IAAI9N,EAASxJ,EAAQsU,SAAU8C,EAAWpX,EAAQnY,MAC3DyvB,EAAG1N,oBAAsB5J,EAAQ4J,oBAEjC,IAAI2N,EAAUD,EAAG3I,sBAEjB,GAAiC,IAA7B3O,EAAQgL,UAAUva,OAGlB,GAA2B,UAAvBqU,EAAK9E,QAAQyT,OAAoB,CACjC,IAEI+D,GAFS,IAAI5F,GAEY6F,sBAAsBH,EAAG/M,WACtDvK,EAAQgL,UAAY,GACpB,IAAK,IAAI1jB,EAAI,EAAGA,EAAIkwB,EAAgBxF,MAAO1qB,IACvC0Y,EAAQgL,UAAU7d,KAAK,CAACqqB,EAAgB7qB,EAAErF,GAAIkwB,EAAgB5qB,EAAEtF,UAEpE0Y,EAAQgL,UAAYqE,EAAoBkI,EAAQhN,WAcxD,OAVAgN,EAAUA,EAAQ1J,iBACjB7D,QAAQhK,EAAQiK,MAChBc,aAAa,aAAc/K,EAAQgL,WACnCkD,UAAU,EAAGlO,EAAQmO,eACrB5C,iBACAK,iBACAoB,mBACAkC,mBACAhE,yBAKLpG,EAAKuP,OAAS,SAAS+C,GAA+B,IAApBtE,EAAoB5a,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GAC1Cqf,EAAUzS,EAAKqS,oBAAoBC,EAAWtE,GAkBlD,GAAI,eAAgBA,EAAe,CAE/B,IAAI4E,EAAW5S,EAAK6S,iBAAiBJ,EAASzE,EAAcrF,YAE5D3I,EAAK2I,WAAa3I,EAAK2I,WAAW7V,OAAO8f,GAW7C,MARI,cAAe5E,EACfhO,EAAK8S,WAAWL,EAAS,CAAChD,UAAWzB,EAAcyB,UACzBsD,YAAY,IACjC,gBAAiB/E,EACtBhO,EAAK8S,WAAWL,EAAS,CAACF,YAAavE,EAAcuE,cAErDvS,EAAK8S,WAAWL,EAAS,CAACM,WAAY/E,EAAc+E,aAEjDN,GAGXzS,EAAK4P,WAAa,SAAS3G,EAAU+J,GAGjC,IAAI/L,EAAM+L,EAAc/L,IAEpBjG,EAAajB,EAAa2B,sBAAsBuF,EAAIxB,WACpDS,EAAYe,EAAIV,aAAa,cAC7BiJ,EAAWvI,EAAItC,IACfQ,EAAO8B,EAAIT,UAEXyM,EAAaD,EAAcrZ,IAE3BuZ,EAAgBlS,EAChBmS,EAAc3D,EAASviB,MAAM,EAAEgmB,EAAW,GAAMhK,EAAWuG,EAASviB,MAAMgmB,GAE9EtV,QAAQpD,IAAI,eAAgB4Y,GAE5BxV,QAAQpD,IAAI,QAAS4K,GACrBA,EAAKiO,OAAOH,EAAW,EAAG,EAAGpW,IAAO1R,QACpC,IAAIkoB,EAAenN,SAGZlG,EAAKoS,KAAKnL,EAAIrK,KACRoD,EAAKuP,OAAO2D,EAAe,CAAC1D,SAAY2D,EAC5BjN,UAAamN,EACblO,KAAQA,EACR4N,YAAc,KAI3C/S,EAAK6P,wBAA0B,SAAS5G,EAAU+J,EAAeM,GAG7D,IAAIrM,EAAM+L,EAAc/L,IAEpBjG,EAAajB,EAAa2B,sBAAsBuF,EAAIxB,WACpDS,EAAYe,EAAIV,aAAa,cAC7BiJ,EAAWvI,EAAItC,IACfQ,EAAO8B,EAAIT,UAEXyM,EAAaD,EAAcrZ,IAAM2Z,EAEjCJ,EAAgBlS,EAAW/T,MAAM,EAAEgmB,GAAc,IAAMjS,EAAW/T,MAAMgmB,GACxEE,EAAc3D,EAASviB,MAAM,EAAEgmB,GAAehK,EAAWuG,EAASviB,MAAMgmB,GAE5EtV,QAAQpD,IAAI,eAAgB4Y,GAE5BhO,EAAKiO,OAAOH,EAAY,EAAGpW,IAAO1R,QAClC+a,EAAUkN,OAAOH,EAAY,EAAG/M,EAAU+M,EAAaK,EAAe,IAEtE,IAAIC,EAAUpO,EACVkO,EAAenN,EAEnBvI,QAAQpD,IAAI,aAAc2L,GAC1BvI,QAAQpD,IAAI,sBAAuB8Y,UAE5BrT,EAAKoS,KAAKnL,EAAIrK,KACRoD,EAAKuP,OAAO2D,EAAe,CAAC1D,SAAY2D,EAC5BjN,UAAamN,EACblO,KAAQoO,EACRR,YAAc,KAI3C/S,EAAK2P,WAAa,SAASnrB,GACvBmZ,QAAQpD,IAAI,cAAe/V,GAE3B,IAAIyiB,EAAMziB,EAAKyiB,IACXuM,EAAOvM,EAAIxB,UAAUjhB,EAAKmV,KAGlB,GAAR6Z,IACAvM,EAAIxB,UAAUjhB,EAAKmV,KAAO,EAC1BsN,EAAIxB,UAAU+N,GAAQ,GAG1B,IAAIxS,EAAajB,EAAa2B,sBAAsBuF,EAAIxB,WACpDS,EAAYe,EAAIV,aAAa,cAC7BiJ,EAAWvI,EAAItC,IACfQ,EAAO8B,EAAIT,UAEX0M,EAAgBlS,EAAW/T,MAAM,EAAGzI,EAAKmV,IAAI,GAAKqH,EAAW/T,MAAMzI,EAAKmV,KACxE0Z,EAAenN,EAAUjZ,MAAM,EAAGzI,EAAKmV,IAAI,GACtC7G,OAAOoT,EAAUjZ,MAAMzI,EAAKmV,MACjCwZ,EAAc3D,EAASviB,MAAM,EAAGzI,EAAKmV,IAAI,GAAK6V,EAASviB,MAAMzI,EAAKmV,KAClE4Z,EAAUpO,EAAKlY,MAAM,EAAGzI,EAAKmV,IAAI,GAC5B7G,OAAOqS,EAAKlY,MAAMzI,EAAKmV,aAEzBqG,EAAKoS,KAAKnL,EAAIrK,KACRoD,EAAKuP,OAAO2D,EAAe,CAAC1D,SAAY2D,EAC5BjN,UAAamN,EACblO,KAAQoO,EACPR,YAAc,IAExCpV,QAAQpD,IAAI,kBAAmB2Y,IASnClT,EAAK6S,iBAAmB,SAASJ,EAASgB,GAGtC,IAFA,IAAIb,EAAW,GAENpwB,EAAI,EAAGA,EAAIixB,EAAc9nB,OAAQnJ,IAAK,CAC3C,IAAIomB,EAAU,CAACb,SAAU,WAAYtkB,MAAO,EAAGmZ,IAAKC,IAAO1R,OACvDoc,OAAQ,KAAMzT,OAAQ,MAE1B,GAA4D,mBAAxD5Q,OAAOkB,UAAUuG,SAAShI,KAAK8wB,EAAcjxB,GAAG,KAChD,IAAK,IAAI8M,EAAI,EAAGA,EAAImjB,EAAQpN,MAAM1Z,OAAQ2D,IACtC,GAAI,SAAUmjB,EAAQpN,MAAM/V,IACpBmjB,EAAQpN,MAAM/V,GAAGsX,KAAKnT,OAAOggB,EAAcjxB,GAAG,IAAK,CACnDomB,EAAQrB,OAASkL,EAAQpN,MAAM/V,GAC/B,YAKZ,IAASA,EAAI,EAAGA,EAAImjB,EAAQpN,MAAM1Z,OAAQ2D,IAClCmjB,EAAQpN,MAAM/V,GAAGqK,KAAO8Z,EAAcjxB,GAAG,KACzComB,EAAQrB,OAASkL,EAAQpN,MAAM/V,IAM3C,GAA4D,mBAAxDpM,OAAOkB,UAAUuG,SAAShI,KAAK8wB,EAAcjxB,GAAG,IAChD,IAAS8M,EAAI,EAAGA,EAAImjB,EAAQpN,MAAM1Z,OAAQ2D,IAClC,SAAUmjB,EAAQpN,MAAM/V,IACpBmjB,EAAQpN,MAAM/V,GAAGsX,KAAKnT,OAAOggB,EAAcjxB,GAAG,MAC9ComB,EAAQ9U,OAAS2e,EAAQpN,MAAM/V,SAK3C,IAASA,EAAI,EAAGA,EAAImjB,EAAQpN,MAAM1Z,OAAQ2D,IAClCmjB,EAAQpN,MAAM/V,GAAGqK,KAAO8Z,EAAcjxB,GAAG,KACzComB,EAAQ9U,OAAS2e,EAAQpN,MAAM/V,IAKrB,MAAlBsZ,EAAQrB,QAAoC,MAAlBqB,EAAQ9U,OAKtC8e,EAASvqB,KAAKugB,GAJVjL,QAAQpD,IAAI,iDAAkDqO,EAAS6K,EAAcjxB,IAO7F,OAAOowB,GAGX5S,EAAK8S,WAAa,SAASY,EAATC,GAG+B,IAMzCC,EAAMC,EANmCC,EAAAH,EAFpBpB,mBAEoB,IAAAuB,KAAAC,EAAAJ,EADrBlE,iBACqB,IAAAsE,EADT,KACSA,EAAAC,EAAAL,EAArBZ,kBAAqB,IAAAiB,KAS7C,GAFArW,QAAQpD,IAAI,cAAewY,GAEV,MAAbtD,EAAmB,CAEnB,IAAIwE,EAAS,EACTC,EAAS,EACTC,EAAY,EAEhBT,EAASrO,MAAM+O,QAAQ,SAAS5vB,GAC5ByvB,GAAUzvB,EAAKqD,EACfqsB,GAAU1vB,EAAKsD,EACfqsB,GAAa,IAGbA,EAAY,GAGZT,EAASrO,MAAM+O,QAAQ,SAAS5vB,GAC5BA,EAAKqD,EAAIrD,EAAKqD,EAAI4nB,EAAU,GAAKwE,EAASE,EAC1C3vB,EAAKsD,EAAItD,EAAKsD,EAAI2nB,EAAU,GAAKyE,EAASC,EAE1C3vB,EAAK0iB,GAAK1iB,EAAKqD,EACfrD,EAAK2iB,GAAK3iB,EAAKsD,IA+B3B,OA1BIyqB,IAEIqB,EADA5T,EAAKsQ,MAAMjL,MAAM1Z,OAAS,EACnByR,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAK,OAAOA,EAAE+E,KAEnD,EAEXgsB,EAAOzW,IAAGnM,IAAIyiB,EAASrO,MAAMzE,IAAI,SAAS9d,GAAK,OAAOA,EAAE+E,KAExD6rB,EAASrO,MAAM+O,QAAQ,SAAS5vB,GAC5BA,EAAKqD,GAAM+rB,EAAOC,EAAQ,GAC1BrvB,EAAK0iB,IAAO0M,EAAOC,KAI3BH,EAASrO,MAAM+O,QAAQ,SAAS5vB,GAC5BA,EAAKyiB,IAAMyM,IAGf1T,EAAKoS,KAAKsB,EAAS9W,KAAO8W,EAC1B1T,EAAKqU,mBAELrU,EAAKsU,SAEDvB,GACA/S,EAAK+S,aAEFW,GAgDX1T,EAAKuU,cAAgB,SAASC,EAAcC,GAExC,IAAIC,EAAW1U,EAAK9E,QAAQ2T,mBAMxB3T,EAAU,CAACiK,KAJJnF,EAAKsQ,MAAMjL,MACrBC,OAAO,SAASxiB,GAAK,MAAqB,cAAdA,EAAEyiB,WAC9B3E,IAAI,SAAS9d,GAAK,OAAOA,EAAE8Z,OAGxB+X,EAAa3U,EAAKqS,oBAAoBmC,EAActZ,GAEpD0Z,EAASC,EAASxX,UAAU,WAAW1P,KAAKgnB,EAAWtP,MAAOyP,GAEjD,IAAbJ,EACAE,EAAOnW,KAAK,YAAa,SAAS3b,GAC9B,MAAO,aAAe,CAACA,EAAE+E,EAAG/E,EAAEgF,GAAK,MAGvC8sB,EAAOG,aAAatW,KAAK,YAAa,SAAS3b,GAC3C,MAAO,aAAe,CAACA,EAAE+E,EAAG/E,EAAEgF,GAAK,MAAQ4sB,SAASA,GAG5D,IAAIpN,EAAQ0N,EAAS3X,UAAU,aAC9B1P,KAAKgnB,EAAWrN,MAAMhC,OAAOwL,GAAiBmE,GAC3CC,EAAWlV,EAAKmV,eAAeP,EAAOtX,SACzCmB,KAAK,YAAa,SAAS3b,GACxB,YAAkB,IAAPA,EAAE+E,QAAkC,IAAP/E,EAAEgF,EAC/B,aAAe,CAAC,EAAG,GAAK,IAExB,KA2Cf,GAvCiB,IAAb4sB,EACAE,EAAOQ,OAAOC,SAEdT,EAAOQ,OAAOL,aACbtW,KAAK,YAAa,SAAS3b,GACxB,YAAkB,IAAPA,EAAE+E,QAAkC,IAAP/E,EAAEgF,EAC/B,aAAe,CAAC,EAAG,GAAK,IAExB,KAGnB8sB,EAAOnX,OAAO,QACb6X,KAAK9E,GAENxQ,EAAKsQ,MAAMjL,MAAQuP,EAAOjnB,OAC1BqS,EAAKuV,cACLvV,EAAK+S,WAAW2B,GAqBhBpN,EAAM8N,OAAOC,SAEI,IAAbX,EAAgB,CAChBpN,EACC7I,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAO1f,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAOzf,IACzC2W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOjM,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOhM,IAE3BkY,EAAKwV,eAAelO,EAAMhK,SACzC0C,EAAKsQ,MAAMhJ,MAAQA,EAAM3Z,OAEzBqS,EAAKuV,mBAELjO,EAAMyN,aACLtW,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAO1f,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAOzf,IACzC2W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOjM,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOhM,IACzC4sB,SAASA,GACT/xB,KAvCL,SAAgBoyB,EAAYU,GACE,IAAtBV,EAAWjnB,QAAgB4nB,WAAWD,EAAUf,GACpD,IAAIzwB,EAAI,EACR8wB,EACCO,KAAK,aAAerxB,IACpBqxB,KAAK,MAAO,aAAoBrxB,GAAGwxB,EAAS5jB,MAAMxM,KAAM+N,cAG7D,WACmB4M,EAAKwV,eAAelO,EAAMhK,SACzC0C,EAAKsQ,MAAMhJ,MAAQA,EAAM3Z,OAEzBqS,EAAKuV,mBAEsB,IAAhBd,GACPA,MA2BS,IAAbC,EACAQ,EACCzW,KAAK,YAAa,SAAS3b,GACxB,YAAkB,IAAPA,EAAE+E,QAAkC,IAAP/E,EAAEgF,EAC/B,aAAe,CAAChF,EAAE+E,EAAG/E,EAAEgF,GAAK,IAE5B,KAGfotB,EAASH,aACRtW,KAAK,YAAa,SAAS3b,GACxB,YAAkB,IAAPA,EAAE+E,QAAkC,IAAP/E,EAAEgF,EAC/B,aAAe,CAAChF,EAAE+E,EAAG/E,EAAEgF,GAAK,IAE5B,MAMvBkY,EAAKqU,iBAAmB,WAKpB,IAAK,IAAIzX,KAFToD,EAAKsQ,MAAMjL,MAAQ,GACnBrF,EAAKsQ,MAAMhJ,MAAQ,GACHtH,EAAKoS,KACjBpS,EAAKsQ,MAAMjL,MAAQrF,EAAKsQ,MAAMjL,MAAMvS,OAAOkN,EAAKoS,KAAKxV,GAAKyI,OAC1DrF,EAAKsQ,MAAMhJ,MAAQtH,EAAKsQ,MAAMhJ,MAAMxU,OAAOkN,EAAKoS,KAAKxV,GAAK0K,OAQ9D,IAFA,IAAIqO,EAAc,GAETnzB,EAAI,EAAGA,EAAIwd,EAAKsQ,MAAMjL,MAAM1Z,OAAQnJ,IACzCmzB,EAAY3V,EAAKsQ,MAAMjL,MAAM7iB,GAAGoa,KAAOoD,EAAKsQ,MAAMjL,MAAM7iB,GAO5D,IALAwd,EAAKsQ,MAAMhJ,MAAM8M,QAAQ,SAASxvB,GAC9BA,EAAK2iB,OAASoO,EAAY/wB,EAAK2iB,OAAO3K,KACtChY,EAAKkP,OAAS6hB,EAAY/wB,EAAKkP,OAAO8I,OAGrCpa,EAAI,EAAGA,EAAIwd,EAAK2I,WAAWhd,OAAQnJ,IAGpC,GAAMwd,EAAK2I,WAAWnmB,GAAGsR,OAAO8I,OAAO+Y,EAAvC,CAQA,GAHA3V,EAAK2I,WAAWnmB,GAAG+kB,OAASoO,EAAY3V,EAAK2I,WAAWnmB,GAAG+kB,OAAO3K,KAClEoD,EAAK2I,WAAWnmB,GAAGsR,OAAS6hB,EAAY3V,EAAK2I,WAAWnmB,GAAGsR,OAAO8I,KAE/B,iBAA/BoD,EAAK2I,WAAWnmB,GAAGulB,SAQnB,IANA,IAAI6N,EAAY5V,EAAKsQ,MAAMhJ,MAAMhC,OAAO,SAASxiB,GAC7C,OAASA,EAAEykB,QAAUvH,EAAK2I,WAAWnmB,GAAG+kB,QAAUzkB,EAAEykB,QAAUvH,EAAK2I,WAAWnmB,GAAGsR,QACzEhR,EAAEgR,QAAUkM,EAAK2I,WAAWnmB,GAAG+kB,QAAUzkB,EAAEgR,QAAUkM,EAAK2I,WAAWnmB,GAAG+kB,SAC1D,QAAdzkB,EAAEilB,WAGLzY,EAAI,EAAGA,EAAIsmB,EAAUjqB,OAAQ2D,IAAK,CACvC,IAAIumB,EAAY7V,EAAKsQ,MAAMhJ,MAAM5Y,QAAQknB,EAAUtmB,IACnD0Q,EAAKsQ,MAAMhJ,MAAM8L,OAAOyC,EAAW,GAI3CvF,EAAMhJ,MAAMjf,KAAK2X,EAAK2I,WAAWnmB,SArB7Bmb,QAAQpD,IAAI,aAAcyF,EAAK2I,WAAWnmB,KAyBtDwd,EAAK8V,SAAW,SAAkBC,GAK9BA,EAAKzO,MAAM8M,QAAQ,SAAS4B,GACG,iBAAhBA,EAAMzO,SAAoByO,EAAMzO,OAASwO,EAAK1Q,MAAM2Q,EAAMzO,SAC1C,iBAAhByO,EAAMliB,SAAoBkiB,EAAMliB,OAASiiB,EAAK1Q,MAAM2Q,EAAMliB,WAMrEkM,EAAKsQ,MAAMjL,MAAM1Z,OAAS,GAC1BioB,KAAOxW,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAE+E,KACzDouB,KAAO7Y,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAEgF,OAEzD8rB,KAAO,EACPqC,KAAO,GAGXF,EAAK1Q,MAAM+O,QAAQ,SAAS4B,GAClBA,EAAM/O,IAAIrK,OAAOoD,EAAKoS,OACxBpS,EAAKoS,KAAK4D,EAAM/O,IAAIrK,KAAOoZ,EAAM/O,KAGrC+O,EAAMnuB,GAAK+rB,KAGXoC,EAAM9O,IAAM0M,OAIhBtwB,EAAI,IAAIohB,EAAS,GAAG,IACpBphB,EAAE+hB,MAAQ0Q,EAAK1Q,MACf/hB,EAAEgkB,MAAQyO,EAAKzO,MAGftH,EAAKqU,mBAELrU,EAAKsU,SACLtU,EAAK+S,cAGT/S,EAAKkW,gBAAkB,SAAyBH,GAE5C/V,EAAKiS,aAAe8D,GAGxB/V,EAAKmW,oBAAsB,SAASC,GAChC,IAAIC,EAAK,IAAIvT,EAAYsT,GACzBpW,EAAKiS,aAAeoE,EAAG5S,WACvBzD,EAAKsW,kBAAkB,WAG3BtW,EAAKuW,WAAa,WACdvW,EAAKsQ,MAAMjL,MAAQ,GACnBrF,EAAKsQ,MAAMhJ,MAAQ,GAEnBtH,EAAKoS,KAAO,GACZpS,EAAK2I,WAAa,GAElB3I,EAAKsU,UAGTtU,EAAK3L,OAAS,WACX,IAAI1G,EAAO,CAACykB,KAAQpS,EAAKoS,KAAMzJ,WAAc3I,EAAK2I,YASlD,OARsBJ,KAAKC,UAAU7a,EAAM,SAAS5J,EAAKN,GAEpD,MAAW,OAAPM,OACA,EAEON,GAEb,OAINuc,EAAKwW,SAAW,SAASC,GACrB,IAAIrE,EAAMzJ,EAEV,IACI,IAAIhb,EAAO4a,KAAK7d,MAAM+rB,GACtBrE,EAAOzkB,EAAKykB,KACZzJ,EAAahb,EAAKgb,WACpB,MAAM+N,GACJ,MAAMA,EAGV,IAAK,IAAI9Z,KAAOwV,EACU,OAAlBA,EAAKxV,GAAKlP,MACVpK,EAAI,IAAIohB,EAERphB,EAAEqhB,IAAMyN,EAAKxV,GAAK+H,IAClBrhB,EAAE0d,WAAaoR,EAAKxV,GAAKoE,WACzB1d,EAAEyhB,SAAWqN,EAAKxV,GAAKmI,SACvBzhB,EAAEmiB,UAAY2M,EAAKxV,GAAK6I,UACxBniB,EAAEsZ,IAAMwV,EAAKxV,GAAKA,IAClBtZ,EAAEshB,WAAawN,EAAKxV,GAAKgI,WACzBthB,EAAE+hB,MAAQ+M,EAAKxV,GAAKyI,MACpB/hB,EAAEgkB,MAAQ8K,EAAKxV,GAAK0K,MACpBhkB,EAAEyiB,UAAYqM,EAAKxV,GAAKmJ,UACxBziB,EAAEkf,SAAW4P,EAAKxV,GAAK4F,SACvBlf,EAAE2hB,YAAcmN,EAAKxV,GAAKqI,YAC1B3hB,EAAE0hB,gBAAkBoN,EAAKxV,GAAKoI,kBAE9B1hB,EAAI,IAAIqzB,aACRrzB,EAAEwK,KAAOskB,EAAKxV,GAAK9O,KACnBxK,EAAE+hB,MAAQ+M,EAAKxV,GAAKyI,MACpB/hB,EAAEsZ,IAAMwV,EAAKxV,GAAKA,KAGtBoD,EAAK8S,WAAWxvB,GAAG,GAGvBqlB,EAAWyL,QAAQ,SAASxvB,GACxBob,EAAK2I,WAAWtgB,KAAKzD,KAGzBob,EAAKqU,mBACLrU,EAAKsU,UAGTtU,EAAK4W,QAAU,WACX,GAAgC,MAA5B5W,EAAK9E,QAAQwT,YAAjB,CAGA,IAAIO,EAAO7R,IAAGK,OAAOsQ,GAASvpB,OAAOqyB,aACjC7H,EAAO5R,IAAGK,OAAOsQ,GAASvpB,OAAOsyB,YAErC9W,EAAK9E,QAAQ8T,KAAOA,EACpBhP,EAAK9E,QAAQ+T,KAAOA,EAGpBG,EAAOxL,MAAM,CAAC,EAAGoL,IAAO/K,OAAO,CAAC,EAAG+K,IACnCM,EAAO1L,MAAM,CAAC,EAAGqL,IAAOhL,OAAO,CAAC,EAAGgL,IAGnCjP,EAAK+W,OAAOlvB,EAAEunB,GACbtnB,EAAEwnB,GAEHtP,EAAKgX,QAAQnvB,EAAEunB,GACdtnB,EAAEwnB,GAEHtP,EAAK+S,aAEA/S,EAAK9E,QAAQ6T,mBAUlBkI,EAAIxY,KAAK,QAASuQ,GACjBvQ,KAAK,SAAUwQ,KAqBpBjP,EAAKkX,gBAAkB,SAAShT,GAChB2Q,EAASxX,UAAU,WAAWI,OAAO,0BAC3CG,MAAM,OAAQsG,IAGxBlE,EAAKsW,kBAAoB,SAASa,GACXtC,EAASxX,UAAU,uBAEzBG,QAAQ4Z,IAAO5yB,MAAM,GACrBia,KAAK,IAAK,SAAS3b,GAAK,OAAOA,EAAEiF,SAEjC8sB,EAASxX,UAAU,WAClBwX,EAASxX,UAAU,WAAWA,UAAU,UADtD,IAEIgI,EAAQwP,EAASxX,UAAU,WAAWI,OAAO,0BAIjD,GAHAuC,EAAKgS,YAAcmF,EAGG,YAAlBA,EAA8B,CAC9B,IAAInH,EAAQ5S,IAAG4S,MAAMqH,UACpBzT,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,YACnDK,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,MACzBoB,EAAMzH,MAAM,OAAQ,SAAS9a,GACzB,OAAOktB,EAAMltB,EAAEC,aAGhB,GAAsB,aAAlBo0B,EAA+B,CAClCnH,EAAQ5S,IAAG4S,MAAMsH,aACpBrT,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAChCL,MAAM,CAAC,aAAc,UAAW,UAAW,cACrC,YAAa,YAAa,gBAE1ByB,EAAMzH,MAAM,OAAQ,SAAS9a,GACzB,OAAOktB,EAAMltB,EAAEwjB,iBAGvB,GAAsB,aAAlB6Q,EACP9R,EAAMzH,MAAM,OAAQ,SAAS9a,GAMzB,OALYsa,IAAG4S,MAAMK,SACpBzM,MAAM,CAAC,UAAW,UAAW,YAC7B2T,YAAYna,IAAGoa,gBACfvT,OAAO,CAAC,EAAG,GAAKnhB,EAAEmkB,IAAIlB,UAAY,GAAK,EAAGjjB,EAAEmkB,IAAIlB,WAE1CiK,CAAMltB,EAAE6W,YAEhB,GAAsB,UAAlBwd,EAA4B,CAGnC,QAAgC,IAArBnX,EAAKiS,cACZ,WAAYjS,EAAKiS,cAClB,UAAWjS,EAAKiS,aACXjC,EAAQ5S,IAAG4S,MAAMK,SACpBkH,YAAYna,IAAGoa,gBACfvT,OAAOjE,EAAKiS,aAAahO,QACzBL,MAAM5D,EAAKiS,aAAarO,OAG7ByB,EAAMzH,MAAM,OAAQ,SAAS9a,GACzB,YAAgC,IAArBkd,EAAKiS,cACZjS,EAAKiS,aAAa5tB,eAAe,eAIjC2b,EAAKiS,aAAavO,YAAYrf,eAAevB,EAAE8hB,aAC/C5E,EAAKiS,aAAavO,YAAY5gB,EAAE8hB,YAAYvgB,eAAevB,EAAE6W,KAItDoX,EADc/Q,EAAKiS,aAAavO,YAAY5gB,EAAE8hB,YACjB9hB,EAAGktB,GAChChQ,EAAKiS,aAAavO,YAAYrf,eAAe,IAE7C0sB,EADc/Q,EAAKiS,aAAavO,YAAY,IACf5gB,EAAGktB,GAGpC,QAdI,YAqDvB7tB,OAAOs1B,iBAAiB,SAAUzX,EAAK4W,SAAS,GAEhD5W,EAAK+W,OAAS3Z,IAAGsa,SAASC,OACrBC,YAAY,CAAC,GAAI,KACjB/vB,EAAEunB,GACFtnB,EAAEwnB,GACF5R,GAAG,YA6ER,WACI,IAAIlZ,EAAOqwB,EAASxX,UAAU,WAC9B7Y,EAAK8wB,KAAK,SAASxyB,GACXA,EAAE+0B,UAAW,EACb/0B,EAAEg1B,oBAAqB,IAE/BtzB,EAAKgZ,QAAQ4Z,IAAO1yB,cAAc,KAlFjCgZ,GAAG,OAqFR,WACIqa,EAAItZ,KAAK,YACA,aAAerB,IAAGkB,MAAM0Z,UAAY,WAAkB5a,IAAGkB,MAAM0R,MAAQ,OArFpF5S,IAAGK,OAAOsQ,GAAStQ,OAAO,OAAO4X,SAEjC,IAAI4B,EAAM7Z,IAAGK,OAAOsQ,GACnBtP,KAAK,WAAY,GACjBf,GAAG,gBAAiBua,GACpBva,GAAG,cAAewa,GAClB5C,KAAK,WAAajwB,KAAK8yB,UACvB5a,OAAO,WACPkB,KAAK,QAASuB,EAAK9E,QAAQ8T,MAC3BvQ,KAAK,SAAUuB,EAAK9E,QAAQ+T,MAE7BjP,EAAK9E,QAAQ+b,IAAMA,EAEnB,IAAImB,EAAWnB,EAAI1Z,OAAO,SACzBG,GAAG,YArDJ,WAEI,GAAKwS,EAAL,CAGW2E,EAASxX,UAAU,WACzBG,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAK,OAAOA,EAAEuzB,SAAY7X,EAAK9E,QAAQkT,aAAe9pB,EAAEwzB,oBAAqB,KAGxH,IAAIO,EAAOjb,IAAGe,MAAM4Z,EAAIvzB,QACxBO,EACC0Z,KAAK,KAAMyR,EAAcroB,GACzB4W,KAAK,KAAMyR,EAAcpoB,GACzB2W,KAAK,KAAM4Z,EAAK,IAChB5Z,KAAK,KAAM4Z,EAAK,OAwCpB3a,GAAG,YA1DJ,cA2DCA,GAAG,UAtCJ,WACQwS,IAEKE,GACDrrB,EACC0Z,KAAK,QAAS2Y,IAAOtyB,cAI9BwzB,MA8BH9a,QAAQ,oBAAoB,GAEzBwC,EAAK9E,QAAQ0T,wBACbwJ,EAASz1B,KAAKqd,EAAK+W,QAEnB/W,EAAK9E,QAAQgT,UACbkK,EAAS1a,GAAG,cAAesC,EAAK+P,uBAapC,IAAI/qB,EAAQozB,EAAS7a,OAAO,KAC3Bgb,MAAM,WAAa,MAAO,CAACV,UAAU,EAAOC,oBAAoB,KAChErZ,KAAK,QAAS2Y,IAAOpyB,OAElB+yB,EAAMK,EAAS7a,OAAO,SACzBC,QAAQ4Z,IAAO3yB,MAAM,GAClBuwB,EAAW+C,EAAIxa,OAAO,SACtBsX,EAAWkD,EAAIxa,OAAO,SAE1ByC,EAAKgX,QAAU5Z,IAAG6Z,IAAIjyB,QACT6C,EAAEunB,GACFtnB,EAAEwnB,GACH5R,GAAG,aAAc,SAAS5a,GACV+xB,EAASxX,UAAU,WACzBiY,KAAK,SAASxyB,GAAKA,EAAEg1B,mBAAqBU,GAAe11B,EAAE+0B,aAErEna,GAAG,QAAS,WACT,IAAIkX,EAASC,EAASxX,UAAU,WAC5Bob,EAASrb,IAAGkB,MAAMxK,OAAO2kB,SAE7B7D,EAAOpX,QAAQ4Z,IAAO1yB,aAAc,SAAS5B,GACzC,OAAOA,EAAE+0B,SAAW7X,EAAK9E,QAAQkT,YAActrB,EAAEg1B,oBAChDW,EAAO,GAAG,IAAM31B,EAAE+E,GAAK/E,EAAE+E,EAAI4wB,EAAO,GAAG,IACpCA,EAAO,GAAG,IAAM31B,EAAEgF,GAAKhF,EAAEgF,EAAI2wB,EAAO,GAAG,QAGlD/a,GAAG,WAAY,WACZN,IAAGkB,MAAMxK,OAAO4kB,QAChBtb,IAAGK,OAAOpY,MAAM1C,KAAKya,IAAGkB,MAAMxK,UAG3C9O,EAAMrC,KAAKqd,EAAKgX,SACXtZ,GAAG,kBAAmB,MACtBA,GAAG,mBAAoB,MACvBA,GAAG,kBAAmB,MACtBA,GAAG,iBAAkB,MAC1B1Y,EAAMyY,OAAO,eAAeG,MAAM,SAAU,QAgB9CoC,EAAK2Y,wBAA0B,WAK3B,GAAgC,IAA5B3Y,EAAKsQ,MAAMjL,MAAM1Z,OACjB,MAAO,CAACqsB,UAAa,CAAC,EAAE,GAAIhI,MAAS,GAGzC,IAAI6D,EAAOzW,IAAGnM,IAAI+O,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAE+E,KACzD+wB,EAAOxb,IAAGnM,IAAI+O,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAEgF,KAEzD8rB,EAAOxW,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAE+E,KACzDouB,EAAO7Y,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAI,OAAOA,EAAEgF,KAEzD+wB,EAAYzb,IAAGzJ,IAAIqM,EAAKsQ,MAAMjL,MAAMzE,IAAI,SAAS9d,GAAK,OAAOA,EAAEiF,UAG/D+wB,EAAWlF,EAAOC,EAClBkF,EAAY9C,EAAO2C,EAGnBI,EAAahZ,EAAK9E,QAAQ8T,MAAQ8J,EAAW,GAC7CG,EAAcjZ,EAAK9E,QAAQ+T,MAAQ8J,EAAY,GAI/CG,EAC8D,GADnDloB,KAAKC,IAAI+nB,EAAYC,EACZjZ,EAAK9E,QAAQ4T,cAAgB+J,GAGjDM,EAAcL,EAAWI,EACzBE,EAAeL,EAAYG,EAM/B,MAAO,CAAClB,UAAa,EAHNnE,EAAQqF,GAAYlZ,EAAK9E,QAAQ8T,KAAOmK,GAAe,GACvDP,EAAQM,GAAYlZ,EAAK9E,QAAQ+T,KAAOmK,GAAgB,GAEhCpJ,MAASkJ,IAGpDlZ,EAAK+S,WAAa,SAAS2B,GACE,IAArBthB,UAAUzH,SACV+oB,EAAW,GAEf,IAAI2E,EAAcrZ,EAAK2Y,0BAEH,OAAhBU,IAIJtB,EAAIhD,aAAatW,KAAK,YACb,aAAe4a,EAAYrB,UAAY,WAAkBqB,EAAYrJ,MAAQ,KAAK0E,SAASA,GAIpG1U,EAAK+W,OAAOiB,UAAUqB,EAAYrB,WAClChY,EAAK+W,OAAO/G,MAAMqJ,EAAYrJ,SAGlChQ,EAAKsZ,MAAQlc,IAAGuR,OAAO2K,QACtBC,OAAO,SAASz2B,GAAK,MAAkB,UAAdA,EAAEyiB,SACbvF,EAAK9E,QAAQqT,aAGbvO,EAAK9E,QAAQsT,cAC3BF,SAAStO,EAAK9E,QAAQoT,UACtBkL,aAAa,SAAS12B,GAAK,OAAOkd,EAAK9E,QAAQuT,uBAAyB3rB,EAAEW,QAC1Eg2B,aAAa,SAAS32B,GAAK,OAAIA,EAAEilB,YAAY/H,EAAKkR,cACdlR,EAAKkR,cAAcpuB,EAAEilB,UAErB/H,EAAKkR,cAAcK,QAEvDmI,QAAQ,GACRrU,MAAMrF,EAAKsQ,MAAMjL,OACjBiC,MAAMtH,EAAKsQ,MAAMhJ,OACjB+G,eAAerO,EAAK9E,QAAQmT,gBAC5BvgB,KAAK,CAACkS,EAAK9E,QAAQ8T,KAAMhP,EAAK9E,QAAQ+T,OAGvC,IAAIlqB,EAAWgzB,EAAIxa,OAAO,QACzBkB,KAAK,QAAS2Y,IAAOryB,UACrB0Z,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAM,GAEZ,SAAS6Z,IACLpI,EAAgB,KAChBC,EAAc,KACE,KAGpB,IAAIwJ,GAAe,EACfnB,GAAc,EAElB,SAASoB,EAAcC,GACnB,IAAIjF,EAASC,EAASxX,UAAU,WAEhC,OACWuX,EAAOtP,OAAO,SAASxiB,GAAK,OAAOA,EAAE+0B,WA2DpD,SAASiC,EAAQt1B,GACb,IAAIlB,EAAIkB,EAAKuD,OAAS,GACtBgyB,EAAMv1B,EAAKqD,EAAIvE,EACf02B,EAAMx1B,EAAKqD,EAAIvE,EACf22B,EAAMz1B,EAAKsD,EAAIxE,EACf42B,EAAM11B,EAAKsD,EAAIxE,EACf,OAAO,SAAS62B,EAAMC,EAAIC,EAAIC,EAAIC,GAC9B,GAAIJ,EAAKK,OAAUL,EAAKK,QAAUh2B,EAAO,CACrC,IAAIqD,EAAIrD,EAAKqD,EAAIsyB,EAAKK,MAAM3yB,EAC5BC,EAAItD,EAAKsD,EAAIqyB,EAAKK,MAAM1yB,EACxBrF,EAAIuO,KAAK0Y,KAAK7hB,EAAIA,EAAIC,EAAIA,GAC1BxE,EAAIkB,EAAKuD,OAASoyB,EAAKK,MAAMzyB,OACzBtF,EAAIa,IACJb,GAAKA,EAAIa,GAAKb,EAAI,GAClB+B,EAAKqD,GAAKA,GAAKpF,EACf+B,EAAKsD,GAAKA,GAAKrF,EACf03B,EAAKK,MAAM3yB,GAAKA,EAChBsyB,EAAKK,MAAM1yB,GAAKA,GAGxB,OAAOsyB,EAAKJ,GAAOM,EAAKP,GAAOM,EAAKH,GAAOK,EAAKN,GAjCxDja,EAAKya,YAAc,WACXza,EAAKkS,WACLlS,EAAKsZ,MAAMoB,UAoCnB,IAAIC,EAAOvd,IAAGsa,SAASiD,OAEtBjd,GAAG,YA7EJ,SAAqB5a,GACjBsa,IAAGkB,MAAMsc,YAAYpc,kBAElB1b,EAAE+0B,UAAaW,GAEH3D,EAASxX,UAAU,WACzBG,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAK,OAAOA,EAAEuzB,SAAY7X,EAAK9E,QAAQkT,aAAe9pB,EAAEwzB,oBAAqB,KAG5H1a,IAAGK,OAAOpY,MAAMmY,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAwC,OAAnCxB,EAAEg1B,mBAAqBh1B,EAAE+0B,SAAiB/0B,EAAE+0B,SAAW7X,EAAK9E,QAAQkT,aAAc,IAEhIwL,IACNtE,KAAK,SAASuF,GACjBA,EAAGC,OAAS,MAiEnBpd,GAAG,OAzDJ,SAAiB5a,GAEA82B,IAENtE,KAAK,SAASuF,GACjBA,EAAGhzB,GAAKuV,IAAGkB,MAAMyc,GACjBF,EAAG/yB,GAAKsV,IAAGkB,MAAM0c,GAEjBH,EAAG3T,IAAM9J,IAAGkB,MAAMyc,GAClBF,EAAG1T,IAAM/J,IAAGkB,MAAM0c,KAGtBhb,EAAKya,cACLrd,IAAGkB,MAAMsc,YAAYrc,mBA6CxBb,GAAG,UArCJ,SAAmB5a,GACF82B,IAENtE,KAAK,SAASuF,GACjBA,EAAGC,QAAS,MAmCpB,SAAS7C,IACL,IAAIjY,EAAKmS,OAILwH,EAAJ,CAEA,OAAQvc,IAAGkB,MAAM2c,SACb,KAAK,GACDtd,QAAQpD,IAAI,cAAeyF,EAAKkb,2BAChC,MACJ,KAAK,GACDvB,GAAe,EACf,MACJ,KAAK,GACDnB,GAAc,EACd,MACJ,KAAK,GACDxY,EAAK+S,cAIT4G,GAAgBnB,KAChBJ,EAASz1B,KAAKqd,EAAK+W,QAClBrZ,GAAG,iBAAkB,MACrBA,GAAG,kBAAmB,MACtBA,GAAG,iBAAkB,MACrBA,GAAG,gBAAiB,MAGrBqa,EAAI1a,UAAU,WACbK,GAAG,iBAAkB,OAGtB8a,IACFxzB,EAAMyY,OAAO,eAAeG,MAAM,SAAU,aAC5C5Y,EAAMrC,KAAKqd,EAAKgX,WAItB,SAASkB,IACLyB,GAAe,EACfnB,GAAc,EAEdxzB,EAAMrC,KAAKqd,EAAKgX,SACftZ,GAAG,kBAAmB,MACtBA,GAAG,mBAAoB,MACvBA,GAAG,kBAAmB,MACtBA,GAAG,iBAAkB,MAEtB1Y,EAAMyY,OAAO,eAAeG,MAAM,SAAU,QAC5Cwa,EAASz1B,KAAKqd,EAAK+W,QAEnBgB,EAAI1a,UAAU,WACb1a,KAAKg4B,GAGVvd,IAAGK,OAAOsQ,GACTrQ,GAAG,UAAWua,GACdva,GAAG,QAASwa,GACZxa,GAAG,cAAe,WACXN,IAAGkB,MAAMC,mBAGjB,IAAI0W,EAAU,SAASnyB,GACnB,OAAOA,EAAE8Z,KAGTkY,EAAU,SAAShyB,GAEnB,OADUA,EAAE8Z,KAKZue,EAAiB,SAAS73B,GAC1B,IAAI83B,EAAsB93B,EAAEijB,aAAa,cACrC8U,EAAiB/3B,EAAEijB,aAAa,SAEhCpB,EAAO7hB,EAAEkjB,UAEbljB,EAAEumB,sBACDd,iBACAsB,iBACApE,aAAa,aAAcmV,GAC3BlW,QAAQC,GACRiE,UAAU,EAAGpJ,EAAK9E,QAAQmO,eAC1BpD,aAAa,QAASoV,GACtB5U,iBACAK,iBACAO,kBA2FDiU,EAAa,SAASx4B,GAEtB,IAAI+a,EAAQmC,EAAKsQ,MAAMhJ,MAAM5Y,QAAQ5L,GAGrC,GAFA6a,QAAQpD,IAAI,iBAAkBsD,GAE1BA,GAAS,EAAG,CAOZ,GAAI/a,EAAEykB,OAAON,KAAOnkB,EAAEgR,OAAOmT,IAAK,CAC9B,GAAkB,YAAdnkB,EAAEilB,SAKF,OAJApK,QAAQpD,IAAI,mCAAoCzX,EAAEykB,OAAO5N,IAAK7W,EAAEgR,OAAO6F,UAtG9D,SAAS7W,GAC9B,GAAIA,EAAEgR,OAAO6F,IAAM7W,EAAEykB,OAAO5N,KAAO,EAAnC,CASA,IAHA,IAAIsN,EAAMnkB,EAAEgR,OAAOmT,IACfnF,EAAW,GAENtf,EAAI,EAAGA,EAAIykB,EAAIK,MAAM3b,OAAQnJ,IAAK,CACvC,IAAIoC,EAAOqiB,EAAIK,MAAM9kB,GAEA,YAAjBoC,EAAKmjB,UAGLnjB,EAAK2iB,OAAO5N,KAAO7W,EAAEykB,OAAO5N,KAAO/U,EAAKkP,OAAO6F,KAAO7W,EAAEgR,OAAO6F,MAC/DgE,QAAQpD,IAAI,oBAAqB3V,GACjCkd,EAASzZ,KAAKzD,IAOtB+Y,QAAQpD,IAAI,YAAauH,GAEzB,IAAK,IAAItf,EAAI,EAAGA,EAAIsf,EAASnW,OAAQnJ,IACjCykB,EAAIxB,UAAU3D,EAAStf,GAAG+kB,OAAO5N,KAAO,EACxCsN,EAAIxB,UAAU3D,EAAStf,GAAGsR,OAAO6F,KAAO,EAExCmI,EAAStf,GAAG2J,KAAO2V,EAAStf,GAAG+kB,OAAO5N,IACtCmI,EAAStf,GAAGqf,GAAKC,EAAStf,GAAGsR,OAAO6F,IAAM7W,EAAEykB,OAAO5N,IAKxCsN,EAAItC,IAAnB,IACI4W,EAAYtU,EAAItC,IAAI1X,MAAM,EAAGnK,EAAEykB,OAAO5N,KACtC6hB,EAAYvU,EAAItC,IAAI1X,MAAMnK,EAAEykB,OAAO5N,KAEnC8hB,EAAgB1b,EAAa2B,sBAAsBuF,EAAIxB,WACvDiW,EAAcD,EAAcxuB,MAAM,EAAGnK,EAAEykB,OAAO5N,KAC9CgiB,EAAcF,EAAcxuB,MAAMnK,EAAEykB,OAAO5N,KAI3CuM,EAAYe,EAAIV,aAAa,cAC7BpB,EAAO8B,EAAIT,UAEXoV,EAAa1V,EAAUjZ,MAAM,EAAGnK,EAAEykB,OAAO5N,KACzCkiB,EAAa3V,EAAUjZ,MAAMnK,EAAEykB,OAAO5N,KAEtCmiB,EAAQ3W,EAAKlY,MAAM,EAAGnK,EAAEykB,OAAO5N,KAC/BoiB,EAAQ5W,EAAKlY,MAAMnK,EAAEykB,OAAO5N,KAEhCgE,QAAQpD,IAAI,cAAeqhB,GAC3Bje,QAAQpD,IAAI,cAAeshB,UAEpB7b,EAAKoS,KAAKnL,EAAIrK,KAOrB,IANA,IAAIof,EAAOhc,EAAKuP,OAAOmM,EAAa,CAAElM,SAAY+L,EACvBrV,UAAa0V,EACbzW,KAAQ2W,IAC/BG,EAAOjc,EAAKuP,OAAOoM,EAAa,CAAEnM,SAAYgM,EACvBtV,UAAa2V,EACb1W,KAAQ4W,IAC1Bv5B,EAAI,EAAGA,EAAIsf,EAASnW,OAAQnJ,IACjCmb,QAAQpD,IAAI,QAASyhB,GACrBre,QAAQpD,IAAI,QAAS0hB,GACrBte,QAAQpD,IAAI,cAAeuH,EAAStf,IACpCwd,EAAK2I,WAAWtgB,KACZ,CAACkf,OAAUyU,EAAK3W,MAAMvD,EAAStf,GAAG2J,KAAK,GACtC2H,OAAUmoB,EAAK5W,MAAMvD,EAAStf,GAAGqf,GAAG,GACpCpe,MAAS,EACTmZ,IAAOC,IAAO1R,OACd4c,SAAY,kBACb/H,EAAKqU,mBACLrU,EAAKsU,SAGb3W,QAAQpD,IAAI,mBAAoByF,EAAK2I,iBA9EjChL,QAAQpD,IAAI,qCAAsCzX,EAAEgR,OACxC,UAAWhR,EAAEykB,OAAQ,QAASzkB,GAqGlCo5B,CAAmBp5B,GAMnB,IAAIQ,EAAIR,EAAEykB,OAAON,IAEjB3jB,EAAE+mB,iBACF/mB,EAAEmiB,UAAU3iB,EAAEykB,OAAO5N,KAAO,EAC5BrW,EAAEmiB,UAAU3iB,EAAEgR,OAAO6F,KAAO,EAE5BwhB,EAAe73B,OAIhB,CAEH,IAAI64B,EAAiBnc,EAAK2I,WAAWja,QAAQ5L,GAE7Ckd,EAAK2I,WAAWyK,OAAO+I,EAAgB,GAG3Cnc,EAAKqU,mBAGTrU,EAAKsU,UAGL8H,EAAY,SAASt5B,GACrB,GAAK62B,EAAL,CASAhc,QAAQpD,IAAI,cAAezX,EAAEilB,UACzBjlB,EAAEilB,WANa,CACEsU,MAAQ,EACRC,WAAa,EACbC,YAAc,IAMnCjB,EAAWx4B,KAGfkd,EAAKkb,wBAA0B,WAC3Bvd,QAAQpD,IAAI,aAAcyF,EAAKoS,MAC/B,IAAI5C,EAAW,GACXgN,EAAU,EACVC,EAAW,GACX7W,EAAS,GACTH,EAAY,GAGhB,IAAK,IAAI7I,KAAOoD,EAAKoS,KAAM,CAGvB,IAFA,IAAInL,EAAMjH,EAAKoS,KAAKxV,GAEXtN,EAAI,EAAGA,EAAI2X,EAAI5B,MAAM1Z,OAAQ2D,IAAK,CACvC,IAAI9K,EAAOyiB,EAAI5B,MAAM/V,GAEA,cAAjB9K,EAAK+gB,WAGT5H,QAAQpD,IAAI,QAAS/V,GACrBi4B,EAASj4B,EAAKoY,KAAO4f,EACrBA,GAAW,EAEXhN,EAASnnB,KAAK7D,EAAKzB,OAGvB6iB,EAAOvd,KAAKm0B,GAGhB/W,EAAY,CAAC+W,EAAQ,GACrB,IAAK,IAAIh6B,EAAI,EAAGA,EAAIg6B,EAASh6B,IACzBijB,EAAUpd,KAAK,GAGnB,IAAK,IAAIuU,KAAOoD,EAAKoS,KAGjB,IAFA,IAAInL,EAAMjH,EAAKoS,KAAKxV,GAEXtN,EAAI,EAAGA,EAAI2X,EAAIK,MAAM3b,OAAQ2D,IAAK,CACvC,IAAI1K,EAAOqiB,EAAIK,MAAMhY,GAErB,GAAqB,YAAjB1K,EAAKmjB,SAAT,CAGA,IAAI2U,EAAOD,EAAS73B,EAAK2iB,OAAO3K,KAC5B+f,EAAOF,EAAS73B,EAAKkP,OAAO8I,KAChC6I,EAAUiX,GAAQC,EAClBlX,EAAUkX,GAAQD,GAI1B,IAAK,IAAIl6B,EAAI,EAAGA,EAAIwd,EAAK2I,WAAWhd,OAAQnJ,IAAK,CAC7C,IAAIoC,EAAOob,EAAK2I,WAAWnmB,GAEvBk6B,EAAOD,EAAS73B,EAAK2iB,OAAO3K,KAC5B+f,EAAOF,EAAS73B,EAAKkP,OAAO8I,KAEhC6I,EAAUiX,GAAQC,EAClBlX,EAAUkX,GAAQD,EAKtB,IAFA,IAAIpK,EAAYvS,EAAa2B,sBAAsB+D,GAAWvF,MAAM,IAE3D1d,EAAI,EAAGA,EAAIojB,EAAOja,OAAS,EAAGnJ,IACnCmb,QAAQpD,IAAI,aAAcqL,EAAOpjB,IACjCgtB,EAAS4D,OAAOxN,EAAOpjB,GAAKA,EAAI,EAAG,EAAG,KACtC8vB,EAAUc,OAAOxN,EAAOpjB,GAAKA,EAAI,EAAG,EAAG,KAK3C,OAFAmb,QAAQpD,IAAI,YAAaiV,EAAUA,EAAS3b,KAAK,KACjD8J,QAAQpD,IAAI,aAAc+X,EAAWA,EAAUze,KAAK,KAC7C,CAAC2b,EAAS3b,KAAK,IAAKye,EAAUze,KAAK,MAG9CmM,EAAK4c,gBAAkB,SAAShU,GAwB5B,IArBA,IAAIoT,EAAOpT,EAAQrB,OAAON,IACtBgV,EAAOrT,EAAQ9U,OAAOmT,IAEtB4V,EAAc9c,EAAa2B,sBAAsBsa,EAAKvW,WACtDqX,EAAc/c,EAAa2B,sBAAsBua,EAAKxW,WAEtDsX,EAAOnU,EAAQrB,OAAON,IAAItC,IAC1BqY,EAAOpU,EAAQ9U,OAAOmT,IAAItC,IAE1BiX,EAAaI,EAAKzV,aAAa,cAC/BsV,EAAaI,EAAK1V,aAAa,cAG/B2M,EAAgB2J,EAAcC,EAC9BG,EAASF,EAAOC,EAChB3J,EAAeuI,EAAW9oB,OAAO+oB,GAGjCqB,EAAgB,GAChBC,EAAW,GAEN36B,EAAI,EAAGA,EAAIwd,EAAK2I,WAAWhd,OAAQnJ,IACxCmb,QAAQpD,IAAI,qBAAsByF,EAAK2I,WAAWnmB,IAClDmb,QAAQpD,IAAI,QAASyhB,GACrBre,QAAQpD,IAAI,QAAS0hB,GACjBjc,EAAK2I,WAAWnmB,GAAG+kB,OAAON,KAAO+U,EAC5Bhc,EAAK2I,WAAWnmB,GAAGsR,OAAOmT,KAAOgV,IAWlCiB,EAAc70B,KAAK,CACfkf,OAAUvH,EAAK2I,WAAWnmB,GAAGsR,OAC7BA,OAAUkM,EAAK2I,WAAWnmB,GAAG+kB,OAAO5N,MAGxCwjB,EAASnd,EAAK2I,WAAWnmB,GAAGoa,MAAO,GAEhCoD,EAAK2I,WAAWnmB,GAAG+kB,OAAON,KAAOgV,IACnCjc,EAAK2I,WAAWnmB,GAAGsR,OAAOmT,KAAO+U,IASlCkB,EAAc70B,KAAK,CACfkf,OAAUvH,EAAK2I,WAAWnmB,GAAGsR,OAC7BA,OAAUkM,EAAK2I,WAAWnmB,GAAG+kB,OAAO5N,IAAMkjB,EAAYlxB,SAE1DwxB,EAASnd,EAAK2I,WAAWnmB,GAAGoa,MAAO,IAIvCoD,EAAK2I,WAAWnmB,GAAGsR,OAAOmT,KAAO+U,EAC7Bhc,EAAK2I,WAAWnmB,GAAG+kB,OAAON,KAAOgV,IAKjCiB,EAAc70B,KAAK,CACfkf,OAAUvH,EAAK2I,WAAWnmB,GAAG+kB,OAC7BzT,OAAUkM,EAAK2I,WAAWnmB,GAAGsR,OAAO6F,MAGxCwjB,EAASnd,EAAK2I,WAAWnmB,GAAGoa,MAAO,GAEhCoD,EAAK2I,WAAWnmB,GAAGsR,OAAOmT,KAAOgV,GACpCjc,EAAK2I,WAAWnmB,GAAG+kB,OAAON,KAAO+U,IACjCkB,EAAc70B,KAAK,CACfkf,OAAUvH,EAAK2I,WAAWnmB,GAAG+kB,OAC7BzT,OAAUkM,EAAK2I,WAAWnmB,GAAGsR,OAAO6F,IAAMkjB,EAAYlxB,SAG1DwxB,EAASnd,EAAK2I,WAAWnmB,GAAGoa,MAAO,GAM/CoD,EAAK2I,WAAa3I,EAAK2I,WAAWrD,OAAO,SAAClb,GAAQ,QAASA,EAAEwS,OAAOugB,YAE7Dnd,EAAKoS,KAAK4J,EAAKpf,YACfoD,EAAKoS,KAAK6J,EAAKrf,KAEtB,IAAIwgB,EAAS,KAGTA,EADApd,EAAK9E,QAAQkT,WACJpO,EAAKuP,OAAO2D,EAAe,CAAE1D,SAAYyN,EAC9B/W,UAAamN,EACbN,YAAc,IAEzB/S,EAAKuP,OAAO2D,EAAe,CAAE1D,SAAYyN,EACtClK,YAAc,IAK9B,IAAK,IAAIvwB,EAAI,EAAGA,EAAI06B,EAAcvxB,OAAQnJ,IACtCwd,EAAK2I,WAAWtgB,KAAK,CACjBkf,OAAU2V,EAAc16B,GAAG+kB,OAC3BzT,OAAUspB,EAAO/X,MAAM6X,EAAc16B,GAAGsR,OAAO,GAC/CrQ,MAAS,EACTmZ,IAAOC,IAAO1R,OACd4c,SAAY,kBAIpB/H,EAAKqU,mBACLrU,EAAKsU,SACL3W,QAAQpD,IAAI,mBAAoByF,EAAK2I,aAGzC3I,EAAKqd,QAAW,SAASzU,GAMrB,GADAjL,QAAQpD,IAAI,mBACRqO,EAAQrB,OAAON,KAAO2B,EAAQ9U,OAAOmT,IAAK,CAE1C,IAAI3jB,EAAIslB,EAAQrB,OAAON,IAEvB3jB,EAAEmiB,UAAUmD,EAAQrB,OAAO5N,KAAOiP,EAAQ9U,OAAO6F,IACjDrW,EAAEmiB,UAAUmD,EAAQ9U,OAAO6F,KAAOiP,EAAQrB,OAAO5N,IAEjDwhB,EAAe73B,QAIfqa,QAAQpD,IAAI,iBACZqO,EAAQb,SAAW,gBACnB/H,EAAK2I,WAAWtgB,KAAKugB,GAEzB5I,EAAKqU,mBACLrU,EAAKsU,UAGT,IAAIgJ,EAAiB,SAASx6B,GAC1B,IAAIsa,IAAGkB,MAAMif,iBAAb,CAEA,IAAK/E,EAEU3D,EAASxX,UAAU,WACzBG,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAK,OAAOA,EAAEuzB,SAAY7X,EAAK9E,QAAQkT,aAAe9pB,EAAEwzB,oBAAqB,KAI5H1a,IAAGK,OAAOpY,MAAMmY,QAAQ4Z,IAAO1yB,aAAc5B,EAAE+0B,SAAW7X,EAAK9E,QAAQkT,aAAetrB,EAAEg1B,oBACxF1a,IAAGkB,MAAME,oBAGTgf,EAAc,SAAS16B,EAAEN,GACzB,IAA6Bi7B,GAAmB,EAEhD,GAAIvN,EAAe,CAIf,GAA4B,WAH5BC,EAAcrtB,GAGEyiB,UAAkD,UAA1B2K,EAAc3K,UAAgD,SAAxB4K,EAAY5K,UAAiD,SAA1B2K,EAAc3K,SAC3H,OAEJ,GAAI4K,GAAeD,EAAmC,YAAlBoI,IAGpC,IAFA,IAAI1P,EAAU,CAACrB,OAAQ2I,EAAepc,OAAQqc,EAAapI,SAAU,WAAYtkB,MAAO,EAAGmZ,IAAKC,IAAO1R,QAE9F3I,EAAI,EAAGA,EAAIwd,EAAKsQ,MAAMhJ,MAAM3b,OAAQnJ,IAkBzC,GAjBKwd,EAAKsQ,MAAMhJ,MAAM9kB,GAAG+kB,QAAU2I,GAC9BlQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGsR,QAAUoc,GAC9BlQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAG+kB,QAAU4I,GAC9BnQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGsR,QAAUqc,GAKK,YAAhCnQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGulB,UACY,cAAhC/H,EAAKsQ,MAAMhJ,MAAM9kB,GAAGulB,UACY,iBAAhC/H,EAAKsQ,MAAMhJ,MAAM9kB,GAAGulB,WAEpBpK,QAAQpD,IAAI,wBACZkjB,GAAmB,IAIrBzd,EAAKsQ,MAAMhJ,MAAM9kB,GAAG+kB,QAAU4I,GAC9BnQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGsR,QAAUoc,GACzBlQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAG+kB,QAAU2I,GAC9BlQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGsR,QAAUqc,IAID,YAAhCnQ,EAAKsQ,MAAMhJ,MAAM9kB,GAAGulB,SACpB,OAMZ,GAAIa,EAAQrB,OAAON,KAAO2B,EAAQ9U,OAAOmT,IAGrC,GAA2B,GAAtB2B,EAAQrB,OAAO5N,KACfiP,EAAQ9U,OAAO6F,KAAOiP,EAAQ9U,OAAOmT,IAAIlB,WAClB,GAAtB6C,EAAQ9U,OAAO6F,KACfiP,EAAQrB,OAAO5N,KAAOiP,EAAQrB,OAAON,IAAIlB,UAAY,CAEjD,IAAI2X,EAAW,CACX,CACI7e,MAAO,gBACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrB4tB,GAAuB,EACvBzS,QAAQpD,IAAI,oBACZoD,QAAQpD,IAAI,gCAAkCzX,GAC9CiC,EAAS0Z,KAAK,QAAS2Y,IAAOtyB,aAC9Bkb,EAAK4c,gBAAgBhU,IAEzBjK,UAAU,GAEd,CACIE,MAAO,gBACPD,OAAQ,SAASZ,EAAKlb,EAAGN,GACrB4tB,GAAuB,EACvBzS,QAAQpD,IAAI,qCACZoD,QAAQpD,IAAI,gCAAkCzX,GAC9CiC,EAAS0Z,KAAK,QAAS2Y,IAAOtyB,aAC9Bkb,EAAKqd,QAAQzU,MAIzBwH,GAAuB,EACvB,IAAIuN,EAAkBrhB,EAAYohB,GAClC/f,QAAQpD,IAAI,eACZojB,EAAgB9rB,MAAMxM,KAAM,CAACvC,EAAEN,GAAE,EACX,WAAauC,EAAS0Z,KAAK,QAAS2Y,IAAOtyB,qBAG7D24B,GACFzd,EAAKqd,QAAQzU,QAGrB6U,GACAzd,EAAKqd,QAAQzU,KAMzBgV,EAAgB,SAAS96B,GACtBA,EAAE+0B,UAAaW,GAEH3D,EAASxX,UAAU,WACzBG,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAK,OAAOA,EAAEuzB,SAAWvzB,EAAEwzB,oBAAqB,IAI7F1a,IAAGK,OAAOpY,MAAMmY,QAAQ4Z,IAAO1yB,aAAc,SAASJ,GAAwC,OAAnCxB,EAAEg1B,mBAAqBh1B,EAAE+0B,SAAiB/0B,EAAE+0B,SAAW7X,EAAK9E,QAAQkT,aAAc,IAE1IuL,IAILzJ,EAAgBptB,EAEhBiC,EACC0Z,KAAK,QAAS2Y,IAAOryB,UACrB0Z,KAAK,KAAMyR,EAAcroB,GACzB4W,KAAK,KAAMyR,EAAcpoB,GACzB2W,KAAK,KAAMyR,EAAcroB,GACzB4W,KAAK,KAAMyR,EAAcpoB,KAG9BkY,EAAK6d,eAAiB,WACpB7d,EAAKkS,WAAY,EACjB6F,EAAI1a,UAAU,WACX1a,KAAKg4B,GACR3a,EAAKsZ,MAAM5zB,SAGbsa,EAAK8d,cAAgB,WACnB9d,EAAKkS,WAAY,EACjB6F,EAAI1a,UAAU,WACRK,GAAG,iBAAkB,MAC3BsC,EAAKsZ,MAAMyE,QAGb/d,EAAKge,YAAc,SAASv6B,GAC1Buc,EAAKsZ,MAAMhL,SAAS7qB,GACpBuc,EAAKya,eAGPza,EAAKie,UAAY,SAASx6B,GACxBuc,EAAKsZ,MAAMC,OAAO91B,GAClBuc,EAAKya,eAGPza,EAAKke,WAAa,SAASz6B,GACzBuc,EAAKsZ,MAAMI,QAAQj2B,GACnBuc,EAAKya,eAGPza,EAAKme,sBAAwB,SAAS16B,GACpCuc,EAAKkR,cAAcC,WAAa1tB,EAChCuc,EAAKsU,UAGPtU,EAAKyR,kBAAoB,SAAShuB,GAChCuc,EAAKwR,kBAAkBC,kBAAoBhuB,EAC3Cuc,EAAKuV,eAGPvV,EAAK0R,iBAAmB,SAASjuB,GAC/Buc,EAAKwR,kBAAkBE,iBAAmBjuB,EAC1Cuc,EAAKuV,eAGPvV,EAAK2R,mBAAqB,SAASluB,GACjCuc,EAAKwR,kBAAkBG,mBAAqBluB,EAC5Cuc,EAAKuV,eAGPvV,EAAK4R,iBAAmB,SAASnuB,GAC/Buc,EAAKwR,kBAAkBI,iBAAmBnuB,EAC1Cuc,EAAKuV,eAGPvV,EAAK6R,aAAe,SAASpuB,GAC3Buc,EAAKwR,kBAAkBK,aAAepuB,EACtCuc,EAAKuV,eAGPvV,EAAK8R,uBAAyB,SAASruB,GACrCuc,EAAKwR,kBAAkBM,uBAAyBruB,EAChDuc,EAAKuV,eAGPvV,EAAK+R,oBAAsB,SAAStuB,GAClCuc,EAAKwR,kBAAkBO,oBAAsBtuB,EAC7Cuc,EAAKuV,eAGPvV,EAAKuV,YAAc,WAIfV,EAASxX,UAAU,qBAAqBG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBE,kBAC5FmD,EAASxX,UAAU,sBAAsBG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBE,kBAC7FsD,EAAS3X,UAAU,yBAAyBG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBE,kBAEhGuF,EAAI5Z,UAAU,UAAUG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBG,oBAE5EkD,EAASxX,UAAU,2BAA2BG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBI,kBAElGqF,EAAI5Z,UAAU,4JAA4JG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBK,cAE9NoF,EAAI5Z,UAAU,0BAA0BG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBM,wBAE5FmF,EAAI5Z,UAAU,6BAA6BG,QAAQ4Z,IAAOtyB,aAAckb,EAAKwR,kBAAkBO,qBAE/FiD,EAAS3X,UAAU,oBAAoBG,QAAQ4Z,IAAOtyB,aAAckb,EAAK9E,QAAQiT,iBACjF6G,EAAS3X,UAAU,yBAAyBG,QAAQ4Z,IAAOtyB,aAAckb,EAAK9E,QAAQiT,kBAmB1FnO,EAAKwV,eAAiB,SAAS4I,GAC3B,IAAIC,EAAYD,EAAW7gB,OAAO,YA8BnC,OA5BC8gB,EAAU9gB,OAAO,aAChB+gB,KAAKrJ,GAENoJ,EACC7gB,QAAQ,QAAQ,GAChBA,QAAQ4Z,IAAOxyB,MAAM,GACrB6Z,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAO1f,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAOzf,IACzC2W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOjM,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOhM,IACzC2W,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEilB,WACzCtJ,KAAK,iBAAkB,SAAS3b,GAAK,MAAkB,QAAdA,EAAEilB,SAA2B,OAAoB,QAiBrFsW,GAGVre,EAAKmV,eAAiB,SAASoJ,IAC3BA,EAAcA,EAAYhhB,OAAO,KAChCC,QAAQ,SAAS,GACjBiB,KAAK,cAAe,SAAS3b,GAAK,OAAOA,EAAE8hB,aAC3CnG,KAAK,YAAa,SAAS3b,GACxB,YAAkB,IAAPA,EAAE+E,QAAkC,IAAP/E,EAAEgF,EAC/B,aAAe,CAAChF,EAAE+E,EAAG/E,EAAEgF,GAAK,IAE5B,KAEdwtB,KAAM,SAASxyB,GAAKA,EAAE+0B,SAAW/0B,EAAEg1B,oBAAqB,KAGxDn1B,KAAKg4B,GACLjd,GAAG,YAAakgB,GAChBlgB,GAAG,YAAa,SAAS5a,MACzB4a,GAAG,UAAW8f,GACd/e,KAAK,MAAO,SAAS3b,GAAK,MAAO,IAAMA,EAAE6W,MACzC8E,KAAK,OAAQ,SAAS3b,GACnB,MAAO,KAAOA,EAAEmkB,IAAIlB,UAAYjjB,EAAE6W,IAAM,KAC3C+D,GAAG,QAAS4f,GACZ5f,GAAG,cAAesC,EAAK8P,iBACvBiF,aACAL,SAAS,KACT8J,KAAK,WAGN,IAAIC,EAAuBF,EAAYjZ,OAAO,SAASxiB,GACnD,MAAqB,SAAdA,EAAEyiB,UAAqC,WAAdziB,EAAEyiB,WAGlCH,EAAkBmZ,EAAYjZ,OAAO,SAASxiB,GAC9C,MAAqB,cAAdA,EAAEyiB,WA+Db,OA5DAkZ,EAAqBlhB,OAAO,cAC3BC,QAAQ4Z,IAAO5yB,KAAM,SAAS1B,GAAK,MAAqB,SAAdA,EAAEyiB,WAC5C9G,KAAK,IAAK,SAAS3b,GAChB,MAAkB,UAAdA,EAAEyiB,SAA6B,EAExBziB,EAAEiF,SAGhB0W,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEyiB,WACzC9G,KAAK,WAAY,SAAS3b,GAAK,OAAOA,EAAE6W,MAEzCyL,EAAgB7H,OAAO,cACtBkB,KAAK,QAAS2Y,IAAO5yB,MACrBia,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEyiB,WACzC9G,KAAK,WAAY,SAAS3b,GAAK,OAAOA,EAAE6W,MACxC8E,KAAK,IAAK,SAAS3b,GAAK,OAAOA,EAAEiF,SACjCwV,OAAO,aACP+gB,KAAK,SAASx7B,GACX,MAAkB,cAAdA,EAAEyiB,SACKziB,EAAE8hB,WAAa,IAAM9hB,EAAE6W,IAEvB,KAIfyL,EAAgB7H,OAAO,YACtBkB,KAAK,QAAS2Y,IAAO5yB,MACrBia,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEyiB,WACzC9G,KAAK,WAAY,SAAS3b,GAAK,OAAOA,EAAE6W,MACxC4D,OAAO,aACP+gB,KAAK,SAASx7B,GACX,MAAkB,cAAdA,EAAEyiB,SACKziB,EAAE8hB,WAAa,IAAM9hB,EAAE6W,IAEvB,KAKG4kB,EAAYhhB,OAAO,QACpC+gB,KAAK,SAASx7B,GAAK,OAAOA,EAAEC,OAC5B0b,KAAK,QAAS2Y,IAAOzyB,WACrB8Z,KAAK,aAAc,SAAS3b,GAAK,OAAOA,EAAEyiB,WAQ/BhI,OAAO,aAClB+gB,KAAK,SAASx7B,GACX,MAAkB,cAAdA,EAAEyiB,SACKziB,EAAE8hB,WAAa,IAAM9hB,EAAE6W,IAEvB,KAKR4kB,GAeXve,EAAKsU,OAAS,WACVtU,EAAKsZ,MAAMjU,MAAMrF,EAAKsQ,MAAMjL,OAC3BiC,MAAMtH,EAAKsQ,MAAMhJ,OAEdtH,EAAKkS,WACPlS,EAAKsZ,MAAM5zB,QAGb,IAAIg5B,EAAW1J,EAAS3X,UAAU,aACjC1P,KAAKqS,EAAKsQ,MAAMhJ,MAAMhC,OAAOwL,GAAiBmE,GAE/CyJ,EAASjgB,KAAK,QAAS,IACtBjB,QAAQ,QAAQ,GAChBA,QAAQ4Z,IAAOxyB,MAAM,GACrB6Z,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEilB,WAE1C,IAAIqW,EAAaM,EAASphB,QAC1B0C,EAAKwV,eAAe4I,GAEpBM,EAAStJ,OAAOC,SAIHjY,IAAG4S,MAAMsH,aAAarT,OADtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAzC,IAGQ2Q,EAASC,EAASxX,UAAU,WAC/B1P,KAAKqS,EAAKsQ,MAAMjL,MAAOyP,GAGpByJ,EAAc3J,EAAOtX,QAEzB0C,EAAKmV,eAAeoJ,GACpB3J,EAAOQ,OAAOC,SAKd,IAEIsJ,EAFAC,EAAY5e,EAAKsQ,MAAMjL,MAAMC,OAAO,SAASxiB,GAAK,MAAqB,cAAdA,EAAEyiB,UAA0C,SAAdziB,EAAEyiB,WAIzFoZ,EADA3e,EAAK6e,iBACGH,EAEA1J,EAAS3X,UAAU,6MAI/BuX,EAAOvX,UAAU,QAChBiY,KAAK9E,GAENmO,EAAMjhB,GAAG,QAAS0e,GAElBpc,EAAKsZ,MAAM5b,GAAG,OAAQ,WAKlB,IAJA,IAAIoD,EAAI1D,IAAG0hB,KAAKC,SAASH,GACrBp8B,EAAI,EACJyB,EAAI26B,EAAUjzB,SAETnJ,EAAIyB,GAAG6c,EAAEke,MAAMlF,EAAQ8E,EAAUp8B,KAE1Cm8B,EAAMlgB,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAO1f,IAC9C4W,KAAK,KAAM,SAAS3b,GAAM,OAAOA,EAAEykB,OAAOzf,IAC1C2W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOjM,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOhM,IAG1C8sB,EAAOnW,KAAK,YAAa,SAAS3b,GAC9B,MAAO,aAAe,CAACA,EAAE+E,EAAG/E,EAAEgF,GAAK,MAGvC8sB,EAAOnX,OAAO,QACb6X,KAAK9E,KAIVxQ,EAAKsZ,MAAM5b,GAAG,MAAO,WAOjB,IAAK,IAAId,KANTgY,EAAOvX,UAAU,0BAChBiI,OAAO,SAACxiB,EAAEN,GAAQ,OAAS,GAALA,IACtB8yB,KAAK,SAACxyB,EAAEN,MAIOwd,EAAKoS,KACjB,IAAK,IAAI5vB,EAAI,EAAGA,EAAIwd,EAAKoS,KAAKxV,GAAK6I,UAAU,GAAIjjB,QAO7Dwd,EAAKsW,kBAAkBtW,EAAKgS,aAExBhS,EAAKkS,WACPlS,EAAKsZ,MAAM5zB,QAGbsa,EAAKuV,eAGTvV,EAAK4W,UCzxEF,SAASqI,IAA4B,IAiBpC7P,EAAQE,EAjBQtB,EAAoB5a,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GAChC8H,EAAU,CACVsE,MAAS,IACT0f,OAAU,IACVC,iBAAoB,EACpBC,eAAkB,EAElB/V,cAAiB,GACjBgW,sBAAwB,EACxBC,sBAAyB,EACzBC,qBAAuB,EAEvBC,UAAa,SACbC,aAAgB,OAEhBvkB,EAAUhY,OAAO+qB,OAAO/S,EAAS8S,GA4MrC,SAAS0R,EAAMC,GACXA,EAAUrK,KAAK,SAAS3nB,GACpB,IAAIlJ,EAAO2Y,GAAGK,OAAOpY,MAAMkY,OAAO,KACjCC,QAAQ4Z,IAAO3yB,MAAM,GAIlB+tB,EAAK,IAAI9N,EAAS/W,EAAK6hB,SAAU7hB,EAAK2kB,UAAW3kB,EAAK5K,KAAMmY,EAAQokB,uBAC/DzV,sBACAd,iBACAuB,QAAQ3c,EAAK5K,MAEtB4K,EAAK+lB,SAAWlB,EAIhB,IAAItM,EAAY,GAEhB,GAA0B,WAAtBhL,EAAQskB,UAIR,IAHA,IACI9M,GADS,IAAI5F,GACY6F,sBAAsBH,EAAG/M,WAE7CjjB,EAAI,EAAGA,EAAIkwB,EAAgBxF,MAAO1qB,IACvC0jB,EAAU7d,KAAK,CAACqqB,EAAgB7qB,EAAErF,GAAIkwB,EAAgB5qB,EAAEtF,UAG5D0jB,EAAYqE,EAAoBiI,EAAG/M,WAGvC+M,EAAGvM,aAAa,aAAcC,GAI7BkD,UAAUlO,EAAQokB,sBAAuBpkB,EAAQmO,eAIlD,IAAIuW,EA7OZ,SAAuCC,EAASC,GAG5C,IAAIC,EAAU3iB,GAAGqb,OAAOoH,GACpBG,EAAU5iB,GAAGqb,OAAOqH,GAGxBC,EAAQ,IAAM7kB,EAAQikB,iBAAmBjkB,EAAQkkB,eACjDY,EAAQ,IAAM9kB,EAAQikB,iBAAmBjkB,EAAQkkB,eAEjDW,EAAQ,IAAM7kB,EAAQikB,iBAAmBjkB,EAAQkkB,eACjDY,EAAQ,IAAM9kB,EAAQikB,iBAAmBjkB,EAAQkkB,eAGjD,IAqBI5qB,EArBAyrB,EAASF,EAAQ,GAAKA,EAAQ,GAC9BG,EAASF,EAAQ,GAAKA,EAAQ,GAQlC,SAASG,EAAiBC,EAAYC,EAAWC,GAC7C,IAAIC,GAAeH,EAAWxc,QAAQ,GAAKwc,EAAWxc,QAAQ,KAC3Cwc,EAAWnc,SAAS,GAAKmc,EAAWnc,SAAS,IAC5Duc,GAAYH,EAAU,GAAKA,EAAU,IAAME,EAC3CE,GAAcH,EAAS,GAAKA,EAAS,GAAME,GAAY,EAE3D,MAAO,CAACD,YAAeA,EACfvQ,MAAS5S,GAAG4S,MAAMK,SACApM,OAAOoc,GACPzc,MAAM,CAAC0c,EAAS,GAAKG,EAAWH,EAAS,GAAKG,KA0B5E,OAxCaR,EAAS/kB,EAAQsE,MACjB0gB,EAAShlB,EAAQgkB,QAwB1B1qB,EAAM2rB,EAJN/Q,EAAShS,GAAG4S,MAAMK,SACjBpM,OAAO8b,GACPnc,MAAM,CAAC,EAAG1I,EAAQsE,QAEYwgB,EAAS,CAAC,EAAG9kB,EAAQgkB,SACpD5P,EAAS9a,EAAIwb,QAObxb,EAAM2rB,EAJN7Q,EAASlS,GAAG4S,MAAMK,SACjBpM,OAAO+b,GACPpc,MAAM,CAAC,EAAG1I,EAAQgkB,SAEYa,EAAS,CAAC,EAAG7kB,EAAQsE,QACpD4P,EAAS5a,EAAIwb,OAGHZ,EAAOxL,QAAQ,GAAKwL,EAAOnL,SAAS,GACpCqL,EAAO1L,QAAQ,GAAK0L,EAAOrL,SAAS,GAE3C,eAAiBmL,EAAOnL,SAAS,GAAKzP,EAAI+rB,YAAcnR,EAAOxL,QAAQ,IACpE,MAAQ0L,EAAOrL,SAAS,GAAKzP,EAAI+rB,YAAcjR,EAAO1L,QAAQ,IAAM,UAC/DpP,EAAI+rB,YAAc,IAiLDG,CACxBlO,EAAGnN,MAAMzE,IAAI,SAAS9d,GAAK,OAAOA,EAAE+E,IACpC2qB,EAAGnN,MAAMzE,IAAI,SAAS9d,GAAK,OAAOA,EAAEgF,KAExCrD,EAAKga,KAAK,YAAamhB,GAEvB,IAAIxa,EAAkBoN,EAAGnN,MAAMC,OAAO,SAASxiB,GAC3C,MAAqB,cAAdA,EAAEyiB,WAGTY,EAAaqM,EAAGnN,MAAMC,OAAO,SAASxiB,GACtC,MAAqB,SAAdA,EAAEyiB,WAGT+B,EAAQkL,EAAGlL,OAnEvB,SAAqBqY,EAAWrY,GAC5BA,EAAQA,EAAMhC,OAAO,SAASxiB,GAAK,OAAoB,OAAbA,EAAEykB,QAAgC,OAAbzkB,EAAEgR,SACxD6rB,EAAUtiB,UAAU,SAC5B1P,KAAK2Z,GACLhK,QACAC,OAAO,YACPkB,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAO1f,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOjM,IACzC4W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEykB,OAAOzf,IACzC2W,KAAK,KAAM,SAAS3b,GAAK,OAAOA,EAAEgR,OAAOhM,IACzC2W,KAAK,YAAa,SAAS3b,GAAK,OAAOA,EAAEilB,WACzCtJ,KAAK,kBAAmB,SAAS3b,GAAK,OAAOA,EAAEgmB,gBAC/CtL,QAAQ,QAAQ,GAChBA,QAAQ4Z,IAAOxyB,MAAM,GAwDlB+7B,CAAYl8B,EAAM6iB,GA9L1B,SAA2BqY,EAAWva,GAElC,IAAIwb,EAAKjB,EACRtiB,UAAU,UACV1P,KAAKyX,GACL9H,QACAC,OAAO,SACPC,QAAQ,SAAS,GACjBiB,KAAK,YAAa,SAAS3b,GACxB,MAAO,aAAeA,EAAE+E,EAAI,IAAM/E,EAAEgF,EAAI,MAG9B84B,EAAGrjB,OAAO,cACvBC,QAAQ4Z,IAAO5yB,MAAM,GACrBia,KAAK,YAAa,cAClBA,KAAK,YAAa,SAAC3b,GAAQ,GAAIA,EAAEC,KAAQ,OAAOD,EAAEC,KAAKoL,gBACvDsQ,KAAK,IAAKvD,EAAQikB,kBAGfjkB,EAAQmkB,sBACeuB,EAAGrjB,OAAO,YAChC+gB,KAAK,SAASx7B,GAAK,OAAOA,EAAEC,OAC5Bya,QAAQ4Z,IAAOzyB,WAAW,GAC1B4Y,OAAO,aACP+gB,KAAK,SAASx7B,GAAK,OAAOA,EAAE+9B,YAAc,IAAM/9B,EAAE6W,MAuKnDmnB,CAAkBr8B,EAAM2gB,GAnKhC,SAAsBua,EAAWxZ,GAG7B,IAAIya,EAAKjB,EACRtiB,YACA1P,KAAKwY,GACL7I,QACAC,OAAO,SACPC,QAAQ,SAAS,GACjBiB,KAAK,YAAa,SAAS3b,GACxB,MAAO,aAAeA,EAAE+E,EAAI,IAAM/E,EAAEgF,EAAI,MAG9B84B,EAAGrjB,OAAO,cACvBC,QAAQ4Z,IAAO5yB,MAAM,GACrBia,KAAK,YAAa,SAClBA,KAAK,IAAKvD,EAAQikB,kBAEAyB,EAAGrjB,OAAO,YAC5BC,QAAQ4Z,IAAOzyB,WAAW,GAC1B25B,KAAK,SAASx7B,GAAK,OAAOA,EAAEC,OAgJzBg+B,CAAat8B,EAAM0hB,GA7I3B,SAAoBwZ,EAAW58B,GAC3B,IAAIi+B,EAAYrB,EAAUpiB,OAAO,YAEhCC,QAAQ4Z,IAAOvyB,WAAW,GAC1By5B,KAAKv7B,GAEFk+B,EAAQ/lB,EAAQukB,aAAavf,MAAM,IAAK,GACxCghB,EAAK,GACLC,EAAWH,EAAUx8B,OAAO48B,UAC5BC,EAAW,CAACF,EAAS3hB,MAAO2hB,EAASjC,QACrCoC,EAAW,CAACpmB,EAAQsE,MAAOtE,EAAQgkB,QAEvC,IAAK,IAAI56B,IAAK,CAAC,EAAG,GACd,OAAQ28B,EAAM38B,IACV,IAAK,IACD48B,EAAG58B,GAAK+8B,EAAS/8B,GAAK,EACtB,MACJ,IAAK,IACD48B,EAAG58B,GAAKg9B,EAASh9B,GAAK+8B,EAAS/8B,GAAK,EACpC,MACJ,IAAK,MACD48B,EAAG58B,GAAKg9B,EAASh9B,GAAK,EAIlC08B,EAAUviB,KAAK,IAAKyiB,EAAG,IAAIziB,KAAK,IAAKyiB,EAAG,IAqHpCK,CAAWnkB,GAAGK,OAAOpY,MAAOsI,EAAK5K,MAE7BmY,EAAQqkB,qBApHpB,SAAiCI,EAAWrY,GACxC,IAAIka,EAAY,GACZC,EAAY,GAChBna,EAAQA,EAAMhC,OAAO,SAASxiB,GAAK,MAAqB,WAAdA,EAAEilB,UAAuC,aAAdjlB,EAAEilB,UAAyC,SAAdjlB,EAAEilB,WAEpG4X,EAAUtiB,UAAU,qBACnBgY,SAGD,IAAK,IAAI7yB,EAAI,EAAGA,EAAI8kB,EAAM3b,OAAQnJ,IACN,OAApB8kB,EAAM9kB,GAAG+kB,QAAuC,OAApBD,EAAM9kB,GAAGsR,SAGzC0tB,EAAUla,EAAM9kB,GAAG+kB,OAAO3K,KAAO0K,EAAM9kB,GAAG+kB,OAC1Cia,EAAUla,EAAM9kB,GAAGsR,OAAO8I,KAAO0K,EAAM9kB,GAAGsR,OAE1C2tB,EAAUp5B,KAAK,CAACkf,OAAUD,EAAM9kB,GAAG+kB,OAAO3K,IAAK9I,OAAUwT,EAAM9kB,GAAGsR,OAAO8I,IAAKmL,SAAYT,EAAM9kB,GAAGulB,SAAUe,cAAiBxB,EAAM9kB,GAAGsmB,iBAG3I,IAEI4Y,EAFYtkB,GAAGukB,oBAAoBtc,MAAMmc,GAAWI,MAAMH,GAC7DI,wBAAwB,IAAKC,UAAU,GACxBC,GAEZC,EAAS5kB,GAAG6Z,IAAIgL,OACfp6B,EAAE,SAAS/E,GAAG,OAAOA,EAAE+E,IACvBC,EAAE,SAAShF,GAAG,OAAOA,EAAEgF,IACvByvB,YAAY,UAEjB,IAAS/0B,EAAI,EAAGA,EAAIk/B,EAAQ/1B,OAAQnJ,IAAK,CACrC,IAAI0/B,EAAqBR,EAAQl/B,GAIjCm9B,EAAUpiB,OAAO,QAAQkB,KAAK,IAAKujB,EAAOE,IACzCtkB,MAAM,OAAQ,QACda,KAAK,YAAa,SAAS3b,GAAK,OAAO2+B,EAAUj/B,GAAGulB,WACpDtJ,KAAK,kBAAmB,SAAS3b,GAAK,OAAO2+B,EAAUj/B,GAAGsmB,gBAC1DlL,MAAM,iBAAiB,KAgFpBukB,CAAwB19B,EAAM6iB,KAwE1C,OAlEAoY,EAAMlgB,MAAQ,SAAS4iB,GACnB,OAAKhvB,UAAUzH,QACfuP,EAAQsE,MAAQ4iB,EACT1C,GAFuBxkB,EAAQsE,OAK1CkgB,EAAMR,OAAS,SAASkD,GACpB,OAAKhvB,UAAUzH,QACfuP,EAAQgkB,OAASkD,EACV1C,GAFuBxkB,EAAQgkB,QAK1CQ,EAAML,qBAAuB,SAAS+C,GAClC,OAAKhvB,UAAUzH,QACfuP,EAAQmkB,qBAAuB+C,EACxB1C,GAFuBxkB,EAAQmkB,sBAK1CK,EAAMN,eAAiB,SAASgD,GAC5B,OAAKhvB,UAAUzH,QACfuP,EAAQkkB,eAAiBgD,EAClB1C,GAFuBxkB,EAAQkkB,gBAK1CM,EAAMP,iBAAmB,SAASiD,GAC9B,OAAKhvB,UAAUzH,QACfuP,EAAQikB,iBAAmBiD,EACpB1C,GAFuBxkB,EAAQikB,kBAK1CO,EAAMrW,cAAgB,SAAS+Y,GAC3B,OAAKhvB,UAAUzH,QACfuP,EAAQmO,cAAgB+Y,EACjB1C,GAFuBxkB,EAAQmO,eAK1CqW,EAAML,qBAAuB,SAAS+C,GAClC,OAAKhvB,UAAUzH,QACfuP,EAAQmkB,qBAAuB+C,EACxB1C,GAFuBxkB,EAAQmkB,sBAK1CK,EAAMJ,sBAAwB,SAAS8C,GACnC,OAAKhvB,UAAUzH,QACfuP,EAAQokB,sBAAwB8C,EACzB1C,GAFuBxkB,EAAQokB,uBAK1CI,EAAMH,oBAAsB,SAAS6C,GACjC,OAAKhvB,UAAUzH,QACfuP,EAAQqkB,oBAAsB6C,EACvB1C,GAFuBxkB,EAAQqkB,qBAK1CG,EAAMF,UAAY,SAAS4C,GACvB,OAAKhvB,UAAUzH,QACfuP,EAAQskB,UAAY4C,EACb1C,GAFuBxkB,EAAQskB,WAK1CE,EAAMD,aAAe,SAAS2C,GAC1B,OAAKhvB,UAAUzH,QACfuP,EAAQukB,aAAe2C,EAChB1C,GAFuBxkB,EAAQukB,cAKnCC,ECnWJ,SAAS2C,IAA+B,IAApBrU,EAAoB5a,UAAAzH,OAAA,QAAAc,IAAA2G,UAAA,GAAAA,UAAA,GAAJ,GACnC8H,EAAU,CACVsE,MAAS,IACT0f,OAAU,IACVC,iBAAoB,EACpBC,eAAkB,EAElB/V,cAAiB,GACjBgW,sBAAwB,EACxBC,sBAAyB,EACzBC,qBAAuB,EAEvBC,UAAa,SACbC,aAAgB,OAGhBvkB,EAAUhY,OAAO+qB,OAAO/S,EAAS8S,GAErC,SAASsU,EAAe3C,GAEpBA,EAAUrK,KAAK,SAASxyB,GACpBsa,GAAGK,OAAOpY,MACToZ,KAAK,YAAa,SAAS3b,GAAK,MAAO,aAAeA,EAAE+E,EAAI,IAAM/E,EAAEgF,EAAI,MACxEyV,OAAO,QACPkB,KAAK,OAAQ,eACbA,KAAK,QAAS,SAAS3b,GAAK,OAAOkO,KAAK2C,IAAI,EAAG7Q,EAAEi4B,MACjDtc,KAAK,SAAU,SAAS3b,GAAK,OAAOkO,KAAK2C,IAAI,EAAG7Q,EAAEk4B,MAGnD,IAAI0E,EAAQT,EAAQ/jB,GACnBsE,MAAOxO,KAAK2C,IAAI,EAAG7Q,EAAEi4B,KACrBmE,OAAQluB,KAAK2C,IAAI,EAAG7Q,EAAEk4B,KAEnB,cAAel4B,GAAGsa,GAAGK,OAAOpY,MAAM1C,KAAK+8B,KAInD,IAAIA,EAAQ,SAASC,GACjBA,EAAUrK,KAAK,SAAS3nB,GACpBgQ,QAAQpD,IAAI,QAAS5M,GAQrB,IAAI40B,EAAUnlB,GAAGuR,OAAO4T,UACvBz0B,KAAK,CAACoN,EAAQsE,MAAOtE,EAAQgkB,SAC7BsD,QAAO,GACP/+B,MAAM,SAASX,GAAK,OAAOA,EAAEgL,OAKjBsP,GAAGK,OAAOpY,MAClBkY,OAAO,KACPC,QAAQ,cAAc,GACA+a,MAAM5qB,GAAM0P,UAAU,gBAC5C1P,KAAK40B,EAAQld,OACb/H,QACAC,OAAO,KACPC,QAAQ,eAAe,GACvB7a,KAAK2/B,MA4ElB,OAxEA5C,EAAMlgB,MAAQ,SAAS4iB,GACnB,OAAKhvB,UAAUzH,QACfuP,EAAQsE,MAAQ4iB,EACT1C,GAFuBxkB,EAAQsE,OAK1CkgB,EAAMR,OAAS,SAASkD,GACpB,OAAKhvB,UAAUzH,QACfuP,EAAQgkB,OAASkD,EACV1C,GAFuBxkB,EAAQgkB,QAK1CQ,EAAML,qBAAuB,SAAS+C,GAClC,OAAKhvB,UAAUzH,QACfuP,EAAQmkB,qBAAuB+C,EACxB1C,GAFuBxkB,EAAQmkB,sBAK1CK,EAAMN,eAAiB,SAASgD,GAC5B,OAAKhvB,UAAUzH,QACfuP,EAAQkkB,eAAiBgD,EAClB1C,GAFuBxkB,EAAQkkB,gBAK1CM,EAAMP,iBAAmB,SAASiD,GAC9B,OAAKhvB,UAAUzH,QACfuP,EAAQikB,iBAAmBiD,EACpB1C,GAFuBxkB,EAAQikB,kBAK1CO,EAAMrW,cAAgB,SAAS+Y,GAC3B,OAAKhvB,UAAUzH,QACfuP,EAAQmO,cAAgB+Y,EACjB1C,GAFuBxkB,EAAQmO,eAK1CqW,EAAML,qBAAuB,SAAS+C,GAClC,OAAKhvB,UAAUzH,QACfuP,EAAQmkB,qBAAuB+C,EACxB1C,GAFuBxkB,EAAQmkB,sBAK1CK,EAAMJ,sBAAwB,SAAS8C,GACnC,OAAKhvB,UAAUzH,QACfuP,EAAQokB,sBAAwB8C,EACzB1C,GAFuBxkB,EAAQokB,uBAK1CI,EAAMH,oBAAsB,SAAS6C,GACjC,OAAKhvB,UAAUzH,QACfuP,EAAQqkB,oBAAsB6C,EACvB1C,GAFuBxkB,EAAQqkB,qBAK1CG,EAAMF,UAAY,SAAS4C,GACvB,OAAKhvB,UAAUzH,QACfuP,EAAQskB,UAAY4C,EACb1C,GAFuBxkB,EAAQskB,WAK1CE,EAAMD,aAAe,SAAS2C,GAC1B,OAAKhvB,UAAUzH,QACfuP,EAAQukB,aAAe2C,EAChB1C,GAFuBxkB,EAAQukB,cAK1CC,EAAM/H,KAAO,SAASyK,GAClB,OAAKhvB,UAAUzH,QACfuP,EAAQyc,KAAOyK,EACR1C,GAFuBxkB,EAAQyc,MAKnC+H,EHzGX5S,EAAO1oB,UAAUuuB,sBAAwB,SAASnI,GAC9C,IAKIhoB,EALAqF,EAAI,GACPC,EAAI,GACL,GAA0B,IAAtB0iB,EAAW7e,QAAkC,IAAlB6e,EAAW,GACtC,OAAO,EAGXnlB,KAAK6nB,MAAQ1C,EAAW,GACxBnlB,KAAK4nB,MAAQ,GACb,IAAK,IAAIpP,EAAQ,EAAGA,EAAQxY,KAAK6nB,MAAQ,EAAGrP,IACxCxY,KAAK4nB,MAAM5kB,KAAK,IAAIkkB,GAExBlnB,KAAKioB,QAAU,GACf,IAASzP,EAAQ,EAAGA,EAAQxY,KAAK6nB,MAAQ,EAAGrP,IACxCxY,KAAKioB,QAAQjlB,KAAK,IAAI5C,KAE1BJ,KAAKo9B,cAAcjY,GACnBnlB,KAAKkoB,QAAU,KACfloB,KAAKq9B,eACLr9B,KAAK+nB,WAAa,EAClB/nB,KAAKgoB,MAAQ,GACb,IAASxP,EAAQ,EAAGA,EAAQxY,KAAK6nB,MAAQ,EAAGrP,IACxCxY,KAAKgoB,MAAMhlB,KAAK,IAAI9C,KAMxB,IAJAF,KAAKs9B,eAAe,GACpBt9B,KAAKu9B,oBACLv9B,KAAKw9B,cAAcx9B,KAAKzD,KAAM,MAEzBY,EAAI,EAAGA,EAAI6C,KAAK6nB,MAAO1qB,IACxBqF,EAAEQ,KAAK,IAAMhD,KAAKwoB,kBAAoBxoB,KAAK4nB,MAAMzqB,EAAI,GAAGoG,QACxDd,EAAEO,KAAK,IAAMhD,KAAKwoB,kBAAoBxoB,KAAK4nB,MAAMzqB,EAAI,GAAGsG,QAG5D,MAAO,CACHokB,MAAO7nB,KAAK6nB,MACZrlB,EAAGA,EACHC,EAAGA,IAIXglB,EAAO1oB,UAAUq+B,cAAgB,SAAuBjY,GACpD,IAAIhoB,EAAI,KACJsgC,EAAS,KASb,IANAz9B,KAAK4nB,MAAM5kB,KAAK,IAAIkkB,GACpBlnB,KAAK4nB,MAAM,GAAGN,QAAQ,GACtBtnB,KAAK4nB,MAAM,GAAGJ,cAAa,GAC3BxnB,KAAK4nB,MAAM,GAAGpkB,KAAKxD,KAAK0nB,MACxB1nB,KAAK4nB,MAAM,GAAGlkB,KAAK1D,KAAK0nB,MAEnB+V,EAAS,EAAGtgC,EAAI,EAAGA,GAAK6C,KAAK6nB,MAAO1qB,IACrC6C,KAAK4nB,MAAM5kB,KAAK,IAAIkkB,GACpBlnB,KAAK4nB,MAAMzqB,GAAGqqB,cAAa,GAC3BxnB,KAAK4nB,MAAMzqB,GAAGqG,KAAKxD,KAAK0nB,MACxB1nB,KAAK4nB,MAAMzqB,GAAGuG,KAAK1D,KAAK0nB,MACxB1nB,KAAK4nB,MAAMzqB,GAAGmqB,QAAQnC,EAAWhoB,IAC7BgoB,EAAWhoB,GAAKA,GAChBsgC,IAGM,GAAVA,IACAz9B,KAAK4nB,MAAM,GAAGN,QAAQtnB,KAAK6nB,OAC3B7nB,KAAK4nB,MAAM5nB,KAAK6nB,OAAOP,QAAQ,KAIvCG,EAAO1oB,UAAUs+B,aAAe,WAC5B,IAEIK,EAFAvgC,EAAI,KACJgqB,EAAO,KAGXuW,EAAM19B,KAAK6nB,MAAQ,EACnB,IAAItlB,EAAO,GACX,IAAKpF,EAAI,EAAGA,EAAIugC,EAAKvgC,IACjBoF,EAAKS,MAAK,GAGd,IADAhD,KAAK8nB,QAAU,EACV3qB,EAAI,EAAGA,GAAK6C,KAAK6nB,MAAO1qB,IACzB,GAAwC,IAAnCgqB,EAAOnnB,KAAK4nB,MAAMzqB,GAAGkqB,aAAoB9kB,EAAKpF,GAAI,CAOnD,IANA6C,KAAKioB,QAAQjoB,KAAK8nB,SAAS5jB,UAAU/G,GACrC6C,KAAKioB,QAAQjoB,KAAK8nB,SAASnjB,QAAQwiB,GACnC5kB,EAAKpF,IAAK,EACVoF,EAAK4kB,IAAQ,EACbnnB,KAAK4nB,MAAMzqB,GAAG+D,UAAUlB,KAAKioB,QAAQjoB,KAAK8nB,UAC1C9nB,KAAK4nB,MAAMT,GAAMjmB,UAAUlB,KAAKioB,QAAQjoB,KAAK8nB,UACxC3qB,IAAKgqB,IAAQhqB,EAAIgqB,GAAQnnB,KAAK4nB,MAAMzqB,GAAGkqB,WAAaF,EAAMhqB,IAAKgqB,IAChE5kB,EAAK4kB,IAAQ,EACb5kB,EAAKpF,IAAI,EACT6C,KAAK4nB,MAAMzqB,GAAG+D,UAAUlB,KAAKioB,QAAQjoB,KAAK8nB,UAC1C9nB,KAAK4nB,MAAMT,GAAMjmB,UAAUlB,KAAKioB,QAAQjoB,KAAK8nB,UAEjD9nB,KAAKioB,QAAQjoB,KAAK8nB,SAASzjB,UAAUlH,GACrC6C,KAAKioB,QAAQjoB,KAAK8nB,SAAStjB,UAAU2iB,EAAO,GAE5CnnB,KAAK8nB,YAKjBL,EAAO1oB,UAAUu+B,eAAiB,SAAwBK,GACtD,IAAIxgC,EAAI,KACJgqB,EAAO,KACPyW,EAAU,IAAI19B,IACdqlB,EAAK,IAAIrlB,IACT29B,EAAK,IAAIh+B,aACTi+B,EAAK,IAAI19B,IACT29B,EAAM,IAAItX,EAOd,KANAmX,EAAU59B,KAAKgoB,MAAMhoB,KAAK+nB,eAClBnlB,eAAe,GACvBg7B,EAAQx6B,SAAS,GACjBw6B,EAAQ16B,UAAUlD,KAAK+nB,YACvB6V,EAAQh6B,UAAU,GAEbm6B,EAAM/9B,KAAKkoB,QAAgB,MAAP6V,EAAaA,EAAMA,EAAIjX,UACxCiX,EAAInX,iBAAmB5mB,KAAK+nB,YAC5B6V,EAAQh6B,UAAUm6B,EAAIp6B,aAC9BxG,EAAIwgC,EACJ,GAC4C,IAAnCxW,EAAOnnB,KAAK4nB,MAAMzqB,GAAGkqB,aACtByW,EAAK99B,KAAK4nB,MAAMzqB,GAAG8D,YACdjB,KAAK4nB,MAAMkW,EAAG75B,aAAasjB,gBACxBpqB,GAAK2gC,EAAG75B,aACRjE,KAAK4nB,MAAMkW,EAAG75B,aAAaujB,cAAa,GACxCxnB,KAAK4nB,MAAMkW,EAAG15B,WAAWojB,cAAa,GACtCxnB,KAAK4nB,MAAMkW,EAAGv5B,aAAaijB,cAAa,GACxCxnB,KAAK4nB,MAAMkW,EAAGp5B,WAAW8iB,cAAa,GACtCjC,EAAKvlB,KAAKs9B,eAAeQ,EAAG15B,UAAYpE,KAAK6nB,MAAQiW,EAAG15B,UAAY,EAC1D,IACHjH,GAAK2gC,EAAGv5B,aACfvE,KAAK4nB,MAAMkW,EAAGv5B,aAAaijB,cAAa,GACxCxnB,KAAK4nB,MAAMkW,EAAGp5B,WAAW8iB,cAAa,GACtCxnB,KAAK4nB,MAAMkW,EAAG75B,aAAaujB,cAAa,GACxCxnB,KAAK4nB,MAAMkW,EAAG15B,WAAWojB,cAAa,GACtCjC,EAAKvlB,KAAKs9B,eAAeQ,EAAGp5B,UAAY1E,KAAK6nB,MAAQiW,EAAGp5B,UAAY,EAC1D,IAEV4T,QAAQpD,IAAI,sCAEhB0oB,EAAQh7B,eAAeg7B,EAAQj7B,iBAAmB,GAClDk7B,EAAK,IAAIh+B,aACT+9B,EAAQ/6B,cAAc+6B,EAAQj7B,iBAAmB,EAAGk7B,GACpDD,EAAQ/6B,cAAc+6B,EAAQj7B,iBAAkB,MAChDk7B,EAAG78B,QAAQukB,GACXsY,EAAG38B,UAAU48B,GACV3gC,GAAK2gC,EAAG75B,aACP45B,EAAGz8B,SAAS08B,EAAG75B,aACf45B,EAAGv8B,OAAOw8B,EAAGp5B,aAEbm5B,EAAGz8B,SAAS08B,EAAGv5B,aACfs5B,EAAGv8B,OAAOw8B,EAAG15B,YAEjBy5B,EAAG/7B,aAAY,GACf+7B,EAAG77B,WAAU,GACbujB,EAAG3iB,eAAe2iB,EAAG5iB,iBAAmB,GACxCk7B,EAAK,IAAIh+B,aACT0lB,EAAG1iB,cAAc0iB,EAAG5iB,iBAAmB,EAAGk7B,GAC1CtY,EAAG1iB,cAAc0iB,EAAG5iB,iBAAkB,MACtCk7B,EAAG78B,QAAQ48B,GACXC,EAAG38B,UAAU48B,GACT3gC,GAAK2gC,EAAG75B,aACR45B,EAAGz8B,SAAS08B,EAAGv5B,aACfs5B,EAAGv8B,OAAOw8B,EAAG15B,aAEby5B,EAAGz8B,SAAS08B,EAAG75B,aACf45B,EAAGv8B,OAAOw8B,EAAGp5B,YAEjBm5B,EAAG/7B,aAAY,GACf+7B,EAAG77B,WAAU,IAEjB7E,EAAIgqB,KAEFhqB,EAAI6C,KAAK6nB,QACX1qB,EAAI,SACHA,GAAKwgC,GACd,OAAOC,GAGXnW,EAAO1oB,UAAUw+B,kBAAoB,WACjC,IAAIhY,EAAK,IAAIrlB,IACT89B,EAAU,KACVC,EAAW,KACX9gC,EAAI,KAKR,IAcJ,WACI,IAAIooB,EAAK,IAAIrlB,IACT/C,EAAI,KACJ8M,EAAI,KAER,IAAK9M,EAAI,EAAGA,EAAI6C,KAAK+nB,WAAY5qB,IAAK,CAElC,IADAooB,EAAKvlB,KAAKgoB,MAAM7qB,GACX8M,EAAI,EAAGA,EAAIjK,KAAK+nB,WAAY9d,IAC7BjK,KAAKgoB,MAAM/d,GAAG3G,SAAQ,GAE1BiiB,EAAGniB,SAASd,EAAMijB,MA3BL5mB,KAAKqB,KAAtBk+B,GACAF,EAAU,EACVC,GAAY,EACP9gC,EAAI,EAAGA,EAAI6C,KAAK+nB,WAAY5qB,KAC7BooB,EAAKvlB,KAAKgoB,MAAM7qB,IACTwF,iBAAmBq7B,GACtBC,EAAW1Y,EAAGpiB,WACd66B,EAAUzY,EAAG5iB,iBACb3C,KAAKzD,KAAOgpB,GACLA,EAAGpiB,WAAa86B,GAChB1Y,EAAG5iB,kBAAoBq7B,IAC9BC,EAAW1Y,EAAGpiB,WACdnD,KAAKzD,KAAOgpB,IAgDxBkC,EAAO1oB,UAAUy+B,cAAgB,SAAuBjY,EAAI4Y,GACxD,IAAIC,EAAIC,EAAIC,EAAQC,EAAIC,EAAInW,EAAUpqB,EAClCyE,EAAQ+7B,EAAIC,EAAIC,EAAIC,EAAIC,EAAQC,EAAMtxB,EACtCqwB,EAAIkB,EAAQC,EAAKC,EACjB9hC,EAAG8M,EAAGrL,EAAGsgC,EACTC,EAAIC,EACJhZ,EAAOiZ,EAASC,EAAOC,EAAUC,EACjCC,EAAMC,EAAsBC,EAC5BC,EACAC,EAAMC,EAAMC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAAIC,EAAOC,EAAOC,EACpDC,EAAUC,EAAMC,EAAQC,EAAQC,EAChCC,EAAKnL,EAAIC,GAAImL,GACbC,GAAKC,GAAKC,GAASC,GAASC,GAAUC,GAAKC,GAAIC,GAAKC,GAAKC,GAAIC,GAAIC,GAAKC,GAAIC,GAAIC,GAC9EC,GAAW,EAEfzZ,EAAW,EAAI1c,KAAK+Z,IAAM1lB,KAAK6nB,MAAQ,GACvCmX,EAAM,KACNQ,GAAU,EACV,IAAIuC,GAAS,EAEb,IAAK7C,EAAK,EAAsC,OAAlCrB,EAAKtY,EAAGziB,cAAci/B,KAAkBA,KAAU7C,IAC5Dd,GAAMzyB,KAAK6a,IAAI6B,EAAWwV,EAAG18B,YAC7Bk9B,EAAK1yB,KAAK8W,IAAI4F,EAAWwV,EAAG18B,YAC5Bm9B,GAAM3yB,KAAK6a,IAAI6B,EAAWwV,EAAGx8B,UAE7Bk9B,EADK5yB,KAAK8W,IAAI4F,EAAWwV,EAAGx8B,UAClBg9B,EACVG,EAAKJ,EAAKE,EACVrgC,EAAI0N,KAAK0Y,KAAKka,EAAKA,EAAKC,EAAKA,GAC7BX,EAAGr8B,QAAQ+8B,EAAKtgC,GAChB4/B,EAAGn8B,QAAQ88B,EAAKvgC,GAChB4/B,EAAGj8B,SAAS+J,KAAKq2B,MAAMxD,EAAID,IACvBV,EAAGl8B,WAAa,GAChBk8B,EAAGj8B,SAASi8B,EAAGl8B,WAAa,EAAIgK,KAAK+Z,IAEhB,MAArByY,GACOA,EAAkBl9B,aAAe48B,EAAG58B,cAC3C+9B,EAAMnB,EACN2B,EAASN,GAGjB+C,EAAY,OAAa,CACrBjiC,KAAKkiC,iBAAiB3c,EAAIvlB,KAAKmoB,QAC/BzlB,EAAS6iB,EAAG5hB,YAAY3D,KAAKooB,wBACJ,MAArB+V,EACAM,EAAKC,EAAK,GAGVC,GAAM3+B,KAAK4nB,MAAMoX,EAAI79B,YAAYoC,OAASvD,KAAK4nB,MACtCoX,EAAI39B,UAAUkC,QAAU,EACjCq7B,GAAM5+B,KAAK4nB,MAAMoX,EAAI79B,YAAYsC,OAASzD,KAAK4nB,MACtCoX,EAAI39B,UAAUoC,QAAU,EACjCg7B,EAAKE,EAAKj8B,EAASs8B,EAAIz9B,UACvBm9B,EAAKE,EAAKl8B,EAASs8B,EAAIv9B,WAWvB49B,GADW,GAAXG,EACU,EAGAA,EAEd3B,EAAKtY,EAAGziB,cAAcu8B,GACtBjZ,EAAQ,EACRqZ,GAAO,EACP,GAaI,IAZAx1B,EAAIo1B,EAAU,GACN,IACJp1B,EAAIsb,EAAG5iB,iBAAmB,GAE9Bs8B,EAAS1Z,EAAGziB,cAAcmH,GACrBjK,KAAKmiC,qBAAqBlD,EAAQpB,IAInCwB,EAAUp1B,EACV4zB,EAAKoB,GAJLQ,GAAO,IAMLrZ,EAAQb,EAAG5iB,iBAAkB,CAI/B,IADAy8B,GAAU,EACLF,EAAK,EAAGA,EAAK3Z,EAAG5iB,iBAAkBu8B,KACnCj1B,EAAIi1B,EAAK,IACA3Z,EAAG5iB,mBACRsH,EAAI,GAER4zB,EAAKtY,EAAGziB,cAAco8B,IAEtBuC,IADA1C,EAASxZ,EAAGziB,cAAcmH,IACdtI,WAAak8B,EAAGl8B,YACnB,IACL8/B,IAAM,EAAI91B,KAAK+Z,IAEf+b,GAAKrC,IACLA,EAASqC,GACTK,GAAW5C,GAGnBI,EAAQwC,IACRzC,EAAUyC,GAAW,IACNvc,EAAG5iB,mBACd08B,EAAU,IAEdxB,EAAKtY,EAAGziB,cAAcw8B,IACnBt9B,WAAU,GACby9B,GAAO,UAELA,GAGV,IAFAC,GAAuB,EACvBc,EAAWnB,GACHK,GAAsB,CAK1B,IAJAtZ,EAAQ,EACRqZ,GAAO,EACPH,EAAQD,EACRM,GAAS,GACDF,GAUJ,GATA5B,EAAKtY,EAAGziB,cAAcw8B,GAClBA,GAASE,IACTG,GAAS,IAEb11B,EAAIq1B,EAAQ,IACH/Z,EAAG5iB,mBACRsH,EAAI,GAER80B,EAASxZ,EAAGziB,cAAcmH,GACtBjK,KAAKmiC,qBAAqBtE,EAAIkB,GAAS,CACvC,KAAM3Y,GAASb,EAAG5iB,iBACd,MAEJ28B,EAAQr1B,OAGRw1B,GAAO,EAQf,IAHAP,EAAKuB,EAAOC,EAFZnB,EAAWv/B,KAAKoiC,eAAe/C,EAASC,EAAOnB,EACvCa,EAAKzZ,GAEbka,GAAO,EACPmB,EAAY,GACJnB,IAEAP,EADA0B,EAAY,EACPH,EAEa,GAAbG,EACArB,EAGAmB,IAEC,IACN7C,EAAKtY,EAAGziB,cAAco8B,GACG,MAArBf,GAA6Ba,GAAOnB,IACnB,GAAb+C,GACA/B,EAAShB,EAAGl8B,WACFgK,KAAK02B,KAAK,GAAY3/B,GAChCo8B,EAAOjB,EAAGl8B,WACAgK,KAAK02B,KAAK,GAAY3/B,GAChC1C,KAAK4nB,MAAMiW,EAAG18B,YAAYqC,KAClBi7B,EAAK/7B,EAASiJ,KAAK8W,IAAIoc,IAC/B7+B,KAAK4nB,MAAMiW,EAAG18B,YAAYuC,KAClBg7B,EAAKh8B,EAASiJ,KAAK6a,IAAIqY,IAC/B7+B,KAAK4nB,MAAMiW,EAAGx8B,UAAUmC,KAChBi7B,EAAK/7B,EAASiJ,KAAK8W,IAAIqc,IAC/B9+B,KAAK4nB,MAAMiW,EAAGx8B,UAAUqC,KAChBg7B,EAAKh8B,EAASiJ,KAAK6a,IAAIsY,KAE1B8B,EAAY,IACjB32B,EAAIi1B,EAAK,IACA3Z,EAAG5iB,mBACRsH,EAAI,GAER4zB,EAAKtY,EAAGziB,cAAco8B,GACtBH,EAASxZ,EAAGziB,cAAcmH,GAC1B82B,GAAMlD,EAAGt8B,UACTy/B,GAAMnD,EAAGp8B,UACTggC,IAAM5D,EAAGl8B,WAAao9B,EAAOp9B,YAAc,EACvCk8B,EAAGl8B,WAAao9B,EAAOp9B,aACvB8/B,IAAM91B,KAAK+Z,IAEfyb,GAAMx1B,KAAK8W,IAAIgf,IAEfH,GADM31B,KAAK6a,IAAIib,IAEfF,IAAOJ,IACPhC,EAAKJ,EAAOp9B,WAAak8B,EAAGl8B,YACnB,IACLw9B,GAAM,EAAIxzB,KAAK+Z,IAIX8b,GAFJ3D,EAAGh8B,aACCs9B,GAAMxzB,KAAK+Z,GAAK,EACX,EAGA,IAIJ,EAET1lB,KAAK4nB,MAAMiW,EAAGx8B,UAAUmC,KAChBxD,KAAK4nB,MAAMmX,EAAO59B,YAAYoC,OACpBi+B,GAAKF,IACvBthC,KAAK4nB,MAAMiW,EAAGx8B,UAAUqC,KAChB1D,KAAK4nB,MAAMmX,EAAO59B,YAAYsC,OACpB+9B,GAAKD,IACvBvhC,KAAK4nB,MAAMiW,EAAG18B,YAAYqC,KAClBxD,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAASy9B,IACzChhC,KAAK4nB,MAAMiW,EAAG18B,YAAYuC,KAClB1D,KAAK4nB,MAAMiW,EAAGx8B,UAAUoC,OAASs9B,OAEzC92B,EAAIi1B,EAAK,GACD,IACJj1B,EAAIsb,EAAG5iB,iBAAmB,GAE9Bk7B,EAAKtY,EAAGziB,cAAcmH,GAEtBg3B,IADAlC,EAASxZ,EAAGziB,cAAco8B,IACT39B,UACjB2/B,GAAUnC,EAAOt9B,UACjBggC,IAAM5D,EAAGl8B,WAAao9B,EAAOp9B,YAAc,EACvCk8B,EAAGl8B,WAAao9B,EAAOp9B,aACvB8/B,IAAM91B,KAAK+Z,IAEfyb,GAAMx1B,KAAK8W,IAAIgf,IAEfH,IADM31B,KAAK6a,IAAIib,IAEfF,GAAMJ,IACNhC,EAAKJ,EAAOp9B,WAAak8B,EAAGl8B,YACnB,IACLw9B,GAAM,EAAIxzB,KAAK+Z,IAIX8b,GAFJ3D,EAAGh8B,aACCs9B,GAAMxzB,KAAK+Z,GAAK,EACX,EAGA,IAIJ,EAET1lB,KAAK4nB,MAAMmX,EAAO59B,YAAYqC,KACtBxD,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAASi+B,GACvBF,IAClBthC,KAAK4nB,MAAMmX,EAAO59B,YAAYuC,KACtB1D,KAAK4nB,MAAMiW,EAAGx8B,UAAUoC,OAAS+9B,GACvBD,IAClBvhC,KAAK4nB,MAAMmX,EAAO19B,UAAUmC,KACpBxD,KAAK4nB,MAAMmX,EAAO59B,YAAYoC,OACpB29B,IAClBlhC,KAAK4nB,MAAMmX,EAAO19B,UAAUqC,KACpB1D,KAAK4nB,MAAMmX,EAAO59B,YAAYsC,OACpBw9B,OAI1BL,EAAY,GACRF,GAAUpB,EACVoB,GAAU,EAELA,GAAU,KACTA,GAAUnb,EAAG5iB,mBACf+9B,EAAS,GAGjBE,EAAY,IAGRH,GAAQpB,EACRoB,GAAQ,EAEHA,GAAQ,KACPA,EAAO,IACTA,EAAOlb,EAAG5iB,iBAAmB,GAGrCi+B,GAAa,GAEjBnB,GAAgB,GAATgB,IAAyB,GAAXC,EAMzB,IAJAC,EAASrB,EAAQ,IACH/Z,EAAG5iB,mBACbg+B,EAAS,GAETrB,GAASD,IACCA,GAAWmB,GAAYG,GAAUH,GAuD3C,GAjDA3C,EAAKtY,EAAGziB,cAAcu8B,GACtBN,EAASxZ,EAAGziB,cAAcw8B,GAC1B5J,EAAK11B,KAAK4nB,MAAMmX,EAAO19B,UAAUkC,OACvBvD,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OACpCoyB,GAAK31B,KAAK4nB,MAAMmX,EAAO19B,UAAUoC,OACvBzD,KAAK4nB,MAAMiW,EAAG18B,YAAYsC,OACpCo8B,EAAO7/B,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OAASmyB,EAAK,EAC/CoK,EAAO9/B,KAAK4nB,MAAMiW,EAAG18B,YAAYsC,OAASkyB,GAAK,EAE/CsK,EAAKvK,GADLoL,GAAKn1B,KAAK0Y,KAAKqR,EAAKA,EAAKC,GAAKA,KAE9BuK,EAAKvK,GAAKmL,GACVX,EAAK1B,EAAKoB,EACVO,EAAK1B,EAAKoB,EAKVC,GADAM,GAFAF,GADAW,GAAKn1B,KAAK0Y,KAAKqR,EAAKA,EAAKC,GAAKA,KAGjBsK,GADbG,GAAMU,IACiBZ,GACTD,EAAKE,EACnBH,EAAMK,EAAQH,EAAKE,EAEnBL,GADAe,GAAKn1B,KAAK0Y,KAAK0b,EAAMA,EAAMC,EAAMA,GAEjCA,GAAOc,GAKPpL,EAAK11B,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OAASk7B,EACxC9I,GAAK31B,KAAK4nB,MAAMiW,EAAG18B,YAAYsC,OAASi7B,GACxC+C,GAAK91B,KAAKq2B,MAAMrM,GAAID,IACX,IACL+L,IAAM,EAAI91B,KAAK+Z,IAEnBgQ,EAAK11B,KAAK4nB,MAAMmX,EAAO19B,UAAUkC,OAASk7B,EAC1C9I,GAAK31B,KAAK4nB,MAAMmX,EAAO19B,UAAUoC,OAASi7B,GAC1CgD,GAAM/1B,KAAKq2B,MAAMrM,GAAID,IACX,IACNgM,IAAO,EAAI/1B,KAAK+Z,IAEhBgc,GAAMD,KACNC,IAAO,EAAI/1B,KAAK+Z,IAQpB4a,EAAQ7B,GALJmB,EADA8B,GAAMD,GAAK91B,KAAK+Z,IACR,EAGD,GAEShjB,EAASq9B,EAC7BQ,EAAQ7B,EAAKkB,EAAOl9B,EAASs9B,EACzBL,EACAlB,GAAM6B,EAAQT,EACdnB,GAAM6B,EAAQT,OAGd,IAAKZ,EAAKG,EAENliC,GADA0gC,EAAKtY,EAAGziB,cAAco8B,IACf/9B,WACPnB,KAAK4nB,MAAMzqB,GAAGqG,KACNxD,KAAK4nB,MAAMzqB,GAAGoG,OAAS+8B,EAAQT,GACvC7/B,KAAK4nB,MAAMzqB,GAAGuG,KACN1D,KAAK4nB,MAAMzqB,GAAGsG,OAAS88B,EAAQT,GACvC3iC,EAAI0gC,EAAGx8B,SACPrB,KAAK4nB,MAAMzqB,GAAGqG,KACNxD,KAAK4nB,MAAMzqB,GAAGoG,OAAS+8B,EAAQT,GACvC7/B,KAAK4nB,MAAMzqB,GAAGuG,KACN1D,KAAK4nB,MAAMzqB,GAAGsG,OAAS88B,EAAQT,GACnCZ,GAAMI,KAGJJ,GAAM3Z,EAAG5iB,mBACXu8B,EAAK,GAMrBQ,GADAL,EAAUsB,IACwBH,EAEtC,IAAKtB,EAAK,EAAGA,EAAK3Z,EAAG5iB,iBAAkBu8B,IAAM,CA6BzC,GA5BArB,EAAKtY,EAAGziB,cAAco8B,IACtBj1B,EAAIi1B,EAAK,IACA3Z,EAAG5iB,mBACRsH,EAAI,GAER80B,EAASxZ,EAAGziB,cAAcmH,GAC1ByrB,EAAK11B,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAASk7B,EACtC9I,GAAK31B,KAAK4nB,MAAMiW,EAAGx8B,UAAUoC,OAASi7B,EACtC2C,GAAK11B,KAAK0Y,KAAKqR,EAAKA,EAAKC,GAAKA,KAC9B8L,GAAK91B,KAAKq2B,MAAMrM,GAAID,IACX,IACL+L,IAAM,EAAI91B,KAAK+Z,IAEnBgQ,EAAK11B,KAAK4nB,MAAMmX,EAAO59B,YAAYoC,OAASk7B,EAC5C9I,GAAK31B,KAAK4nB,MAAMmX,EAAO59B,YAAYsC,OAASi7B,EAC5C0C,GAAMz1B,KAAK0Y,KAAKqR,EAAKA,EAAKC,GAAKA,KAC/B+L,GAAM/1B,KAAKq2B,MAAMrM,GAAID,IACX,IACNgM,IAAO,EAAI/1B,KAAK+Z,IAEhBgc,GAAMD,KACNC,IAAO,EAAI/1B,KAAK+Z,IAEpBmb,EAAMa,GAAMD,IACZI,GAAM9C,EAAOp9B,WAAak8B,EAAGl8B,aAClB,IACPkgC,IAAO,EAAIl2B,KAAK+Z,IAEhB/Z,KAAKsJ,IAAI4rB,EAAMgB,IAAOl2B,KAAK+Z,GAC3B,GAAImY,EAAGh8B,aACHyW,QAAQpD,IAAI,oCACFqQ,EAAGtiB,YAAc,+BAE1B,GAAK87B,EAAO59B,WAAa08B,EAAGx8B,UAAa,EAAG,CAC7Cw8B,EAAG/7B,aAAY,GACf,SAASmgC,EAGjB,GAAIpE,EAAGh8B,aACH7B,KAAKsiC,2BAA2BzE,EAAIkB,QAQpC,KALAngC,EAAImgC,EAAO59B,WAAa08B,EAAGx8B,UACnB,IACJzC,GAAKoB,KAAK6nB,MAAQ,GAEtBQ,EAAWwY,EAAMjiC,EACZqL,EAAI,EAAGA,EAAIrL,EAAGqL,KACf9M,EAAI0gC,EAAGx8B,SAAW4I,GACVjK,KAAK6nB,QACT1qB,GAAK6C,KAAK6nB,MAAQ,GAGtBiZ,GAAKO,IAAMD,GAAMC,MADjB7zB,EAAIi0B,GAAKx3B,EAAIoe,GACeoZ,IAAMZ,EAClC7gC,KAAK4nB,MAAMzqB,GAAGqG,KAAKi7B,EAAKqC,GAAKn1B,KAAK8W,IAAIjV,IACtCxN,KAAK4nB,MAAMzqB,GAAGuG,KAAKg7B,EAAKoC,GAAKn1B,KAAK6a,IAAIhZ,IAIlD,MAEJ,IAAK0xB,EAAK,EAAGA,EAAK3Z,EAAG5iB,iBAAkBu8B,IAC/BM,GAAUN,IACVrB,EAAKtY,EAAGziB,cAAco8B,GAEtBl/B,KAAKuiC,gBAAgB1E,GACrB79B,KAAKw9B,cAAcK,EAAG98B,UAAW88B,IAMzC,IAHAj/B,EAAI,EACJ+iC,GAAK,EACLC,GAAK,EACA1C,EAAK,EAAGA,EAAK3Z,EAAG5iB,iBAAkBu8B,IAYnC,IAXAj1B,EAAIi1B,EAAK,IACA3Z,EAAG5iB,mBACRsH,EAAI,GAER4zB,EAAKtY,EAAGziB,cAAco8B,GACtBH,EAASxZ,EAAGziB,cAAcmH,GAC1BrL,GAAK,EACL+iC,IAAM3hC,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OACtBvD,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAClCq+B,IAAM5hC,KAAK4nB,MAAMiW,EAAG18B,YAAYsC,OACtBzD,KAAK4nB,MAAMiW,EAAGx8B,UAAUoC,QAC7Bo6B,EAAGh8B,aACJ,IAAKoI,EAAI4zB,EAAGx8B,SAAW,EAAG4I,GAAK80B,EAAO59B,WAAY8I,IAC1CA,EAAIjK,KAAK6nB,QACT5d,GAAKjK,KAAK6nB,MAAQ,GAEtBjpB,IACA+iC,IAAM3hC,KAAK4nB,MAAM3d,GAAG1G,OACpBq+B,IAAM5hC,KAAK4nB,MAAM3d,GAAGxG,OAIhC8hB,EAAG/hB,KAAKm+B,GAAK/iC,GACb2mB,EAAG7hB,KAAKk+B,GAAKhjC,IAGjB6oB,EAAO1oB,UAAUmjC,iBAAmB,SAA0B3c,EAAI4C,GAC9D,IAAIqa,EAAQC,EAAIjsB,EAAIksB,EAAMC,EAAMjgC,EAAQkgC,EACpCzlC,EAAG8M,EAAG3J,EAAKD,EAAOwiC,EAAU,EAC5BhF,EAAK,IAAIh+B,aAAck/B,EAAS,IAAIl/B,aAGxC,EAAG,CAEC,IADA2iC,EAAS,KACJG,EAAO,EAAKD,EAAO,EAAKvlC,EAAI,EAAGA,EAAIooB,EAAG5iB,iBAAkBxF,IACzD0gC,EAAKtY,EAAGziB,cAAc3F,IACtB8M,EAAI9M,EAAI,IACCooB,EAAG5iB,mBACRsH,EAAI,GAER80B,EAASxZ,EAAGziB,cAAcmH,GAC1B3J,EAAMu9B,EAAGx8B,UACThB,EAAQ0+B,EAAO59B,YACHb,IACRD,GAASL,KAAK6nB,MAAQ,IAE1BrR,EAAKuoB,EAAOp9B,WAAak8B,EAAGl8B,aAClB,IACN6U,GAAM,EAAI7K,KAAK+Z,IAanBgd,GAAQlsB,GAAM,GANNisB,EALH5E,EAAGh8B,aAIA2U,GAAM7K,KAAK+Z,GAAK,EACX,EAGA,IAPJrlB,EAAQC,GAUQ,GACzBqiC,GAAQnsB,EAAKA,EAAKisB,GAClBG,EAAMpsB,EAAKisB,GACDD,IAAW3E,EAAGh8B,cAAgB4gC,EAAK,IACzCD,EAASI,EACTC,EAAU1lC,IAGlBuF,EAASggC,EAAOC,GAvCR,WAyCJjgC,EAzCI,UA2CJ8/B,EAAS9/B,EAASylB,GAClB5C,EAAGziB,cAAc+/B,GAAS/gC,aAAY,SAErC0gC,EAAS9/B,EAASylB,GACvB5C,EAAG5hB,YAAc,EACjBjB,EAAS6iB,EAAG5hB,YAGZ4hB,EAAG3hB,UAAUlB,IAIrB+kB,EAAO1oB,UAAUqjC,eAAiB,SAAwB/C,EAASC,EAAOnB,EAAmBa,EAAKzZ,GAC9F,IAAIa,EAAOjX,EAAK+vB,EAAI/hC,EAChBsiC,EAMJ,IAJArZ,EAAQ,EACRjX,GAAO,EACP+vB,EAAKG,EACLI,GAAO,GACCA,GACArZ,IAAgC,EAAtBb,EAAG5iB,kBACb2V,QAAQpD,IAAI,qCAES,MAArBipB,GAA6B5Y,EAAGziB,cAAco8B,IAAOF,IACrD7vB,EAAM+vB,GAEVO,EAAOP,GAAMI,IACPJ,GAAM3Z,EAAG5iB,mBACXu8B,EAAK,GAGb,IAAY,GAAR/vB,EAAW,CACX,IAAKhS,EAAI,EAAG+hC,EAAKG,EAASliC,GAAKipB,EAAQ,GAAK,EAAGjpB,MACrC+hC,GAAM3Z,EAAG5iB,mBACXu8B,EAAK,GAEb/vB,EAAM+vB,EAEV,OAAO/vB,GAGXsY,EAAO1oB,UAAUujC,2BAA6B,SAAoCzE,EAAIkB,GAClF,IAAIF,EAAQiE,EAAOC,EAAOC,EAAMtN,EAAIC,EAAIsN,EAAIC,EAAIzB,EAAIX,EAAI3B,EAAIgE,EACxD9iC,EAAOC,EAAK1B,EAAGwkC,EAAQC,EACvBC,EAkBJ,GAhBAzE,EAAShB,EAAGl8B,YACZohC,EAAQD,EAAQ/D,EAAOp9B,YACXk9B,IACRkE,GAAS,EAAIp3B,KAAK+Z,IAEtBsd,GAAQnE,EAASkE,GAAS,EAC1B1iC,EAAQw9B,EAAGx8B,UAEXzC,GADA0B,EAAMy+B,EAAO59B,YACHd,GACF,IACJzB,GAAKoB,KAAK6nB,MAAQ,IAEtBsX,EAAKJ,EAAOp9B,WAAak8B,EAAGl8B,YACnB,IACLw9B,GAAM,EAAIxzB,KAAK+Z,IAEV,GAAL9mB,EACAoB,KAAKujC,yBAAyBljC,EAAOC,OAEpC,CACDo1B,EAAK11B,KAAK4nB,MAAMtnB,GAAKiD,OAASvD,KAAK4nB,MAAMvnB,GAAOkD,OAChDoyB,EAAK31B,KAAK4nB,MAAMtnB,GAAKmD,OAASzD,KAAK4nB,MAAMvnB,GAAOoD,OAEhDiyB,GADAoL,EAAKn1B,KAAK0Y,KAAKqR,EAAKA,EAAKC,EAAKA,GAE9BA,GAAMmL,EACFA,GAAM,KAAO3B,GAAMxzB,KAAK+Z,GAAK,KAC7B0d,EAAS/iC,EAAQ,GACJL,KAAK6nB,QACdub,GAAUpjC,KAAK6nB,MAAQ,IAE3Bwb,EAAO/iC,EAAM,GACF,IACP+iC,GAAQrjC,KAAK6nB,MAAQ,GAEzB7nB,KAAK4nB,MAAMwb,GAAQ5/B,KAAKxD,KAAK4nB,MAAMvnB,GAAOkD,OAAS,GAAMmyB,GACzD11B,KAAK4nB,MAAMwb,GAAQ1/B,KAAK1D,KAAK4nB,MAAMvnB,GAAOoD,OAAS,GAAMkyB,GACzD31B,KAAK4nB,MAAMyb,GAAM7/B,KAAKxD,KAAK4nB,MAAMtnB,GAAKiD,OAAS,GAAMmyB,GACrD11B,KAAK4nB,MAAMyb,GAAM3/B,KAAK1D,KAAK4nB,MAAMtnB,GAAKmD,OAAS,GAAMkyB,GACrDt1B,EAAQ+iC,EACR9iC,EAAM+iC,GAEV,GACIC,GAAY,EACZtjC,KAAKujC,yBAAyBljC,EAAOC,IACrC8iC,EAAS/iC,EAAQ,GACJL,KAAK6nB,QACdub,GAAUpjC,KAAK6nB,MAAQ,GAE3B6N,EAAK11B,KAAK4nB,MAAMwb,GAAQ7/B,OAASvD,KAAK4nB,MAAMvnB,GAAOkD,OACnDoyB,EAAK31B,KAAK4nB,MAAMwb,GAAQ3/B,OAASzD,KAAK4nB,MAAMvnB,GAAOoD,QACnDw/B,EAAKt3B,KAAKq2B,MAAMrM,EAAID,IACX,IACLuN,GAAM,EAAIt3B,KAAK+Z,KAEnByd,EAAMF,EAAKpE,GACD,IACNsE,GAAO,EAAIx3B,KAAK+Z,IAEhByd,EAAMx3B,KAAK+Z,KACX4d,GAAY,IAEhBD,EAAO/iC,EAAM,GACF,IACP+iC,GAAQrjC,KAAK6nB,MAAQ,GAEzB6N,EAAK11B,KAAK4nB,MAAMyb,GAAM9/B,OAASvD,KAAK4nB,MAAMtnB,GAAKiD,OAC/CoyB,EAAK31B,KAAK4nB,MAAMyb,GAAM5/B,OAASzD,KAAK4nB,MAAMtnB,GAAKmD,QAC/Cy/B,EAAKv3B,KAAKq2B,MAAMrM,EAAID,IACX,IACLwN,GAAM,EAAIv3B,KAAK+Z,KAEnByd,EAAML,EAAQI,GACJ,IACNC,GAAO,EAAIx3B,KAAK+Z,IAEhByd,EAAMx3B,KAAK+Z,KACX4d,GAAY,GAEZA,IACA7B,EAAKzhC,KAAKwjC,MAAMR,EAAMnE,EAAS,IAC/B7+B,KAAK4nB,MAAMwb,GAAQ5/B,KACXxD,KAAK4nB,MAAMvnB,GAAOkD,OAASoI,KAAK8W,IAAIgf,IAC5CzhC,KAAK4nB,MAAMwb,GAAQ1/B,KACX1D,KAAK4nB,MAAMvnB,GAAOoD,OAASkI,KAAK6a,IAAIib,IAC5CphC,EAAQ+iC,EACR3B,EAAKzhC,KAAKyjC,MAAMT,EAAMD,EAAQ,IAC9B/iC,KAAK4nB,MAAMyb,GAAM7/B,KAAKxD,KAAK4nB,MAAMtnB,GAAKiD,OAASoI,KAAK8W,IAAIgf,IACxDzhC,KAAK4nB,MAAMyb,GAAM3/B,KAAK1D,KAAK4nB,MAAMtnB,GAAKmD,OAASkI,KAAK6a,IAAIib,IACxDnhC,EAAM+iC,EACNzkC,GAAK,SAEJ0kC,GAAa1kC,EAAI,KAIlC6oB,EAAO1oB,UAAUwkC,yBAA2B,SAAkCljC,EAAOC,GACjF,IAAIo1B,EAAIC,EAAImL,EAAIjB,EAAMC,EAAMvB,EAAIC,EAAIuB,EAAKC,EAAKC,EAAIC,EAAI1yB,EAClDpQ,EAAG6M,EAAG9M,EASV,GAPAu4B,EAAK11B,KAAK4nB,MAAMtnB,GAAKiD,OAASvD,KAAK4nB,MAAMvnB,GAAOkD,OAChDoyB,EAAK31B,KAAK4nB,MAAMtnB,GAAKmD,OAASzD,KAAK4nB,MAAMvnB,GAAOoD,OAChDq9B,EAAKn1B,KAAK0Y,KAAKqR,EAAKA,EAAKC,EAAKA,IAC9Bv4B,EAAIkD,EAAMD,GACF,IACJjD,GAAK4C,KAAK6nB,MAAQ,GAElBiZ,GAAM1jC,EAGN,IAFAs4B,GAAMoL,EACNnL,GAAMmL,EACD72B,EAAI,EAAGA,EAAI7M,EAAG6M,KACf9M,EAAIkD,EAAQ4J,GACJjK,KAAK6nB,QACT1qB,GAAK6C,KAAK6nB,MAAQ,GAEtB7nB,KAAK4nB,MAAMzqB,GAAGqG,KACNxD,KAAK4nB,MAAMvnB,GAAOkD,OAASmyB,EAAKzrB,EAAI7M,GAC5C4C,KAAK4nB,MAAMzqB,GAAGuG,KACN1D,KAAK4nB,MAAMvnB,GAAOoD,OAASkyB,EAAK1rB,EAAI7M,QAiBhD,IAbA4C,KAAK0jC,oBAAqBtmC,EAAI,EAAI0jC,GAClCpL,GAAMoL,EACNnL,GAAMmL,EACNjB,EAAO7/B,KAAK4nB,MAAMvnB,GAAOkD,OAASmyB,EAAKoL,EAAK,EAC5ChB,EAAO9/B,KAAK4nB,MAAMvnB,GAAOoD,OAASkyB,EAAKmL,EAAK,EAC5CvC,EAAK5I,EACL6I,GAAM9I,EACNqK,EAAMF,EAAO7/B,KAAKsoB,GAAKiW,EACvByB,EAAMF,EAAO9/B,KAAKsoB,GAAKkW,EACvByB,EAAKjgC,KAAK4nB,MAAMvnB,GAAOkD,OAASw8B,EAChCG,EAAKlgC,KAAK4nB,MAAMvnB,GAAOoD,OAASu8B,EAChCc,EAAKn1B,KAAK0Y,KAAK4b,EAAKA,EAAKC,EAAKA,GAC9B1yB,EAAI7B,KAAKq2B,MAAM9B,EAAID,GACdh2B,EAAI,EAAGA,EAAI7M,EAAG6M,KACf9M,EAAIkD,EAAQ4J,GACJjK,KAAK6nB,QACT1qB,GAAK6C,KAAK6nB,MAAQ,GAEtB7nB,KAAK4nB,MAAMzqB,GAAGqG,KAAKu8B,EAAMe,EAAKn1B,KAAK8W,IAAIjV,EAAIvD,EAAIjK,KAAKqoB,WACpDroB,KAAK4nB,MAAMzqB,GAAGuG,KAAKs8B,EAAMc,EAAKn1B,KAAK6a,IAAIhZ,EAAIvD,EAAIjK,KAAKqoB,YAKhEZ,EAAO1oB,UAAU2kC,oBAAsB,SAA6B9kC,EAAGoK,GACnE,IAAI26B,EAAGC,EAAKC,EAAM5lC,EAAG6lC,EAAMC,EAAOh/B,EAC9Bi/B,EAIJH,IAFAD,GAAOhlC,EAAI,GAAO+M,KAAK+Z,IAET1c,GAAKpK,EAAI,SAAWoK,GAC9BA,EAAI,IAEJ66B,EAAO,GAEXG,EAAO,EACP,GACIL,GAAKC,EAAMC,GAAQ,EAEnBC,EAAO,EAAM,KADb7lC,EAAI0N,KAAK0Y,KAAKsf,EAAIA,EAAI36B,EAAIA,EAAI,IACN/K,GACpB0N,KAAKsJ,IAAI6uB,GAAQ,GACjBxrB,QAAQpD,IAAI,6CAA+C4uB,EACzC,IAAM7lC,IAI5B8G,GAFAg/B,EAAQp4B,KAAKs4B,KAAKH,KAELllC,EAAI,GAAK,EADhB+M,KAAKs4B,KAAKN,EAAI1lC,GACY,EAAI0N,KAAK+Z,IACjC,EACJme,EAAOF,EAGPC,EAAMD,QAELh4B,KAAKsJ,IAAIlQ,GAAK,QAAYi/B,EAAOhkC,KAAK2nB,SAC3Cqc,GAAQhkC,KAAK2nB,UACTuc,wBACA5rB,QAAQpD,IAAI,2CACZgvB,uBAAwB,GAE5BP,EAAI,EACJI,EAAQ,GAEZ/jC,KAAKsoB,GAAKqb,EACV3jC,KAAKqoB,SAAW0b,GAGpBtc,EAAO1oB,UAAUwjC,gBAAkB,SAAyB1E,GACxD,IAAIzgC,EAAGiD,EAAOC,EAAKnD,EAAGgqB,EAClB2W,EAiBJ,IAfAA,EAAKD,EAAG58B,YACR7D,EAAI,EACAygC,EAAG18B,YAAc28B,EAAG75B,aACpB5D,EAAQy9B,EAAG75B,YACX3D,EAAMw9B,EAAG15B,YAGT/D,EAAQy9B,EAAGv5B,YACXjE,EAAMw9B,EAAGp5B,YAET1E,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OAASvD,KAAK0nB,KAAO,KACxC1nB,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAASvD,KAAK0nB,KAAO,MACpDpP,QAAQpD,IACA,kEAEP/X,EAAIkD,EAAQ,EAAGlD,GAAKmD,EAAKnD,IAC1BC,IACA4C,KAAK4nB,MAAMzqB,GAAGqG,KACNxD,KAAK4nB,MAAMiW,EAAG18B,YAAYoC,OAASvD,KAAKuoB,aAAenrB,EAC7CygC,EAAGt8B,WACrBvB,KAAK4nB,MAAMzqB,GAAGuG,KACN1D,KAAK4nB,MAAMiW,EAAG18B,YAAYsC,OAASzD,KAAKuoB,aAAenrB,EAC7CygC,EAAGp8B,WACrB0lB,EAAOnnB,KAAK4nB,MAAMzqB,GAAGkqB,UACrBrnB,KAAK4nB,MAAMT,GAAM3jB,KACTxD,KAAK4nB,MAAMiW,EAAGx8B,UAAUkC,OAASvD,KAAKuoB,aAAenrB,EAC3CygC,EAAGt8B,WACrBvB,KAAK4nB,MAAMT,GAAMzjB,KACT1D,KAAK4nB,MAAMiW,EAAGx8B,UAAUoC,OAASzD,KAAKuoB,aAAenrB,EAC3CygC,EAAGp8B,YAK7BgmB,EAAO1oB,UAAUykC,MAAQ,SAAezO,EAAIE,GACxC,OAASF,EAAOE,EAAQF,EAAOE,GAGnCxN,EAAO1oB,UAAU0kC,MAAQ,SAAe1O,EAAIE,GACxC,OAASF,EAAOE,EAAQF,EAAOE,GAGnCxN,EAAO1oB,UAAUojC,qBAAuB,SAA8BtE,EAAIkB,GACtE,QAAIlB,EAAGh8B,cAGEg8B,EAAGx8B,SAAW,GAAK09B,EAAO59B,YI9jCvClE,EAAAQ,EAAAmC,EAAA,mCAAA6oB,IAAAxrB,EAAAQ,EAAAmC,EAAA,4BAAAg6B,IAAA38B,EAAAQ,EAAAmC,EAAA,+BAAAo9B","file":"fornac.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fornac\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"fornac\"] = factory(root[\"d3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","// extracted by extract-css-chunks-webpack-plugin\nmodule.exports = {\"node\":\"fornac-node\",\"plot\":\"fornac-plot\",\"selectedNode\":\"fornac-selectedNode\",\"nodeLabel\":\"fornac-nodeLabel\",\"link\":\"fornac-link\",\"plotLabel\":\"fornac-plotLabel\",\"transparent\":\"fornac-transparent\",\"dragLine\":\"fornac-dragLine\",\"brush\":\"fornac-brush\"};\n    if(module.hot) {\n      // 1558640956705\n      var cssReload = require(\"/home/jango/Git/fornac/node_modules/extract-css-chunks-webpack-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hot\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = require('./slugid');\n","import {Loop} from './loop.js';\nimport {Region} from './region.js';\n\nexport function Connection() {\n\tthis.loop = new Loop();\n\tthis.region = new Region();\n\t// Start and end form the 1st base pair of the region.\n\tthis.start = null;\n    this.end = null;\n\tthis.xrad = null;\n    this.yrad = null;\n    this.angle = null;\n\t// True if segment between this connection and the\n\t// next must be extruded out of the circle\n\tthis.extruded = null;\n\t// True if the extruded segment must be drawn long.\n\tthis.broken = null;\n\n\tthis._isNull = false;\n}\n\nConnection.prototype.isNull = function(){\n\treturn this._isNull;\n}\n\nConnection.prototype.setNull = function(isNull){\n\tthis._isNull = isNull;\n}\n\nConnection.prototype.getLoop = function(){\n\treturn this.loop;\n}\n\nConnection.prototype.setLoop = function(loop) {\n\tthis.loop = loop;\n}\n\nConnection.prototype.getRegion = function(){\n\treturn this.region;\n}\n\nConnection.prototype.setRegion = function(region){\n\tthis.region = region;\n}\n\nConnection.prototype.getStart = function(){\n\treturn this.start;\n}\n\nConnection.prototype.setStart = function(start) {\n\tthis.start = start;\n}\n\nConnection.prototype.getEnd = function(){\n\treturn this.end;\n}\n\nConnection.prototype.setEnd = function(end){\n\tthis.end = end;\n}\n\nConnection.prototype.getXrad = function(){\n\treturn this.xrad;\n}\n\nConnection.prototype.setXrad = function(xrad){\n\tthis.xrad = xrad;\n}\n\nConnection.prototype.getYrad = function(){\n\treturn this.yrad;\n}\n\nConnection.prototype.setYrad = function(yrad) {\n\tthis.yrad = yrad;\n}\n\nConnection.prototype.getAngle = function(){\n\treturn this.angle;\n}\n\nConnection.prototype.setAngle = function(angle){\n\tthis.angle = angle;\n}\n\nConnection.prototype.isExtruded = function(){\n\treturn this.extruded;\n}\n\nConnection.prototype.setExtruded = function(extruded){\n\tthis.extruded = extruded;\n}\n\nConnection.prototype.isBroken = function(){\n\treturn this.broken;\n}\n\nConnection.prototype.setBroken = function(broken){\n\tthis.broken = broken;\n}\n","import {Connection} from './connection.js';\n\nexport function Loop() {\n\tthis.nconnection = null;\n\tthis.connections = [];\n\tthis._connections = [];\n\tthis.number = null;\n\tthis.depth = null;\n\tthis.mark = null;\n\tthis.x = null;\n    this.y = null;\n    this.radius = null;\n}\n\nLoop.prototype.getNconnection = function() {\n\treturn this.nconnection;\n}\n\nLoop.prototype.setNconnection = function(nconnection) {\n\tthis.nconnection = nconnection;\n}\n\nLoop.prototype.setConnection = function(i, c){\n\tif (c != null){\n\t\tthis._connections[i] = c;\n    }\n\telse {\n\t\tif (!this._connections[i]){\n\t\t\tthis._connections[i] = new Connection();\n\t\t}\n\t\tthis._connections[i].setNull(true);\n\t}\n}\n\nLoop.prototype.getConnection = function(i){\n\tvar Connection = require(\"./connection\");\n\tif (!this._connections[i]){\n        this._connections[i] = new Connection();\n    }\n\tvar c = this._connections[i];\n\tif (c.isNull()){\n\t\treturn null;\n    }\n\telse {\n\t\treturn c;\n    }\n}\n\nLoop.prototype.addConnection = function(i, c){\n\tthis._connections.push(c);\n}\n\nLoop.prototype.getNumber = function(){\n\treturn this.number;\n}\n\nLoop.prototype.setNumber = function(number){\n\tthis.number = number;\n}\n\nLoop.prototype.getDepth = function(){\n\treturn this.depth;\n}\n\nLoop.prototype.setDepth = function(depth){\n\tthis.depth = depth;\n}\n\nLoop.prototype.isMark = function(){\n\treturn this.mark;\n}\n\nLoop.prototype.setMark = function(mark){\n\tthis.mark = mark;\n}\n\nLoop.prototype.getX = function(){\n\treturn this.x;\n}\n\nLoop.prototype.setX = function(x){\n\tthis.x = x;\n}\n\nLoop.prototype.getY = function(){\n\treturn this.y;\n}\n\nLoop.prototype.setY = function(y){\n\tthis.y = y;\n}\n\nLoop.prototype.getRadius = function(){\n\treturn this.radius;\n}\n\nLoop.prototype.setRadius = function(radius){\n\tthis.radius = radius;\n}\n","export function Region() {\n\tthis._start1 = null;\n    this._end1 = null;\n    this._start2 = null;\n    this._end2 = null;\n}\n\nRegion.prototype.getStart1 = function(){\n\treturn this._start1;\n}\n\nRegion.prototype.setStart1 = function(start1){\n\tthis._start1 = start1;\n}\n\nRegion.prototype.getEnd1 = function(){\n\treturn this._end1;\n}\n\nRegion.prototype.setEnd1 = function(end1){\n\tthis._end1 = end1;\n}\n\nRegion.prototype.getStart2 = function(){\n\treturn this._start2;\n}\n\nRegion.prototype.setStart2 = function(start2){\n\tthis._start2 = start2;\n}\n\nRegion.prototype.getEnd2 = function(){\n\treturn this._end2;\n}\n\nRegion.prototype.setEnd2 = function(end2){\n\tthis._end2 = end2;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = __webpack_public_path__ + \"fa9b45d63b40299e0188927ca7d381a3.svg\";","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar uuid = require('uuid');\n\n/**\n * Returns the given uuid as a 22 character slug. This can be a regular v4\n * slug or a \"nice\" slug.\n */\nexports.encode = function(uuid_) {\n  var bytes   = uuid.parse(uuid_);\n  var base64  = (new Buffer(bytes)).toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/**\n * Returns the uuid represented by the given v4 or \"nice\" slug\n */\nexports.decode = function(slug) {\n  var base64 = slug\n                  .replace(/-/g, '+')\n                  .replace(/_/g, '/')\n                  + '==';\n  return uuid.unparse(new Buffer(base64, 'base64'));\n};\n\n/**\n * Returns a randomly generated uuid v4 compliant slug\n */\nexports.v4 = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/** \n * Returns a randomly generated uuid v4 compliant slug which conforms to a set\n * of \"nice\" properties, at the cost of some entropy. Currently this means one\n * extra fixed bit (the first bit of the uuid is set to 0) which guarantees the\n * slug will begin with [A-Za-f]. For example such slugs don't require special\n * handling when used as command line parameters (whereas non-nice slugs may\n * start with `-` which can confuse command line tools).\n *\n * Potentially other \"nice\" properties may be added in future to further\n * restrict the range of potential uuids that may be generated.\n */\nexports.nice = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  bytes[0] = bytes[0] & 0x7f;  // unset first bit to ensure [A-Za-f] first char\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","import './d3-context-menu.css';\nimport ArrowIcon from './img/play.svg';\n\nimport d3 from 'd3';\nimport slugid from 'slugid';\n\nexport function contextMenu(menu, opts) {\n    let previouslyMouseUp = false;\n    let clickAway = () => {};\n    let uid = slugid.nice();\n    let rootElement = null;\n    let orientation = 'right';   // display the menu to the right of the mouse click\n                                 // or parent elemement\n    let initialPos = null;\n    let parentStart = null;\n\n    var openCallback,\n        closeCallback;\n\n    if (typeof opts === 'function') {\n        openCallback = opts;\n    } else {\n        opts = opts || {};\n        openCallback = opts.onOpen;\n        closeCallback = opts.onClose;\n    }\n\n    if ('rootElement' in opts)\n        rootElement = opts['rootElement']\n\n    if ('pos' in opts) {\n        // do we want to place this menu somewhere specific?\n        initialPos = opts.pos;\n    }\n\n    if ('orientation' in opts) {\n        orientation = opts.orientation;\n    }\n\n    if ('parentStart' in opts) {\n        parentStart = opts.parentStart;\n    }\n\n    // create the div element that will hold the context menu\n    d3.selectAll('.d3-context-menu-' + uid).data([1])\n        .enter()\n        .append('div')\n        .classed('d3-context-menu', true)\n        .classed('d3-context-menu-' + uid, true)\n\n    // close menu\n    d3.select('body').on('click.d3-context-menu-' + uid, function() {\n        if (previouslyMouseUp) {\n            previouslyMouseUp = false;\n            return;\n        }\n       console.log('body click close');\n\n        d3.select('.d3-context-menu-' + uid).style('display', 'none');\n       orientation = 'right';\n\n        if (closeCallback) {\n            closeCallback();\n        }\n    });\n\n    // this gets executed when a contextmenu event occurs\n    return function(data, index, pMouseUp=false,\n                    clickAwayFunc = function() { } ) {\n        var elm = this;\n        var contextMenuPos = null;\n        let mousePos = null;\n        let currentThis = this;\n\n        if (rootElement == null)\n            mousePos = d3.mouse(this);\n        else\n            mousePos = d3.mouse(rootElement); // for recursive menus, we need the mouse\n                                              // position relative to another element\n\n        clickAway = clickAwayFunc;\n        let openChildMenuUid = null;\n\n        previouslyMouseUp = pMouseUp;\n\n        d3.selectAll('.d3-context-menu-' + uid).html('');\n        var list = d3.selectAll('.d3-context-menu-' + uid)\n            .on('contextmenu', function(d) {\n                console.log('context-menu close');\n                d3.select('.d3-context-menu-' + uid).style('display', 'none'); \n                orientation = 'right';\n\n                d3.event.preventDefault();\n                d3.event.stopPropagation();\n            })\n            .append('ul');\n\n        list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n            .append('li')\n            .attr('class', function(d) {\n                console.log('d:', d);\n                var ret = '';\n                if (d.divider) {\n                    ret += ' is-divider';\n                }\n                if (d.disabled) {\n                    ret += ' is-disabled';\n                }\n                if (!d.action) {\n                    ret += ' is-header';\n                }\n                if ('children' in d) {\n                    ret += ' d3-context-menu-recursive';\n                }\n                return ret;\n            })\n            .html(function(d) {\n                if (d.divider) {\n                    return '<hr>';\n                }\n                if (!d.title) {\n                    console.error('No title attribute set. Check the spelling of your options.');\n                }\n                return (typeof d.title === 'string') ? d.title : d.title(data);\n            })\n            .on('click', function(d, i) {\n                if (d.disabled) return; // do nothing if disabled\n                if (!d.action) return; // headers have no \"action\"\n                d.action(elm, data, index, mousePos);\n                console.log('click close');\n\n                // close all context menus\n                d3.selectAll('.d3-context-menu').style('display', 'none');\n                orientation = 'right';\n\n                if (closeCallback) {\n                    closeCallback();\n                }\n            })\n            .on('mouseenter', function(d, i) {\n                d3.select(this)\n                    .classed('d3-context-menu-selected', true)\n\n                if (openChildMenuUid != null) {\n                    // there's a child menu open\n\n                    // unselect all items\n                    d3.select('.d3-context-menu-' + uid)\n                        .selectAll('li')\n                        .classed('d3-context-menu-selected', false);\n\n                    if (typeof d.children == 'undefined') {\n                        console.log(\"no children close\");\n                        // no children, so hide any open child menus\n                        d3.select('.d3-context-menu-' + openChildMenuUid)\n                        .style('display', 'none');\n\n                        openChildMenuUid = null;\n                        return;\n                    }\n\n                    if (d.childUid == openChildMenuUid) {\n                        // the correct child menu is already open\n                        return;\n\n                    } else {\n                        // need to open a different child menu\n                        console.log('open different child menu close');\n                        \n                        // close the already open one\n                        d3.select('.d3-context-menu-' + openChildMenuUid)\n                        .style('display', 'none');\n\n                        openChildMenuUid = null;\n\n                    }\n                }             \n\n                // there should be no menu open right now\n                if (typeof d.children != 'undefined') {\n                    let boundingRect = this.getBoundingClientRect();\n\n                    let childrenContextMenu = null\n                    if (orientation == 'left') {\n                        childrenContextMenu = contextMenu(d.children, {'rootElement': currentThis,\n                              'pos': [ boundingRect.left + window.pageXOffset,\n                                    boundingRect.top - 2 + window.pageYOffset],\n                        'orientation': 'left'});\n                    } else {\n                        childrenContextMenu = contextMenu(d.children, \n                                      {\n                                          'pos': [ boundingRect.left + boundingRect.width + window.pageXOffset,\n                                                boundingRect.top - 2 + window.pageYOffset],\n                                       'rootElement': currentThis,\n                                    'parentStart': [boundingRect.left + window.pageXOffset,\n                                      boundingRect.top - 2 + window.pageYOffset]});\n                    }\n\n                    d.childUid = childrenContextMenu.apply(this, [data,i,true,\n                                                           function() { }]);\n                    openChildMenuUid = d.childUid;\n                }\n\n\n                d3.select(this)\n                    .classed('d3-context-menu-selected', true)\n            \n            })\n            .on('mouseleave', function(d, i) {\n\n                if (openChildMenuUid == null) {\n                    d3.select(this)\n                        .classed('d3-context-menu-selected', false);\n                }\n            });\n\n            list.selectAll('.d3-context-menu-recursive')\n            .append('img')\n            .attr('src', ArrowIcon)\n            .attr('width', '14px')\n            .attr('height', '14px')\n            .style('position', 'absolute')\n            .style('right', '5px')\n            ;\n\n        // the openCallback allows an action to fire before the menu is displayed\n        // an example usage would be closing a tooltip\n        if (openCallback) {\n            if (openCallback(data, index) === false) {\n                return uid;\n            }\n        }\n\n        let contextMenuSelection = d3.select('.d3-context-menu-' + uid)\n            .style('display', 'block');\n\n        if (initialPos == null) {\n            d3.select('.d3-context-menu-' + uid)\n            .style('left', (d3.event.pageX - 2) + 'px')\n            .style('top', (d3.event.pageY - 2) + 'px')\n        } else {\n            d3.select('.d3-context-menu-' + uid)\n            .style('left', initialPos[0] + 'px')\n            .style('top', initialPos[1] + 'px')\n        }\n\n        // check if the menu disappears off the side of the window\n        let boundingRect = contextMenuSelection.node().getBoundingClientRect();\n\n        if (boundingRect.left + boundingRect.width > window.innerWidth || orientation == 'left') {\n            orientation = 'left';\n\n            // menu goes of the end of the window, position it the other way\n            if (initialPos == null) {\n                // place the menu where the user clicked\n                d3.select('.d3-context-menu-' + uid)\n                .style('left', (d3.event.pageX - 2 - boundingRect.width) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n            } else {\n                if (parentStart != null) {\n                    d3.select('.d3-context-menu-' + uid)\n                    .style('left', (parentStart[0] - boundingRect.width) + 'px')\n                    .style('top', parentStart[1] + 'px')\n                } else {\n                    d3.select('.d3-context-menu-' + uid)\n                    .style('left', (initialPos[0] - boundingRect.width) + 'px')\n                    .style('top', initialPos[1] + 'px')\n                }\n            }\n            \n        }\n\n        // display context menu\n\n        if (previouslyMouseUp)\n            return uid;\n\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        //d3.event.stopImmediatePropagation();\n        //\n        return uid;\n    };\n};\n","var numberSort = function(a,b) { return a - b; };\n\nexport function arraysEqual(a, b) {\n    // courtesy of \n    // http://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript\n  if (a === b) return true;\n  if (a === null || b === null) return false;\n  if (a.length != b.length) return false;\n\n  // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function RNAUtilities() {\n    var self = this;\n\n    // the brackets to use when constructing dotbracket strings\n    // with pseudoknots\n    self.bracketLeft =  \"([{<ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    self.bracketRight = \")]}>abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n    self.inverseBrackets = function(bracket) {\n        var res = {};\n        for (var i = 0; i < bracket.length; i++) {\n            res[bracket[i]] = i;\n        }\n        return res;\n    };\n\n    self.maximumMatching = function maximumMatching(pt){\n        // Courtesy of the great Ronny Lorenz\n\n        var n = pt[0];\n        var TURN = 0;    //minimal number of nucleotides in the hairpin\n\n        /* array init */\n        var mm = new Array(n + 1);\n        for(var i = 0; i <= n; i++){\n            mm[i] = new Array(n + 1);\n            for(var j = i; j <= n; j++)\n            mm[i][j] = 0;\n        }\n        var maximum = 0;\n\n        /* actual computation */\n        for(var i = n - TURN - 1; i > 0; i--)\n\n        for(var j = i + TURN + 1; j <= n; j++){\n            maximum = mm[i][j-1];\n\n            for(var l = j - TURN - 1; l >= i; l--) {\n                if(pt[l] === j) {\n\n                    // we have a base pair here\n                    maximum = Math.max(maximum, ((l > i) ? mm[i][l-1] : 0) + 1 + ((j - l - 1 > 0) ? mm[l+1][j-1] : 0));\n                }\n            }\n\n            mm[i][j] = maximum;\n        }\n\n        maximum = mm[1][n];\n\n        return mm;\n    };\n\n    self.backtrackMaximumMatching = function(mm, oldPt) {\n      var pt = Array.apply(null, \n                           Array(mm.length)).map(function() { return 0 }); \n                           //create an array containing zeros\n\n      self.mmBt(mm, pt, oldPt, 1, mm.length-1);\n      return pt;\n    }\n\n    self.mmBt = function(mm, pt, oldPt, i, j){\n        // Create a pairtable from the backtracking\n      var maximum = mm[i][j];\n      var TURN = 0;\n\n      if(j - i - 1 < TURN) return;    /* no more pairs */\n\n      if(mm[i][j-1] == maximum){      /* j is unpaired */\n        self.mmBt(mm, pt, oldPt, i, j-1);\n        return;\n      }\n\n      for(var q = j - TURN - 1; q >= i; q--){  /* j is paired with some q */\n        if (oldPt[j] !== q)\n            continue;\n\n        var leftPart     = (q > i) ? mm[i][q-1] : 0;\n        var enclosedPart = (j - q - 1 > 0) ? mm[q+1][j-1] : 0;\n\n        if(leftPart + enclosedPart + 1 == maximum) {\n            // there's a base pair between j and q\n            pt[q] = j;\n            pt[j] = q;\n\n            if(i < q) \n                self.mmBt(mm, pt, oldPt, i, q - 1);\n\n            self.mmBt(mm, pt, oldPt, q + 1, j - 1);\n            return;\n        }\n      }\n\n      //alert(i + \",\" + j + \": backtracking failed!\");\n      console.log('FAILED!!!' + i + ',' + j + ': backtracking failed!');\n\n    };\n\n    self.dotbracketToPairtable = function(dotbracket) {\n        // create an array and initialize it to 0\n        var pt = Array.apply(null, new Array(dotbracket.length + 1)).map(Number.prototype.valueOf,0);\n        \n        //  the first element is always the length of the RNA molecule\n        pt[0] = dotbracket.length;\n\n        // store the pairing partners for each symbol\n        var stack = {};\n        for (var i = 0; i < self.bracketLeft.length; i++) {\n            stack[i] = [];\n        }\n\n        // lookup the index of each symbol in the bracket array\n        var inverseBracketLeft = self.inverseBrackets(self.bracketLeft);\n        var inverseBracketRight = self.inverseBrackets(self.bracketRight);\n\n        for (var i = 0; i < dotbracket.length; i++) {\n            var a = dotbracket[i];\n            var ni = i + 1;\n\n            if (a == '.' || a == 'o') {\n                // unpaired\n                pt[ni] = 0;\n            } else {\n                if (a in inverseBracketLeft) {\n                    // open pair?\n                    stack[inverseBracketLeft[a]].push(ni);\n                } else if (a in inverseBracketRight){\n                    // close pair?\n                    var j = stack[inverseBracketRight[a]].pop();\n\n                    pt[ni] = j;\n                    pt[j] = ni;\n                } else {\n                    throw \"Unknown symbol in dotbracket string\";\n                }\n            }\n        }\n\n        for (var key in stack) {\n            if (stack[key].length > 0) {\n                throw \"Unmatched base at position \" + stack[key][0];\n            }\n        }\n\n        return pt;\n    };\n\n    self.insertIntoStack = function(stack, i, j) {\n        var k = 0;\n        while (stack[k].length > 0 && stack[k][stack[k].length - 1] < j) {\n            k += 1;\n        }\n\n        stack[k].push(j);\n        return k;\n    };\n\n    self.deleteFromStack = function(stack, j) {\n        var k = 0;\n        while (stack[k].length === 0 || stack[k][stack[k].length-1] != j) {\n            k += 1;\n        }\n        stack[k].pop();\n        return k;\n    };\n\n    self.pairtableToDotbracket = function(pt) {\n        // store the pairing partners for each symbol\n        var stack = {};\n        for (var i = 0; i < pt[0]; i++) {\n            stack[i] = [];\n        }\n\n        var seen = {};\n        var res = \"\";\n        var i;\n        for (var i = 1; i < pt[0] + 1; i++) {\n            if (pt[i] !== 0 && pt[i] in seen) {\n                throw \"Invalid pairtable contains duplicate entries\";\n            }\n            seen[pt[i]] = true;\n\n            if (pt[i] === 0) {\n                res += '.';\n            } else {\n                if (pt[i] > i) {\n                    res += self.bracketLeft[self.insertIntoStack(stack, i, pt[i])];\n                } else {\n                    res += self.bracketRight[self.deleteFromStack(stack, i)];\n                }\n            }\n        }\n\n        return res;\n    };\n\n    self.findUnmatched = function(pt, from, to) {\n        /*\n         * Find unmatched nucleotides in this molecule.\n         */\n        var toRemove = [];\n        var unmatched = [];\n\n        var origFrom = from;\n        var origTo = to;\n        var i;\n\n        for (var i = from; i <= to; i++)\n            if (pt[i] !== 0 && (pt[i] < from || pt[i] > to))\n                unmatched.push([i,pt[i]]);\n\n        for (var i = origFrom; i <= origTo; i++) {\n            while (pt[i] === 0 && i <= origTo) i++;\n\n            to = pt[i];\n\n            while (pt[i] === to) {\n                i++;\n                to--;\n            }\n            \n            toRemove = toRemove.concat(self.findUnmatched(pt, i, to));\n        }\n\n        if (unmatched.length > 0)\n            toRemove.push(unmatched);\n\n        return toRemove;\n    };\n\n    self.removePseudoknotsFromPairtable = function(pt) {\n        /* Remove the pseudoknots from this structure in such a fashion\n         * that the least amount of base-pairs need to be broken\n         *\n         * The pairtable is manipulated in place and a list of tuples\n         * indicating the broken base pairs is returned.\n         */\n\n        var mm = self.maximumMatching(pt);\n        var newPt = self.backtrackMaximumMatching(mm, pt);\n        var removed = [];\n\n        for (var i = 1; i < pt.length; i++) {\n            if (pt[i] < i)\n                continue;\n\n            if (newPt[i] != pt[i])  {\n                removed.push([i, pt[i]]);\n                pt[pt[i]] = 0;\n                pt[i] = 0;\n            }\n        }\n\n        return removed;\n    };\n\n    self.ptToElements = function(pt, level, i, j, dotBracketBreaks) {\n        /* Convert a pair table to a list of secondary structure \n         * elements:\n         *\n         * [['s',1,[2,3]]\n         *\n         * The 's' indicates that an element can be a stem. It can also be\n         * an interior loop ('i'), a hairpin loop ('h') or a multiloop ('m')\n         *\n         * The second number (1 in this case) indicates the depth or\n         * how many base pairs have to be broken to get to this element.\n         *\n         * Finally, there is the list of nucleotides which are part of\n         * of this element.\n         */\n        var elements = [];\n        var u5 = [i-1];\n        var u3 = [j+1];\n\n        if (arguments.length < 5)\n            dotBracketBreaks = [];\n\n        if (i > j)\n            return [];\n            \n            //iterate over the unpaired regions on either side\n            //this is either 5' and 3' unpaired if level == 0\n            //or an interior loop or a multiloop\n            for (; pt[i] === 0; i++) { u5.push(i); }\n            for (; pt[j] === 0; j--) { u3.push(j); }\n\n            if (i > j) {\n                //hairpin loop or one large unpaired molecule\n                u5.push(i);\n                if (level === 0)\n                    return [['e',level, u5.sort(numberSort)]];\n                else {\n                    // check to see if we have chain breaks due\n                    // to multiple strands in the input\n                    var external = false;\n                    var left = [];\n                    var right = [];\n                    for (var k = 0; k < u5.length; k++) {\n                        if (external)\n                            right.push(u5[k]);\n                        else\n                            left.push(u5[k]);\n\n                        if (dotBracketBreaks.indexOf(u5[k]) >= 0)\n                            external = true;\n                    }\n\n                    if (external) {\n                        return [['h',level, u5.sort(numberSort)]];\n                    }\n                    else\n                        // if not, this is a simple hairpin loop\n                        return [['h',level, u5.sort(numberSort)]];\n                }\n            }\n\n            if (pt[i] != j) {\n                //multiloop\n                var m = u5;\n                var k = i;\n\n                // the nucleotide before and the starting nucleotide\n                m.push(k);\n                while (k <= j) {\n                    // recurse into a stem\n                    elements = elements.concat(self.ptToElements(pt, level, k, pt[k], dotBracketBreaks));\n\n                    // add the nucleotides between stems\n                    m.push(pt[k]);\n                    k = pt[k] + 1;\n                    for (; pt[k] === 0 && k <= j; k++) { m.push(k);}\n                    m.push(k);\n                }\n                m.pop();\n                m = m.concat(u3);\n                \n                if (m.length > 0) {\n                    if (level === 0)\n                        elements.push(['e', level, m.sort(numberSort)]);\n                    else\n                        elements.push(['m', level, m.sort(numberSort)]);\n                }\n                \n                return elements;\n            }\n\n            if (pt[i] === j) {\n                //interior loop\n                u5.push(i);\n                u3.push(j);\n\n                var combined = u5.concat(u3);\n                if (combined.length > 4) {\n                    if (level === 0)\n                        elements.push(['e',level, u5.concat(u3).sort(numberSort)]);\n                    else\n                        elements.push(['i',level, u5.concat(u3).sort(numberSort)]);\n                }\n            } \n\n            var s = [];\n            //go through the stem\n            while (pt[i] === j && i < j) {\n                //one stem\n                s.push(i);\n                s.push(j);\n\n                i += 1;\n                j -= 1;\n\n                level += 1;\n            }\n\n            u5 = [i-1];\n            u3 = [j+1];\n            elements.push(['s', level, s.sort(numberSort)]);\n\n        return elements.concat(self.ptToElements(pt, level, i, j, dotBracketBreaks));\n    };\n\n}\n\nexport var rnaUtilities = new RNAUtilities();\n\nexport function ColorScheme(colorsText) {\n    var self = this;\n    self.colorsText = colorsText;\n\n    self.parseRange = function(rangeText) {\n        //parse a number range such as 1-10 or 3,7,9 or just 7\n        var parts = rangeText.split(',')\n        var nums = [];\n\n        for (var i = 0; i < parts.length; i++) {\n            //could be 1 or 10-11  or something like that\n            var parts1 = parts[i].split('-');\n\n            if (parts1.length == 1)\n                nums.push(parseInt(parts1[0]));\n            else if (parts1.length == 2) {\n                var from = parseInt(parts1[0]);\n                var to = parseInt(parts1[1]);\n\n                // add each number in this range\n                for (var j = from; j <= to; j++) \n                    nums.push(j)\n            } else {\n                console.log('Malformed range (too many dashes):', rangeText);\n            }\n        }\n\n        return nums;\n    }\n\n    self.parseColorText = function(colorText) {\n        /* Parse the text of an RNA color string. Instructions and description\n         * of the format are given below.\n         *\n         * The return is a json double dictionary indexed first by the \n         * molecule name, then by the nucleotide. This is then applied\n         * by force.js to the RNAs it is displaying. When no molecule\n         * name is specified, the color is applied to all molecules*/\n        var lines = colorText.split('\\n');\n        var currMolecule = '';\n        var counter = 1;\n        var colorsJson = {colorValues: {'':{}}, range:['white', 'steelblue']};\n        var domainValues = [];\n\n\n        for (var i = 0; i < lines.length; i++) {\n\n            if (lines[i][0] == '>') {\n                // new molecule\n                currMolecule = lines[i].trim().slice(1);\n                counter = 1;\n\n                colorsJson.colorValues[currMolecule] = {};\n                continue;\n            }\n\n            let words = lines[i].trim().split(/[\\s]+/);\n\n            for (var j = 0; j < words.length; j++) {\n                if (isNaN(words[j])) {\n                    if (words[j].search('range') === 0) {\n                        //there's a color scale in this entry\n                        let parts = words[j].split('=');\n                        let partsRight = parts[1].split(':')\n                        colorsJson.range = [partsRight[0], partsRight[1]];\n                        continue;\n                    }\n\n                    if (words[j].search('domain') == 0) {\n                        //there's a color scale in this entry\n                        let parts = words[j].split('=');\n                        let partsRight = parts[1].split(':')\n                        colorsJson.domain = [partsRight[0], partsRight[1]];\n                        continue;\n                    }\n\n                    // it's not a number, should be a combination \n                    // of a number (nucleotide #) and a color\n                    let parts = words[j].split(':');\n                    let nums = self.parseRange(parts[0]);\n                    let color = parts[1]\n\n                    for (var k = 0; k < nums.length; k++) {\n                        if (isNaN(color)) {\n                            colorsJson.colorValues[currMolecule][nums[k]] = color;\n                        } else {\n                            colorsJson.colorValues[currMolecule][nums[k]] = +color;\n                            domainValues.push(Number(color));\n                        }\n                    }\n                } else {\n                    //it's a number, so we add it to the list of values\n                    //seen for this molecule\n                    colorsJson.colorValues[currMolecule][counter] = Number(words[j]);\n                    counter += 1;\n\n                    domainValues.push(Number(words[j]));\n                }\n            }\n        }\n\n        if (!('domain' in colorsJson))\n            colorsJson.domain = [Math.min.apply(null, domainValues), Math.max.apply(null, domainValues)];\n\n        self.colorsJson = colorsJson;\n\n        return self;\n    };\n\n    self.normalizeColors = function() {\n        /* \n         * Normalize the passed in values so that they range from\n         * 0 to 1\n         */\n        var value;\n\n        for (var moleculeName in self.colorsJson) {\n            var minNum = Number.MAX_VALUE;\n            var maxNum = Number.MIN_VALUE;\n\n            // iterate once to find the min and max values;\n            for (var resnum in self.colorsJson.colorValues[moleculeName]) {\n                value = self.colorsJson.colorValues[moleculeName][resnum];\n                if (typeof value == 'number') {\n                    if (value < minNum)\n                        minNum = value;\n                    if (value > maxNum)\n                        maxNum = value;\n                }\n            }\n\n            // iterate again to normalize\n            for (resnum in self.colorsJson.colorValues[moleculeName]) {\n                value = self.colorsJson.colorValues[moleculeName][resnum];\n                if (typeof value == 'number') {\n                    self.colorsJson.colorValues[moleculeName][resnum] = (value - minNum ) / (maxNum - minNum);\n                }\n            }\n        }\n\n        return self;\n    };\n\n    self.parseColorText(self.colorsText);\n    return self;\n}\n","import {arraysEqual,RNAUtilities,rnaUtilities} from './rnautils.js';\nimport slugid from 'slugid';\n\nvar numberSort = function(a,b) { return a - b; };\n\nif (typeof(String.prototype.trim) === 'undefined') {\n    String.prototype.trim = function() {\n        return String(this).replace(/^\\s+|\\s+$/g, '');\n    };\n}\n\nexport function ProteinGraph(structName, size, uid) {\n    var self = this;\n\n    self.type = 'protein';\n    self.size = size;\n    self.nodes = [{'name': 'P',\n                   'num': 1,\n                   'radius': 3 *  Math.sqrt(size),\n                   'rna': self,\n                   'nodeType': 'protein',\n                   'structName': structName,\n                   'elemType': 'p',\n                   'size': size,\n                   'uid': slugid.nice()}];\n\n    self.links = [];\n    self.uid = slugid.nice();\n\n    self.addUids = function(uids) {\n        for (let i = 0; i < uids.length; i++)\n            self.nodes[i].uid = uids[i];\n\n        return self;\n    };\n\n    self.getUids = function() {\n        /* Get the positions of each node so that they\n         * can be passed to elementsToJson later\n         */\n        uids = [];\n        for (let i = 0; i < self.dotbracket.length; i++)\n            uids.push(self.nodes[i].uid);\n\n        return uids;\n    };\n\n}\n\nexport function RNAGraph(seq = '', dotbracket = '', structName = '', startNumber = 1) {\n    var self = this;\n\n    self.type = 'rna';\n    self.circularizeExternal = false;\n    self.seq = seq;\n    self.dotbracket = dotbracket;  //i.e. ..((..))..\n    self.structName = structName;\n    self.circular = false;\n\n    if (self.dotbracket.slice(-1) == '*') {\n        //circular RNA\n        self.dotbracket = self.dotbracket.slice(0, -1);\n        self.circular = true;\n    }\n\n    self.uid = slugid.nice();\n\n    self.elements = [];            //store the elements and the\n                                   //nucleotides they contain\n    self.pseudoknotPairs = [];\n    self.nucsToNodes = {};\n\n    self.addUids = function(uids) {\n        let nucleotideNodes = self.nodes.filter(function(d) { return d.nodeType == 'nucleotide'; });\n\n        for (let i = 0; i < uids.length && i < nucleotideNodes.length; i++) {\n            nucleotideNodes[i].uid = uids[i];\n        }\n\n        return self;\n    };\n\n    self.computePairtable = function() {\n        self.pairtable = rnaUtilities.dotbracketToPairtable(self.dotbracket);\n    };\n\n    self.removeBreaks = function(targetString) {\n        // Remove all chain breaks (denoted with a '&', which indicate\n        // that the input represents more than one strand)\n        var breaks = [];\n        var breakIndex = -1;\n\n        while ((breakIndex = targetString.indexOf('&')) >= 0) {\n            breaks.push(breakIndex);\n            targetString = targetString.substring(0, breakIndex) + targetString.substring(breakIndex+1, targetString.length);\n\n        }\n\n        return {targetString: targetString,  breaks: breaks};\n    };\n\n    var ret = self.removeBreaks(self.dotbracket);\n    self.dotbracket = ret.targetString;\n    self.dotBracketBreaks = ret.breaks;\n\n    ret = self.removeBreaks(self.seq);\n    self.seq = ret.targetString;\n    self.seqBreaks = ret.breaks;\n\n    self.rnaLength = self.dotbracket.length;\n\n    if (!arraysEqual(self.dotBracketBreaks, self.seqBreaks)) {\n        console.log('WARNING: Sequence and structure breaks not equal');\n        console.log('WARNING: Using the breaks in the structure');\n    }\n\n    self.computePairtable();\n\n    self.addPositions = function(nodeType, positions) {\n        let labelNodes = self.nodes.filter(function(d) { return d.nodeType == nodeType; });\n\n        for  (let i = 0; i < labelNodes.length; i++) {\n            labelNodes[i].x = positions[i][0];\n            labelNodes[i].y = positions[i][1];\n        }\n\n        return self;\n    };\n\n    self.breakNodesToFakeNodes = function() {\n        // convert all the nodes following breaks to fake nodes\n        let labelNodes = self.nodes.filter(function(d) { return d.nodeType == 'nucleotide'; });\n\n        // if a node was an artifical break node, convert it to a middle\n        for (let i = 0; i < labelNodes.length; i++) {\n            if (self.dotBracketBreaks.indexOf(i) >= 0) {\n                labelNodes[i].nodeType = 'middle';\n                labelNodes[i+1].nodeType = 'middle';\n            }\n        }\n\n        for (let i = 0; i < self.elements.length; i++) {\n            var broken = false;\n\n            // change the elemType of the other nodes in the element containing\n            // the break\n            for (let j = 0; j < self.elements[i][2].length; j++) {\n                if (self.dotBracketBreaks.indexOf(self.elements[i][2][j]) >= 0)\n                    broken = true;\n            }\n\n            if (broken) {\n                self.elements[i][2].map(function(x) {\n                    if (x == 0)\n                        return;\n                    self.nodes[x-1].elemType = 'e';\n                });\n            } else {\n                self.elements[i][2].map(function(x) {\n                    if (x == 0)\n                        return;\n                    self.nodes[x-1].elemType = self.elements[i][0];\n                });\n            }\n        }\n        return self;\n    };\n\n    self.getPositions = function(nodeType) {\n        var positions = [];\n        let nucleotideNodes = self.nodes.filter(function(d) { return d.nodeType == nodeType; });\n\n        for (let i = 0; i < nucleotideNodes.length; i++)\n            positions.push([nucleotideNodes[i].x, nucleotideNodes[i].y]);\n\n        return positions;\n    };\n\n    self.getUids = function() {\n        /* Get the positions of each node so that they\n         * can be passed to elementsToJson later\n         */\n        var uids = [];\n        for (let i = 0; i < self.dotbracket.length; i++)\n            uids.push(self.nodes[i].uid);\n\n        return uids;\n    };\n\n    self.reinforceStems = function() {\n        var pt = self.pairtable;\n        let relevantElements = self.elements.filter( function(d) {\n            return d[0] == 's' && d[2].length >= 4;\n        });\n\n        for (let i = 0; i < relevantElements.length; i++) {\n            let allNucs = relevantElements[i][2];\n            let nucs = allNucs.slice(0, allNucs.length / 2);\n\n            for (let j = 0; j < nucs.length-1; j++) {\n                self.addFakeNode([nucs[j], nucs[j+1], pt[nucs[j+1]], pt[nucs[j]]]);\n            }\n        }\n\n        return self;\n    };\n\n    self.reinforceLoops = function() {\n        /*\n         * Add a set of fake nodes to enforce the structure\n         */\n        var filterNucs = function(d) {\n            return d !== 0 && d <= self.dotbracket.length;\n        };\n\n        for (let i = 0; i < self.elements.length; i++) {\n            if (self.elements[i][0] == 's' || (!self.circularizeExternal && self.elements[i][0] == 'e'))\n                continue;\n\n            var nucs = self.elements[i][2].filter(filterNucs);\n\n            if (self.elements[i][0] == 'e') {\n                var newNode1 = {'name': '',\n                    'num': -3,\n                    //'radius': 18 * radius -6,\n                    'radius': 0,\n                    'rna': self,\n                    'nodeType': 'middle',\n                    'elemType': 'f',\n                    'nucs': [],\n                    'x': self.nodes[self.rnaLength-1].x,\n                    'y': self.nodes[self.rnaLength-1].y,\n                    'px': self.nodes[self.rnaLength-1].px,\n                    'py': self.nodes[self.rnaLength-1].py,\n                    'uid': slugid.nice() };\n                var newNode2 = {'name': '',\n                    'num': -2,\n                    //'radius': 18 * radius -6,\n                    'radius': 0,\n                    'rna': self,\n                    'nodeType': 'middle',\n                    'elemType': 'f',\n                    'nucs': [],\n                    'x': self.nodes[0].x,\n                    'y': self.nodes[0].y,\n                    'px': self.nodes[0].px,\n                    'py': self.nodes[0].py,\n                    'uid': slugid.nice() };\n\n                    nucs.push(self.nodes.length+1);\n                    nucs.push(self.nodes.length+2);\n                    self.nodes.push(newNode1);\n                    self.nodes.push(newNode2);\n            }\n\n\n            self.addFakeNode(nucs);\n        }\n\n        return self;\n    };\n\n    self.updateLinkUids = function() {\n        for (let i = 0; i < self.links.length; i++) {\n            self.links[i].uid = self.links[i].source.uid + self.links[i].target.uid;\n        }\n\n        return self;\n    };\n\n    self.addFakeNode = function(nucs) {\n        var linkLength = 18; //make sure this is consistent with the value in force.js\n        var nodeWidth = 6;\n        var angle = (3.1415 * 2) / (2 * nucs.length);\n        var radius =  linkLength / (2 * Math.tan(angle));\n\n        var fakeNodeUid = '';\n\n        for (var i = 0; i < nucs.length; i++)\n            fakeNodeUid += self.nodes[nucs[i]-1].uid;\n\n        var newNode = {'name': '',\n                         'num': -1,\n                         //'radius': 18 * radius -6,\n                         'radius': radius,\n                         'rna': self,\n                         'nodeType': 'middle',\n                         'elemType': 'f',\n                         'nucs': nucs,\n                         'uid': fakeNodeUid };\n        self.nodes.push(newNode);\n\n        var newX = 0;\n        var newY = 0;\n        var coordsCounted = 0;\n\n        angle = (nucs.length - 2) * 3.14159 / (2 * nucs.length);\n        radius = 0.5 / Math.cos(angle);\n\n        for (var j = 0; j < nucs.length; j++) {\n            if (nucs[j] === 0 || nucs[j] > self.dotbracket.length)\n                continue;\n\n            //link to the center node\n            self.links.push({'source': self.nodes[nucs[j] - 1],\n                             'target': self.nodes[self.nodes.length-1],\n                             'linkType': 'fake',\n                             'value': radius,\n                             'uid': slugid.nice() });\n\n            if (nucs.length > 4) {\n                //link across the loop\n                self.links.push({'source': self.nodes[nucs[j] - 1],\n                                 'target': self.nodes[nucs[(j + Math.floor(nucs.length / 2)) % nucs.length] - 1],\n                                 'linkType': 'fake',\n                                 'value': radius * 2,\n                                 'uid': slugid.nice() });\n            }\n\n            var ia = ((nucs.length - 2) * 3.14159) / nucs.length;\n            var c = 2 * Math.cos(3.14159 / 2 - ia / 2);\n            //link to over-neighbor\n            self.links.push({'source': self.nodes[nucs[j] - 1],\n                             'target': self.nodes[nucs[(j + 2) % nucs.length] - 1],\n                             'linkType': 'fake',\n                             'value': c});\n\n            // calculate the mean of the coordinats in this loop\n            // and place the fake node there\n            var fromNode = self.nodes[nucs[j]-1];\n            if ('x' in fromNode) {\n                newX += fromNode.x;\n                newY += fromNode.y;\n\n                coordsCounted += 1;\n            }\n        }\n\n        if (coordsCounted > 0) {\n            // the nucleotides had set positions so we can calculate the position\n            // of the fake node\n            newNode.x = newX / coordsCounted;\n            newNode.y = newY / coordsCounted;\n            newNode.px = newNode.x;\n            newNode.py = newNode.y;\n        }\n\n        return self;\n    };\n\n    self.connectFakeNodes = function() {\n        var linkLength = 18;\n\n        // We want to be able to connect all of the fake nodes\n        // and create a structure consisting of just them\n        var filterOutNonFakeNodes = function(d) {\n            return d.nodeType == 'middle';\n        }\n\n        var nucsToNodes = {};\n        var fakeNodes = self.nodes.filter(filterOutNonFakeNodes);\n        var linked = {};\n\n        // initialize the nucleotides to nodes\n        for (var i = 1; i <= self.nodes.length; i++)\n            nucsToNodes[i] = [];\n\n        for (var i = 0; i < fakeNodes.length; i++) {\n            var thisNode = fakeNodes[i];\n\n            // each fake node represents a certain set of nucleotides (thisNode.nucs)\n            for (var j = 0; j < thisNode.nucs.length; j++) {\n                var thisNuc = thisNode.nucs[j];\n\n                // check to see if this nucleotide has been seen in another fake node\n                // if it has, then we add a link between the two nodes\n                for (var k = 0; k < nucsToNodes[thisNuc].length; k++) {\n                    if (JSON.stringify([nucsToNodes[thisNuc][k].uid, thisNode.uid].sort()) in linked)\n                        continue; //already linked\n\n                    var distance = nucsToNodes[thisNuc][k].radius + thisNode.radius;\n\n                    self.links.push({'source': nucsToNodes[thisNuc][k],\n                                      'target': thisNode,\n                                      'value': distance / linkLength,\n                                      'linkType': 'fake_fake'});\n\n                    // note that we've already seen this link\n                    linked[JSON.stringify([nucsToNodes[thisNuc][k].uid, thisNode.uid].sort())] = true;\n                }\n\n                nucsToNodes[thisNuc].push(thisNode);\n            }\n        }\n\n        return self;\n\n    };\n\n    self.addExtraLinks = function(extraLinks) {\n        if (typeof extraLinks == 'undefined')\n            return self;\n\n        for (var i = 0; i < extraLinks.length; i++) {\n            var source = self.getNodeFromNucleotides(extraLinks[i].from);\n            var target = self.getNodeFromNucleotides(extraLinks[i].to);\n\n            var newLink = {'source': source, 'target': target, 'linkType': 'extra',\n                'extraLinkType': extraLinks[i].linkType, 'uid': slugid.nice() };\n\n                self.links.push(newLink);\n        }\n\n        return self;\n    }\n\n\n    self.elementsToJson = function() {\n        /* Convert a set of secondary structure elements to a json\n         * representation of the graph that can be used with d3's\n         * force-directed layout to generate a visualization of\n         * the structure.\n         */\n        var pt = self.pairtable;\n        var elements = self.elements;\n\n        self.nodes = [];\n        self.links = [];\n\n        //create a reverse lookup so we can find out the type\n        //of element that a node is part of\n        var elemTypes = {};\n\n        //sort so that we count stems last\n        self.elements.sort();\n\n        for (let i = 0; i < self.elements.length; i++) {\n            var nucs = self.elements[i][2];\n            for (let j = 0; j < nucs.length; j++) {\n                elemTypes[nucs[j]] = self.elements[i][0];\n            }\n        }\n\n        for (let i = 1; i <= pt[0]; i++) {\n            var nodeName = self.seq[i-1];\n\n            if (self.dotBracketBreaks.indexOf(i-1) >= 0 ||\n                self.dotBracketBreaks.indexOf(i-2) >= 0) {\n                nodeName = '';\n            }\n\n            //create a node for each nucleotide\n            self.nodes.push({'name': nodeName,\n                             'num': startNumber + i - 1,\n                             'radius': 5,\n                             'rna': self,\n                             'nodeType': 'nucleotide',\n                             'structName': self.structName,\n                             'elemType': elemTypes[i],\n                             'uid': slugid.nice(),\n                             'linked': false});\n        }\n\n        for (let i = 0; i < self.nodes.length; i++) {\n            if (i === 0)\n                self.nodes[i].prevNode = null;\n            else {\n                self.nodes[i].prevNode = self.nodes[i-1];\n            }\n\n            if (i == self.nodes.length-1)\n                self.nodes[i].nextNode = null;\n            else {\n                self.nodes[i].nextNode = self.nodes[i+1];\n            }\n        }\n\n        for (let i = 1; i <= pt[0]; i++) {\n\n            if (pt[i] !== 0) {\n                // base-pair links\n                self.links.push({'source': self.nodes[i-1],\n                                 'target': self.nodes[pt[i]-1],\n                                 'linkType': 'basepair',\n                                 'value': 1,\n                                 'uid': slugid.nice() });\n            }\n\n            if (i > 1) {\n                // backbone links\n                if (self.dotBracketBreaks.indexOf(i-1) === -1 &&\n                    self.dotBracketBreaks.indexOf(i-2) == -1 &&\n                    self.dotBracketBreaks.indexOf(i-3) == -1) {\n                    // there is no break in the strands here\n                    // we can add a backbone link\n                    self.links.push({'source': self.nodes[i-2],\n                                    'target': self.nodes[i-1],\n                                    'linkType': 'backbone',\n                                    'value': 1,\n                                    'uid': slugid.nice() });\n                    self.nodes[i-1].linked = true;\n                }\n            }\n        }\n\n        //add the pseudoknot links\n        for (let i = 0; i < self.pseudoknotPairs.length; i++) {\n            self.links.push({'source': self.nodes[self.pseudoknotPairs[i][0]-1],\n                            'target': self.nodes[self.pseudoknotPairs[i][1]-1],\n                            'linkType': 'pseudoknot',\n                            'value': 1,\n                            'uid': slugid.nice()});\n        }\n\n        if (self.circular) {\n            self.links.push({'source': self.nodes[0],\n                            'target': self.nodes[self.rnaLength-1],\n                            'linkType': 'backbone',\n                            'value': 1,\n                            'uid': slugid.nice() });\n\n        }\n\n        return self;\n    };\n\n    self.ptToElements = function(pt, level, i, j) {\n        /* Convert a pair table to a list of secondary structure\n         * elements:\n         *\n         * [['s',1,[2,3]]\n         *\n         * The 's' indicates that an element can be a stem. It can also be\n         * an interior loop ('i'), a hairpin loop ('h') or a multiloop ('m')\n         *\n         * The second number (1 in this case) indicates the depth or\n         * how many base pairs have to be broken to get to this element.\n         *\n         * Finally, there is the list of nucleotides which are part of\n         * of this element.\n         */\n        var elements = [];\n        var u5 = [i-1];\n        var u3 = [j+1];\n\n        if (i > j)\n            return [];\n\n            //iterate over the unpaired regions on either side\n            //this is either 5' and 3' unpaired if level == 0\n            //or an interior loop or a multiloop\n            for (; pt[i] === 0; i++) { u5.push(i); }\n            for (; pt[j] === 0; j--) { u3.push(j); }\n\n            if (i > j) {\n                //hairpin loop or one large unpaired molecule\n                u5.push(i);\n                if (level === 0)\n                    return [['e',level, u5.sort(numberSort)]];\n                else {\n                    // check to see if we have chain breaks due\n                    // to multiple strands in the input\n                    var external = false;\n                    var left = [];\n                    var right = [];\n                    for (var k = 0; k < u5.length; k++) {\n                        if (external)\n                            right.push(u5[k]);\n                        else\n                            left.push(u5[k]);\n\n                        if (self.dotBracketBreaks.indexOf(u5[k]) >= 0)\n                            external = true;\n                    }\n\n                    if (external) {\n                        return [['h',level, u5.sort(numberSort)]];\n                    }\n                    else\n                        // if not, this is a simple hairpin loop\n                        return [['h',level, u5.sort(numberSort)]];\n                }\n            }\n\n            if (pt[i] != j) {\n                //multiloop\n                var m = u5;\n                var k = i;\n\n                // the nucleotide before and the starting nucleotide\n                m.push(k);\n                while (k <= j) {\n                    // recurse into a stem\n                    elements = elements.concat(self.ptToElements(pt, level, k, pt[k]));\n\n                    // add the nucleotides between stems\n                    m.push(pt[k]);\n                    k = pt[k] + 1;\n                    for (; pt[k] === 0 && k <= j; k++) { m.push(k);}\n                    m.push(k);\n                }\n                m.pop();\n                m = m.concat(u3);\n\n                if (m.length > 0) {\n                    if (level === 0)\n                        elements.push(['e', level, m.sort(numberSort)]);\n                    else\n                        elements.push(['m', level, m.sort(numberSort)]);\n                }\n\n                return elements;\n            }\n\n            if (pt[i] === j) {\n                //interior loop\n                u5.push(i);\n                u3.push(j);\n\n                var combined = u5.concat(u3);\n                if (combined.length > 4) {\n                    if (level === 0)\n                        elements.push(['e',level, u5.concat(u3).sort(numberSort)]);\n                    else\n                        elements.push(['i',level, u5.concat(u3).sort(numberSort)]);\n                }\n            }\n\n            var s = [];\n            //go through the stem\n            while (pt[i] === j && i < j) {\n                //one stem\n                s.push(i);\n                s.push(j);\n\n                i += 1;\n                j -= 1;\n\n                level += 1;\n            }\n\n            u5 = [i-1];\n            u3 = [j+1];\n            elements.push(['s', level, s.sort(numberSort)]);\n\n        return elements.concat(self.ptToElements(pt, level, i, j));\n    };\n\n    self.addLabels = function(startNumber = 1, labelInterval = 10) {\n        if (labelInterval === 0)\n            return self;\n\n        for (let i = 1; i <= self.rnaLength; i++) {\n            // add labels\n            if (i % labelInterval === 0) {\n                //create a node for each label\n                let newX, newY;\n\n                let thisNode = self.nodes[i-1];\n                let prevNode, nextNode;\n                let prevVec, nextVec;\n\n                if (self.rnaLength == 1) {\n                    nextVec = [thisNode.x - 15, thisNode.y];\n                    prevVec = [thisNode.x - 15, thisNode.y];\n                } else {\n                    // if we're labelling the first node, then label it in relation to the last\n                    if (i == 1)\n                        prevNode = self.nodes[self.rnaLength - 1];\n                    else\n                        prevNode = self.nodes[i - 2];\n\n                    // if we're labelling the last node, then label it in relation to the first\n                    if (i == self.rnaLength)\n                        nextNode = self.nodes[0];\n                    else\n                        nextNode = self.nodes[i];\n\n                    // this nucleotide and its neighbors are paired\n                    if (self.pairtable[nextNode.num - startNumber+1] !== 0 &&\n                        self.pairtable[prevNode.num - startNumber+1] !== 0 &&\n                        self.pairtable[thisNode.num - startNumber+1] !== 0) {\n\n                        prevNode = nextNode = self.nodes[self.pairtable[thisNode.num - startNumber+1]-1];\n                    }\n\n                    // this node is paired but at least one of its neighbors is unpaired\n                    // place the label in the direction of the two neighbors\n                    if (self.pairtable[thisNode.num - startNumber+1] !== 0 && (\n                        self.pairtable[nextNode.num - startNumber+1] === 0 ||\n                        self.pairtable[prevNode.num - startNumber+1] === 0)) {\n                        nextVec = [thisNode.x - nextNode.x, thisNode.y - nextNode.y];\n                        prevVec = [thisNode.x - prevNode.x, thisNode.y - prevNode.y];\n\n                    } else {\n                        nextVec = [nextNode.x - thisNode.x, nextNode.y - thisNode.y];\n                        prevVec = [prevNode.x - thisNode.x, prevNode.y - thisNode.y];\n                    }\n                }\n\n                var combinedVec = [nextVec[0] + prevVec[0], nextVec[1] + prevVec[1]];\n                var vecLength = Math.sqrt(combinedVec[0] * combinedVec[0] + combinedVec[1] * combinedVec[1]);\n                var normedVec = [combinedVec[0] / vecLength, combinedVec[1] / vecLength];\n                var offsetVec = [-15 * normedVec[0], -15 * normedVec[1]];\n\n                newX = self.nodes[i-1].x + offsetVec[0];\n                newY = self.nodes[i-1].y + offsetVec[1];\n\n                var newNode = {'name': i + startNumber -1,\n                                 'num': -1,\n                                 'radius': 6,\n                                 'rna': self,\n                                 'nodeType': 'label',\n                                 'structName': self.structName,\n                                 'elemType': 'l',\n                                 'x': newX,\n                                 'y': newY,\n                                 'px': newX,\n                                 'py': newY,\n                                 'uid': slugid.nice() };\n                var newLink = {'source': self.nodes[i-1],\n                            'target': newNode,\n                            'value': 1,\n                            'linkType': 'label_link',\n                            'uid': slugid.nice() };\n\n                self.nodes.push(newNode);\n                self.links.push(newLink);\n            }\n        }\n\n        return self;\n    };\n\n    self.recalculateElements = function() {\n        self.removePseudoknots();\n        self.elements = self.ptToElements(self.pairtable, 0, 1, self.dotbracket.length);\n\n        if (self.circular) {\n            //check to see if the external loop is a hairpin or a multiloop\n            let externalLoop = self.elements.filter(function(d) { if (d[0] == 'e') return true; });\n\n            if (externalLoop.length > 0) {\n                eloop = externalLoop[0];\n                nucs = eloop[2].sort(numberSort);\n\n                prev = nucs[0];\n                hloop = true;\n                numGreater = 0;\n                for (let i = 1; i < nucs.length; i++) {\n                    if (nucs[i] - prev > 1) {\n                        numGreater += 1;\n                    }\n                    prev = nucs[i];\n                }\n\n                if (numGreater == 1) {\n                    eloop[0] = 'h';\n                } else if (numGreater == 2) {\n                    eloop[0] = 'i';\n                } else {\n                    eloop[0] = 'm';\n                }\n            }\n        }\n\n        return self;\n    };\n\n    self.reassignLinkUids = function() {\n        // reassign uids to the links, corresponding to the uids of the two nodes\n        // they connect\n        var i;\n\n        for (var i = 0; i < self.links.length; i++) {\n            self.links[i].uid = self.links[i].source.uid + self.links[i].target.uid;\n        }\n\n        return self;\n    }\n\n    self.removePseudoknots = function() {\n        if (self.pairtable.length > 1)\n            self.pseudoknotPairs = self.pseudoknotPairs.concat(rnaUtilities.removePseudoknotsFromPairtable(self.pairtable));\n\n        return self;\n    };\n\n    self.addPseudoknots = function() {\n        /* Add all of the pseudoknot pairs which are stored outside\n         * of the pairtable back to the pairtable\n         */\n        var pt = self.pairtable;\n        var pseudoknotPairs = self.pseudoknotPairs;\n\n        for (var i = 0; i < pseudoknotPairs.length; i++) {\n            pt[pseudoknotPairs[i][0]] = pseudoknotPairs[i][1];\n            pt[pseudoknotPairs[i][1]] = pseudoknotPairs[i][0];\n        }\n\n        self.pseudoknotPairs = [];\n        return self;\n    };\n\n    self.addName = function(name) {\n        if (typeof name == 'undefined') {\n            self.name = '';\n            return self;\n        } else {\n            self.name = name;\n            return self;\n        }\n    };\n\n\n    if (self.rnaLength > 0)\n        self.recalculateElements();\n\n    self.getNodeFromNucleotides = function(nucs) {\n        /* Get a node given a nucleotide number or an array of nucleotide\n         * numbers indicating an element node */\n        if (Object.prototype.toString.call(nucs) === '[object Array]') {\n            for (let j = 0; j < self.nodes.length; j++) {\n                if ('nucs' in self.nodes[j]) {\n                    if (self.nodes[j].nucs.equals(nucs)) {\n                        return self.nodes[j];\n                    }\n                }\n            }\n        } else {\n            for (let j = 0; j < self.nodes.length; j++) {\n                if (self.nodes[j].num == nucs) {\n                    return self.nodes[j];\n                }\n            }\n        }\n\n        console.log('ERROR: No node found for nucs:', nucs);\n        return null;\n    }\n}\n\nexport function moleculesToJson(moleculesJson) {\n    /* Convert a list of RNA and protein molecules to a list of RNAGraph\n     * ProteinGraph and extraLinks structure */\n\n    var nodes = {}; //index the nodes by uid\n    var graphs = [];\n    var extraLinks = [];\n\n\n    // Create the graphs for each molecule\n    for (var i = 0; i < moleculesJson.molecules.length; i++) {\n        var molecule = moleculesJson.molecules[i];\n        var rg;\n\n        if (molecule.type == 'rna') {\n            rg = new RNAGraph(molecule.seq, molecule.ss, molecule.header);\n            rg.circularizeExternal = true;\n            rg.elementsToJson()\n            .addPositions('nucleotide', molecule.positions)\n            .addLabels()\n            .reinforceStems()\n            .reinforceLoops();\n\n\n        } else if (molecule.type == 'protein') {\n            rg = new ProteinGraph(molecule.header, molecule.size);\n\n        }\n\n        rg.addUids(molecule.uids);\n\n        for (var j = 0; j < rg.nodes.length; j++) {\n            nodes[rg.nodes[j].uid] = rg.nodes[j];\n        }\n\n        graphs.push(rg);\n    }\n\n    //Add the extra links\n    for (var i = 0; i < moleculesJson.extraLinks.length; i++) {\n        link = moleculesJson.extraLinks[i];\n\n        link.source = nodes[link.source];\n        link.target = nodes[link.target];\n        link.uid = slugid.nice();\n\n        extraLinks.push(link);\n    }\n\n    return {'graphs': graphs, 'extraLinks': extraLinks};\n};\n","export function simpleXyCoordinates (pair_table) {\n  var INIT_ANGLE=0.;     /* initial bending angle */\n  var INIT_X = 100.;     /* coordinate of first digit */\n  var INIT_Y = 100.;     /* see above */\n  var RADIUS =  15.;\n\n  var x = [], y = [];\n\n  var i, len;\n  var  alpha;\n\n  len = pair_table[0];\n  var angle = Array.apply(null, new Array(len+5)).map(Number.prototype.valueOf,0); \n  var loop_size = Array.apply(null, new Array(16+Math.floor(len/5)))\n                    .map(Number.prototype.valueOf, 0); \n  var stack_size = Array.apply(null, new Array(16+Math.floor(len/5)))\n                    .map(Number.prototype.valueOf, 0); \n\n  var lp = 0;\n  var stk = 0;\n  var PIHALF = Math.PI / 2;\n\n\n  var loop = function(i, j, pair_table)\n  /* i, j are the positions AFTER the last pair of a stack; i.e\n     i-1 and j+1 are paired. */\n  {\n      var count = 2;   /* counts the VERTICES of a loop polygon; that's\n                          NOT necessarily the number of unpaired bases!\n                          Upon entry the loop has already 2 vertices, namely\n                          the pair i-1/j+1.  */\n\n  var    r = 0, bubble = 0; /* bubble counts the unpaired digits in loops */\n\n  var    i_old, partner, k, l, start_k, start_l, fill, ladder;\n  var    begin, v, diff;\n  var  polygon;\n\n  var remember = Array.apply(null, new Array((3+Math.floor((j-i)/5)*2))).map(Number.prototype.valueOf, 0);\n\n  i_old = i-1, j++;         /* j has now been set to the partner of the\n                               previous pair for correct while-loop\n                               termination.  */\n  while (i != j) {\n      partner = pair_table[i];\n      if ((!partner) || (i==0))\n          i++, count++, bubble++;\n      else {\n          count += 2;\n          k = i, l = partner;    /* beginning of stack */\n          remember[++r] = k;\n          remember[++r] = l;\n          i = partner+1;         /* next i for the current loop */\n\n          start_k = k, start_l = l;\n          ladder = 0;\n          do {\n              k++, l--, ladder++;        /* go along the stack region */\n          }\n          while ((pair_table[k] == l) && (pair_table[k] > k));\n\n          fill = ladder-2;\n          if (ladder >= 2) {\n              angle[start_k+1+fill] += PIHALF;   /*  Loop entries and    */\n              angle[start_l-1-fill] += PIHALF;   /*  exits get an        */\n              angle[start_k]        += PIHALF;   /*  additional PI/2.    */\n              angle[start_l]        += PIHALF;   /*  Why ? (exercise)    */\n              if (ladder > 2) {\n                  for (; fill >= 1; fill--) {\n                      angle[start_k+fill] = Math.PI;    /*  fill in the angles  */\n                      angle[start_l-fill] = Math.PI;    /*  for the backbone    */\n                  }\n              }\n          }\n          stack_size[++stk] = ladder;\n          if (k <= l)\n            loop(k, l, pair_table);\n      }\n  }\n\n  polygon = Math.PI*(count-2)/count; /* bending angle in loop polygon */\n  remember[++r] = j;\n  begin = i_old < 0 ? 0 : i_old;\n  for (v = 1; v <= r; v++) {\n      diff  = remember[v]-begin;\n      for (fill = 0; fill <= diff; fill++)\n      angle[begin+fill] += polygon;\n      if (v > r)\n          break;\n      begin = remember[++v];\n  }\n  loop_size[++lp] = bubble;\n  }\n\n  loop(0, len+1, pair_table);\n  loop_size[lp] -= 2;     /* correct for cheating with function loop */\n\n  alpha = INIT_ANGLE;\n  x[0]  = INIT_X;\n  y[0]  = INIT_Y;\n\n  var poss = [];\n\n  poss.push([x[0], y[0]]);\n  for (i = 1; i < len; i++) {\n      x[i] = x[i-1]+RADIUS*Math.cos(alpha);\n      y[i] = y[i-1]+RADIUS*Math.sin(alpha);\n\n      poss.push([x[i], y[i]]);\n      alpha += Math.PI-angle[i+1];\n  }\n\n  return poss;\n}\n","export function Radloop() {\n\tthis.radius = null;\n\tthis.loopnumber = null;\n\tthis.next = null;\n    this.prev = null;\n}\n\nRadloop.prototype.getRadius = function(){\n\treturn this.radius;\n}\n\nRadloop.prototype.setRadius = function(radius){\n\tthis.radius = radius;\n}\n\nRadloop.prototype.getLoopnumber = function(){\n\treturn this.loopnumber;\n}\n\nRadloop.prototype.setLoopnumber = function(loopnumber){\n\tthis.loopnumber = loopnumber;\n}\n\nRadloop.prototype.getNext = function(){\n\treturn this.next;\n}\n\nRadloop.prototype.setNext = function(next){\n\tthis.next = next;\n}\n\nRadloop.prototype.getPrev = function(){\n\treturn this.prev;\n}\n\nRadloop.prototype.setPrev = function(prev){\n\tthis.prev = prev;\n}\n","import {Region} from './region.js';\n\nexport function Base() {\n\tthis.mate = null;\n\tthis.x = null;\n    this.y = null;\n\tthis.extracted = null;\n\tthis.region = new Region();\n}\n\nBase.prototype.getMate = function(){\n\treturn this.mate;\n}\n\nBase.prototype.setMate = function(mate){\n\tthis.mate = mate;\n}\n\nBase.prototype.getX = function(){\n\treturn this.x;\n}\n\nBase.prototype.setX = function(x){\n\tthis.x = x;\n}\n\nBase.prototype.getY = function(){\n\treturn this.y;\n}\n\nBase.prototype.setY = function(y){\n\tthis.y = y;\n}\n\nBase.prototype.isExtracted = function(){\n\treturn this.extracted;\n}\n\nBase.prototype.setExtracted = function(extracted){\n\tthis.extracted = extracted;\n}\n\nBase.prototype.getRegion = function(){\n\treturn this.region;\n}\n\nBase.prototype.setRegion = function(region){\n\tthis.region = region;\n}\n","import {Radloop} from './radloop.js';\nimport {Connection} from './connection.js';\nimport {Region} from './region.js';\nimport {Base} from './base.js';\nimport {Loop} from './loop.js';\n\nexport function NAView(){\n    this.ANUM = 9999.0;\n\tthis.MAXITER = 500;\n\n\tthis.bases = [];\n\tthis.nbase = null;\n    this.nregion = null;\n    this.loop_count = null;\n\n\tthis.root = new Loop();\n\tthis.loops = [];\n\n\tthis.regions = [];\n\n\tthis.rlphead = new Radloop();\n\n\tthis.lencut = 0.8;\n\tthis.RADIUS_REDUCTION_FACTOR = 1.4;\n\n\t// show algorithm step by step\n\tthis.angleinc = null;\n\n\tthis._h = null;\n\n\t// private boolean noIterationFailureYet = true;\n\n\tthis.HELIX_FACTOR = 0.6;\n\tthis.BACKBONE_DISTANCE = 27;\n}\n\nNAView.prototype.naview_xy_coordinates = function(pair_table){\n    var x = [];\n\tvar y = [];\n    if (pair_table.length === 0 || pair_table[0] === 0){\n        return 0;\n    }\n    var i;\n    this.nbase = pair_table[0];\n    this.bases = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.bases.push(new Base());\n    }\n    this.regions = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.regions.push(new Region());\n    }\n    this.read_in_bases(pair_table);\n    this.rlphead = null;\n    this.find_regions();\n    this.loop_count = 0;\n    this.loops = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.loops.push(new Loop());\n    }\n    this.construct_loop(0);\n    this.find_central_loop();\n    this.traverse_loop(this.root, null);\n\n    for (i = 0; i < this.nbase; i++){\n        x.push(100 + this.BACKBONE_DISTANCE * this.bases[i + 1].getX());\n        y.push(100 + this.BACKBONE_DISTANCE * this.bases[i + 1].getY());\n    }\n\n    return {\n        nbase: this.nbase,\n        x: x,\n        y: y\n    }\n}\n\nNAView.prototype.read_in_bases = function read_in_bases(pair_table){\n    var i = null;\n    var npairs = null;\n\n    // Set up an origin.\n    this.bases.push(new Base());\n    this.bases[0].setMate(0);\n    this.bases[0].setExtracted(false);\n    this.bases[0].setX(this.ANUM);\n    this.bases[0].setY(this.ANUM);\n\n    for (npairs = 0, i = 1; i <= this.nbase; i++){\n        this.bases.push(new Base());\n        this.bases[i].setExtracted(false);\n        this.bases[i].setX(this.ANUM);\n        this.bases[i].setY(this.ANUM);\n        this.bases[i].setMate(pair_table[i]);\n        if (pair_table[i] > i)\n            npairs++;\n    }\n    // must have at least 1 pair to avoid segfault\n    if (npairs == 0){\n        this.bases[1].setMate(this.nbase);\n        this.bases[this.nbase].setMate(1);\n    }\n}\n\nNAView.prototype.find_regions = function find_regions(){\n    var i = null;\n    var mate = null;\n    var nb1 = null;\n\n    nb1 = this.nbase + 1;\n    var mark = [];\n    for (i = 0; i < nb1; i++){\n        mark.push(false);\n    }\n    this.nregion = 0;\n    for (i = 0; i <= this.nbase; i++) {\n        if ((mate = this.bases[i].getMate()) != 0 && !mark[i]) {\n            this.regions[this.nregion].setStart1(i);\n            this.regions[this.nregion].setEnd2(mate);\n            mark[i] = true;\n            mark[mate] = true;\n            this.bases[i].setRegion(this.regions[this.nregion]);\n            this.bases[mate].setRegion(this.regions[this.nregion]);\n            for (i++, mate--; i < mate && this.bases[i].getMate() == mate; i++, mate--) {\n                mark[mate] = true;\n                mark[i]= true;\n                this.bases[i].setRegion(this.regions[this.nregion]);\n                this.bases[mate].setRegion(this.regions[this.nregion]);\n            }\n            this.regions[this.nregion].setEnd1(--i);\n            this.regions[this.nregion].setStart2(mate + 1);\n\n            this.nregion++;\n        }\n    }\n}\n\nNAView.prototype.construct_loop = function construct_loop(ibase){\n    var i = null;\n    var mate = null;\n    var retloop = new Loop();\n    var lp = new Loop();\n    var cp = new Connection();\n    var rp = new Region();\n    var rlp = new Radloop();\n    retloop = this.loops[this.loop_count++];\n    retloop.setNconnection(0);\n    retloop.setDepth(0);\n    retloop.setNumber(this.loop_count);\n    retloop.setRadius(0.0);\n\n    for (rlp = this.rlphead; rlp != null; rlp = rlp.getNext())\n        if (rlp.getLoopnumber() == this.loop_count)\n            retloop.setRadius(rlp.getRadius());\n    i = ibase;\n    do {\n        if ((mate = this.bases[i].getMate()) != 0) {\n            rp = this.bases[i].getRegion();\n            if (!this.bases[rp.getStart1()].isExtracted()) {\n                if (i == rp.getStart1()) {\n                    this.bases[rp.getStart1()].setExtracted(true);\n                    this.bases[rp.getEnd1()].setExtracted(true);\n                    this.bases[rp.getStart2()].setExtracted(true);\n                    this.bases[rp.getEnd2()].setExtracted(true);\n                    lp = this.construct_loop(rp.getEnd1() < this.nbase ? rp.getEnd1() + 1\n                            : 0);\n                } else if (i == rp.getStart2()) {\n                    this.bases[rp.getStart2()].setExtracted(true);\n                    this.bases[rp.getEnd2()].setExtracted(true);\n                    this.bases[rp.getStart1()].setExtracted(true);\n                    this.bases[rp.getEnd1()].setExtracted(true);\n                    lp = this.construct_loop(rp.getEnd2() < this.nbase ? rp.getEnd2() + 1\n                            : 0);\n                } else {\n                    console.log(\"Something went terribly wrong ....\");\n                }\n                retloop.setNconnection(retloop.getNconnection() + 1);\n                cp = new Connection();\n                retloop.setConnection(retloop.getNconnection() - 1,\tcp);\n                retloop.setConnection(retloop.getNconnection(), null);\n                cp.setLoop(lp);\n                cp.setRegion(rp);\n                if(i == rp.getStart1()) {\n                    cp.setStart(rp.getStart1());\n                    cp.setEnd(rp.getEnd2());\n                } else {\n                    cp.setStart(rp.getStart2());\n                    cp.setEnd(rp.getEnd1());\n                }\n                cp.setExtruded(false);\n                cp.setBroken(false);\n                lp.setNconnection(lp.getNconnection() + 1);\n                cp = new Connection();\n                lp.setConnection(lp.getNconnection() - 1, cp);\n                lp.setConnection(lp.getNconnection(), null);\n                cp.setLoop(retloop);\n                cp.setRegion(rp);\n                if (i == rp.getStart1()) {\n                    cp.setStart(rp.getStart2());\n                    cp.setEnd(rp.getEnd1());\n                } else {\n                    cp.setStart(rp.getStart1());\n                    cp.setEnd(rp.getEnd2());\n                }\n                cp.setExtruded(false);\n                cp.setBroken(false);\n            }\n            i = mate;\n        }\n        if (++i > this.nbase)\n            i = 0;\n    } while (i != ibase);\n    return retloop;\n}\n\nNAView.prototype.find_central_loop = function find_central_loop(){\n    var lp = new Loop();\n    var maxconn = null;\n    var maxdepth = null;\n    var i = null;\n\n    determine_depths.bind(this)();\n    maxconn = 0;\n    maxdepth = -1;\n    for (i = 0; i < this.loop_count; i++) {\n        lp = this.loops[i];\n        if (lp.getNconnection() > maxconn) {\n            maxdepth = lp.getDepth();\n            maxconn = lp.getNconnection();\n            this.root = lp;\n        } else if (lp.getDepth() > maxdepth\n                && lp.getNconnection() == maxconn) {\n            maxdepth = lp.getDepth();\n            this.root = lp;\n        }\n    }\n}\n\nfunction determine_depths() {\n    var lp = new Loop();\n    var i = null;\n    var j = null;\n\n    for (i = 0; i < this.loop_count; i++) {\n        lp = this.loops[i];\n        for (j = 0; j < this.loop_count; j++){\n            this.loops[j].setMark(false);\n        }\n        lp.setDepth(depth(lp));\n    }\n}\n\nfunction depth(lp){\n    var count = null;\n    var ret = null;\n    var d = null;\n\n    if (lp.getNconnection() <= 1){\n        return 0;\n    }\n    if (lp.isMark()){\n        return -1;\n    }\n    lp.setMark(true);\n    count = 0;\n    ret = 0;\n    for (var i = 0; lp.getConnection(i) != null; i++) {\n        d = depth(lp.getConnection(i).getLoop());\n        if (d >= 0) {\n            if (++count == 1){\n                ret = d;\n            }\n            else if (ret > d){\n                ret = d;\n            }\n        }\n    }\n    lp.setMark(false);\n    return ret + 1;\n}\n\nNAView.prototype.traverse_loop = function traverse_loop(lp, anchor_connection){\n    var xs, ys, xe, ye, xn, yn, angleinc, r;\n    var radius, xc, yc, xo, yo, astart, aend, a;\n    var cp, cpnext, acp, cpprev;\n    var i, j, n, ic;\n    var da, maxang;\n    var count, icstart, icend, icmiddle, icroot;\n    var done, done_all_connections, rooted;\n    var sign;\n    var midx, midy, nrx, nry, mx, my, vx, vy, dotmv, nmidx, nmidy;\n    var icstart1, icup, icdown, icnext, direction;\n    var dan, dx, dy, rr;\n    var cpx, cpy, cpnextx, cpnexty, cnx, cny, rcn, rc, lnx, lny, rl, ac, acn, sx, sy, dcp;\n    var imaxloop = 0;\n\n    angleinc = 2 * Math.PI / (this.nbase + 1);\n    acp = null;\n    icroot = -1;\n    var indice = 0;\n\n    for (ic = 0; (cp = lp.getConnection(indice)) != null; indice++, ic++) {\n        xs = -Math.sin(angleinc * cp.getStart());\n        ys = Math.cos(angleinc * cp.getStart());\n        xe = -Math.sin(angleinc * cp.getEnd());\n        ye = Math.cos(angleinc * cp.getEnd());\n        xn = ye - ys;\n        yn = xs - xe;\n        r = Math.sqrt(xn * xn + yn * yn);\n        cp.setXrad(xn / r);\n        cp.setYrad(yn / r);\n        cp.setAngle(Math.atan2(yn, xn));\n        if (cp.getAngle() < 0.0){\n            cp.setAngle(cp.getAngle() + 2 * Math.PI);\n        }\n        if (anchor_connection != null\n                && anchor_connection.getRegion() == cp.getRegion()) {\n            acp = cp;\n            icroot = ic;\n        }\n    }\n    set_radius: while (true) {\n        this.determine_radius(lp, this.lencut);\n        radius = lp.getRadius()/this.RADIUS_REDUCTION_FACTOR;\n        if (anchor_connection == null){\n            xc = yc = 0.0;\n        }\n        else {\n            xo = (this.bases[acp.getStart()].getX() + this.bases\n                    [acp.getEnd()].getX()) / 2.0;\n            yo = (this.bases[acp.getStart()].getY() + this.bases\n                    [acp.getEnd()].getY()) / 2.0;\n            xc = xo - radius * acp.getXrad();\n            yc = yo - radius * acp.getYrad();\n        }\n\n        // The construction of the connectors will proceed in blocks of\n        // connected connectors, where a connected connector pairs means two\n        // connectors that are forced out of the drawn circle because they\n        // are too close together in angle.\n\n        // First, find the start of a block of connected connectors\n\n        if (icroot == -1){\n            icstart = 0;\n        }\n        else {\n            icstart = icroot;\n        }\n        cp = lp.getConnection(icstart);\n        count = 0;\n        done = false;\n        do {\n            j = icstart - 1;\n            if (j < 0){\n                j = lp.getNconnection() - 1;\n            }\n            cpprev = lp.getConnection(j);\n            if (!this.connected_connection(cpprev, cp)) {\n                done = true;\n            }\n            else {\n                icstart = j;\n                cp = cpprev;\n            }\n            if (++count > lp.getNconnection()) {\n                // Here everything is connected. Break on maximum angular\n                // separation between connections.\n                maxang = -1.0;\n                for (ic = 0; ic < lp.getNconnection(); ic++) {\n                    j = ic + 1;\n                    if (j >= lp.getNconnection()){\n                        j = 0;\n                    }\n                    cp = lp.getConnection(ic);\n                    cpnext = lp.getConnection(j);\n                    ac = cpnext.getAngle() - cp.getAngle();\n                    if (ac < 0.0){\n                        ac += 2 * Math.PI;\n                    }\n                    if (ac > maxang) {\n                        maxang = ac;\n                        imaxloop = ic;\n                    }\n                }\n                icend = imaxloop;\n                icstart = imaxloop + 1;\n                if (icstart >= lp.getNconnection()){\n                    icstart = 0;\n                }\n                cp = lp.getConnection(icend);\n                cp.setBroken(true);\n                done = true;\n            }\n        } while (!done);\n        done_all_connections = false;\n        icstart1 = icstart;\n        while (!done_all_connections) {\n            count = 0;\n            done = false;\n            icend = icstart;\n            rooted = false;\n            while (!done) {\n                cp = lp.getConnection(icend);\n                if (icend == icroot){\n                    rooted = true;\n                }\n                j = icend + 1;\n                if (j >= lp.getNconnection()) {\n                    j = 0;\n                }\n                cpnext = lp.getConnection(j);\n                if (this.connected_connection(cp, cpnext)) {\n                    if (++count >= lp.getNconnection()){\n                        break;\n                    }\n                    icend = j;\n                }\n                else {\n                    done = true;\n                }\n            }\n            icmiddle = this.find_ic_middle(icstart, icend, anchor_connection,\n                    acp, lp);\n            ic = icup = icdown = icmiddle;\n            done = false;\n            direction = 0;\n            while (!done) {\n                if (direction < 0) {\n                    ic = icup;\n                }\n                else if (direction == 0) {\n                    ic = icmiddle;\n                }\n                else {\n                    ic = icdown;\n                }\n                if (ic >= 0) {\n                    cp = lp.getConnection(ic);\n                    if (anchor_connection == null || acp != cp) {\n                        if (direction == 0) {\n                            astart = cp.getAngle()\n                                    - Math.asin(1.0 / 2.0 / radius);\n                            aend = cp.getAngle()\n                                    + Math.asin(1.0 / 2.0 / radius);\n                            this.bases[cp.getStart()].setX(\n                                    xc + radius * Math.cos(astart));\n                            this.bases[cp.getStart()].setY(\n                                    yc + radius * Math.sin(astart));\n                            this.bases[cp.getEnd()].setX(\n                                    xc + radius * Math.cos(aend));\n                            this.bases[cp.getEnd()].setY(\n                                    yc + radius * Math.sin(aend));\n                        }\n                        else if (direction < 0) {\n                            j = ic + 1;\n                            if (j >= lp.getNconnection()){\n                                j = 0;\n                            }\n                            cp = lp.getConnection(ic);\n                            cpnext = lp.getConnection(j);\n                            cpx = cp.getXrad();\n                            cpy = cp.getYrad();\n                            ac = (cp.getAngle() + cpnext.getAngle()) / 2.0;\n                            if (cp.getAngle() > cpnext.getAngle()){\n                                ac -= Math.PI;\n                            }\n                            cnx = Math.cos(ac);\n                            cny = Math.sin(ac);\n                            lnx = cny;\n                            lny = -cnx;\n                            da = cpnext.getAngle() - cp.getAngle();\n                            if (da < 0.0){\n                                da += 2 * Math.PI;\n                            }\n                            if (cp.isExtruded()) {\n                                if (da <= Math.PI / 2){\n                                    rl = 2.0;\n                                }\n                                else {\n                                    rl = 1.5;\n                                }\n                            }\n                            else {\n                                rl = 1.0;\n                            }\n                            this.bases[cp.getEnd()].setX(\n                                    this.bases[cpnext.getStart()].getX()\n                                            + rl * lnx);\n                            this.bases[cp.getEnd()].setY(\n                                    this.bases[cpnext.getStart()].getY()\n                                            + rl * lny);\n                            this.bases[cp.getStart()].setX(\n                                    this.bases[cp.getEnd()].getX() + cpy);\n                            this.bases[cp.getStart()].setY(\n                                    this.bases[cp.getEnd()].getY() - cpx);\n                        } else {\n                            j = ic - 1;\n                            if (j < 0){\n                                j = lp.getNconnection() - 1;\n                            }\n                            cp = lp.getConnection(j);\n                            cpnext = lp.getConnection(ic);\n                            cpnextx = cpnext.getXrad();\n                            cpnexty = cpnext.getYrad();\n                            ac = (cp.getAngle() + cpnext.getAngle()) / 2.0;\n                            if (cp.getAngle() > cpnext.getAngle()){\n                                ac -= Math.PI;\n                            }\n                            cnx = Math.cos(ac);\n                            cny = Math.sin(ac);\n                            lnx = -cny;\n                            lny = cnx;\n                            da = cpnext.getAngle() - cp.getAngle();\n                            if (da < 0.0){\n                                da += 2 * Math.PI;\n                            }\n                            if (cp.isExtruded()) {\n                                if (da <= Math.PI / 2){\n                                    rl = 2.0;\n                                }\n                                else {\n                                    rl = 1.5;\n                                }\n                            }\n                            else {\n                                rl = 1.0;\n                            }\n                            this.bases[cpnext.getStart()].setX(\n                                    this.bases[cp.getEnd()].getX() + rl\n                                            * lnx);\n                            this.bases[cpnext.getStart()].setY(\n                                    this.bases[cp.getEnd()].getY() + rl\n                                            * lny);\n                            this.bases[cpnext.getEnd()].setX(\n                                    this.bases[cpnext.getStart()].getX()\n                                            - cpnexty);\n                            this.bases[cpnext.getEnd()].setY(\n                                    this.bases[cpnext.getStart()].getY()\n                                            + cpnextx);\n                        }\n                    }\n                }\n                if (direction < 0) {\n                    if (icdown == icend) {\n                        icdown = -1;\n                    }\n                    else if (icdown >= 0) {\n                        if (++icdown >= lp.getNconnection()) {\n                            icdown = 0;\n                        }\n                    }\n                    direction = 1;\n                }\n                else {\n                    if (icup == icstart){\n                        icup = -1;\n                    }\n                    else if (icup >= 0) {\n                        if (--icup < 0) {\n                            icup = lp.getNconnection() - 1;\n                        }\n                    }\n                    direction = -1;\n                }\n                done = icup == -1 && icdown == -1;\n            }\n            icnext = icend + 1;\n            if (icnext >= lp.getNconnection()){\n                icnext = 0;\n            }\n            if (icend != icstart\n                    && (!(icstart == icstart1 && icnext == icstart1))) {\n\n                // Move the bases just constructed (or the radius) so that\n                // the bisector of the end points is radius distance away\n                // from the loop center.\n\n                cp = lp.getConnection(icstart);\n                cpnext = lp.getConnection(icend);\n                dx = this.bases[cpnext.getEnd()].getX()\n                        - this.bases[cp.getStart()].getX();\n                dy = this.bases[cpnext.getEnd()].getY()\n                        - this.bases[cp.getStart()].getY();\n                midx = this.bases[cp.getStart()].getX() + dx / 2.0;\n                midy = this.bases[cp.getStart()].getY() + dy / 2.0;\n                rr = Math.sqrt(dx * dx + dy * dy);\n                mx = dx / rr;\n                my = dy / rr;\n                vx = xc - midx;\n                vy = yc - midy;\n                rr = Math.sqrt(dx * dx + dy * dy);\n                vx /= rr;\n                vy /= rr;\n                dotmv = vx * mx + vy * my;\n                nrx = dotmv * mx - vx;\n                nry = dotmv * my - vy;\n                rr = Math.sqrt(nrx * nrx + nry * nry);\n                nrx /= rr;\n                nry /= rr;\n\n                // Determine which side of the bisector the center should\n                // be.\n\n                dx = this.bases[cp.getStart()].getX() - xc;\n                dy = this.bases[cp.getStart()].getY() - yc;\n                ac = Math.atan2(dy, dx);\n                if (ac < 0.0){\n                    ac += 2 * Math.PI;\n                }\n                dx = this.bases[cpnext.getEnd()].getX() - xc;\n                dy = this.bases[cpnext.getEnd()].getY() - yc;\n                acn = Math.atan2(dy, dx);\n                if (acn < 0.0){\n                    acn += 2 * Math.PI;\n                }\n                if (acn < ac){\n                    acn += 2 * Math.PI;\n                }\n                if (acn - ac > Math.PI){\n                    sign = -1;\n                }\n                else {\n                    sign = 1;\n                }\n                nmidx = xc + sign * radius * nrx;\n                nmidy = yc + sign * radius * nry;\n                if (rooted) {\n                    xc -= nmidx - midx;\n                    yc -= nmidy - midy;\n                }\n                else {\n                    for (ic = icstart;;) {\n                        cp = lp.getConnection(ic);\n                        i = cp.getStart();\n                        this.bases[i].setX(\n                                this.bases[i].getX() + nmidx - midx);\n                        this.bases[i].setY(\n                                this.bases[i].getY() + nmidy - midy);\n                        i = cp.getEnd();\n                        this.bases[i].setX(\n                                this.bases[i].getX() + nmidx - midx);\n                        this.bases[i].setY(\n                                this.bases[i].getY() + nmidy - midy);\n                        if (ic == icend){\n                            break;\n                        }\n                        if (++ic >= lp.getNconnection()){\n                            ic = 0;\n                        }\n                    }\n                }\n            }\n            icstart = icnext;\n            done_all_connections = icstart == icstart1;\n        }\n        for (ic = 0; ic < lp.getNconnection(); ic++) {\n            cp = lp.getConnection(ic);\n            j = ic + 1;\n            if (j >= lp.getNconnection()){\n                j = 0;\n            }\n            cpnext = lp.getConnection(j);\n            dx = this.bases[cp.getEnd()].getX() - xc;\n            dy = this.bases[cp.getEnd()].getY() - yc;\n            rc = Math.sqrt(dx * dx + dy * dy);\n            ac = Math.atan2(dy, dx);\n            if (ac < 0.0){\n                ac += 2 * Math.PI;\n            }\n            dx = this.bases[cpnext.getStart()].getX() - xc;\n            dy = this.bases[cpnext.getStart()].getY() - yc;\n            rcn = Math.sqrt(dx * dx + dy * dy);\n            acn = Math.atan2(dy, dx);\n            if (acn < 0.0){\n                acn += 2 * Math.PI;\n            }\n            if (acn < ac){\n                acn += 2 * Math.PI;\n            }\n            dan = acn - ac;\n            dcp = cpnext.getAngle() - cp.getAngle();\n            if (dcp <= 0.0){\n                dcp += 2 * Math.PI;\n            }\n            if (Math.abs(dan - dcp) > Math.PI) {\n                if (cp.isExtruded()) {\n                    console.log(\"Warning from traverse_loop. Loop \"\n                            + lp.getNumber() + \" has crossed regions\\n\");\n                }\n                else if ((cpnext.getStart() - cp.getEnd()) != 1) {\n                    cp.setExtruded(true);\n                    continue set_radius; // remplacement du goto\n                }\n            }\n            if (cp.isExtruded()) {\n                this.construct_extruded_segment(cp, cpnext);\n            }\n            else {\n                n = cpnext.getStart() - cp.getEnd();\n                if (n < 0){\n                    n += this.nbase + 1;\n                }\n                angleinc = dan / n;\n                for (j = 1; j < n; j++) {\n                    i = cp.getEnd() + j;\n                    if (i > this.nbase){\n                        i -= this.nbase + 1;\n                    }\n                    a = ac + j * angleinc;\n                    rr = rc + (rcn - rc) * (a - ac) / dan;\n                    this.bases[i].setX(xc + rr * Math.cos(a));\n                    this.bases[i].setY(yc + rr * Math.sin(a));\n                }\n            }\n        }\n        break;\n    }\n    for (ic = 0; ic < lp.getNconnection(); ic++) {\n        if (icroot != ic) {\n            cp = lp.getConnection(ic);\n            //IM HERE\n            this.generate_region(cp);\n            this.traverse_loop(cp.getLoop(), cp);\n        }\n    }\n    n = 0;\n    sx = 0.0;\n    sy = 0.0;\n    for (ic = 0; ic < lp.getNconnection(); ic++) {\n        j = ic + 1;\n        if (j >= lp.getNconnection()){\n            j = 0;\n        }\n        cp = lp.getConnection(ic);\n        cpnext = lp.getConnection(j);\n        n += 2;\n        sx += this.bases[cp.getStart()].getX()\n                + this.bases[cp.getEnd()].getX();\n        sy += this.bases[cp.getStart()].getY()\n                + this.bases[cp.getEnd()].getY();\n        if (!cp.isExtruded()) {\n            for (j = cp.getEnd() + 1; j != cpnext.getStart(); j++) {\n                if (j > this.nbase){\n                    j -= this.nbase + 1;\n                }\n                n++;\n                sx += this.bases[j].getX();\n                sy += this.bases[j].getY();\n            }\n        }\n    }\n    lp.setX(sx / n);\n    lp.setY(sy / n);\n}\n\nNAView.prototype.determine_radius = function determine_radius(lp, lencut){\n    var mindit, ci, dt, sumn, sumd, radius, dit;\n    var i, j, end, start, imindit = 0;\n    var cp = new Connection(), cpnext = new Connection();\n    var rt2_2 = 0.7071068;\n\n    do {\n        mindit = 1.0e10;\n        for (sumd = 0.0, sumn = 0.0, i = 0; i < lp.getNconnection(); i++) {\n            cp = lp.getConnection(i);\n            j = i + 1;\n            if (j >= lp.getNconnection()){\n                j = 0;\n            }\n            cpnext = lp.getConnection(j);\n            end = cp.getEnd();\n            start = cpnext.getStart();\n            if (start < end){\n                start += this.nbase + 1;\n            }\n            dt = cpnext.getAngle() - cp.getAngle();\n            if (dt <= 0.0){\n                dt += 2 * Math.PI;\n            }\n            if (!cp.isExtruded()){\n                ci = start - end;\n            }\n            else {\n                if (dt <= Math.PI / 2){\n                    ci = 2.0;\n                }\n                else {\n                    ci = 1.5;\n                }\n            }\n            sumn += dt * (1.0 / ci + 1.0);\n            sumd += dt * dt / ci;\n            dit = dt / ci;\n            if (dit < mindit && !cp.isExtruded() && ci > 1.0) {\n                mindit = dit;\n                imindit = i;\n            }\n        }\n        radius = sumn / sumd;\n        if (radius < rt2_2){\n            radius = rt2_2;\n        }\n        if (mindit * radius < lencut) {\n            lp.getConnection(imindit).setExtruded(true);\n        }\n    } while (mindit * radius < lencut);\n    if (lp.getRadius() > 0.0){\n        radius = lp.getRadius();\n    }\n    else {\n        lp.setRadius(radius);\n    }\n}\n\nNAView.prototype.find_ic_middle = function find_ic_middle(icstart, icend, anchor_connection, acp, lp){\n    var count, ret, ic, i;\n    var done;\n\n    count = 0;\n    ret = -1;\n    ic = icstart;\n    done = false;\n    while (!done) {\n        if (count++ > lp.getNconnection() * 2) {\n            console.log(\"Infinite loop in 'find_ic_middle'\");\n        }\n        if (anchor_connection != null && lp.getConnection(ic) == acp) {\n            ret = ic;\n        }\n        done = ic == icend;\n        if (++ic >= lp.getNconnection()) {\n            ic = 0;\n        }\n    }\n    if (ret == -1) {\n        for (i = 1, ic = icstart; i < (count + 1) / 2; i++) {\n            if (++ic >= lp.getNconnection())\n                ic = 0;\n        }\n        ret = ic;\n    }\n    return ret;\n}\n\nNAView.prototype.construct_extruded_segment = function construct_extruded_segment(cp, cpnext){\n    var astart, aend1, aend2, aave, dx, dy, a1, a2, ac, rr, da, dac;\n    var start, end, n, nstart, nend;\n    var collision;\n\n    astart = cp.getAngle();\n    aend2 = aend1 = cpnext.getAngle();\n    if (aend2 < astart){\n        aend2 += 2 * Math.PI;\n    }\n    aave = (astart + aend2) / 2.0;\n    start = cp.getEnd();\n    end = cpnext.getStart();\n    n = end - start;\n    if (n < 0){\n        n += this.nbase + 1;\n    }\n    da = cpnext.getAngle() - cp.getAngle();\n    if (da < 0.0) {\n        da += 2 * Math.PI;\n    }\n    if (n == 2) {\n        this.construct_circle_segment(start, end);\n    }\n    else {\n        dx = this.bases[end].getX() - this.bases[start].getX();\n        dy = this.bases[end].getY() - this.bases[start].getY();\n        rr = Math.sqrt(dx * dx + dy * dy);\n        dx /= rr;\n        dy /= rr;\n        if (rr >= 1.5 && da <= Math.PI / 2) {\n            nstart = start + 1;\n            if (nstart > this.nbase){\n                nstart -= this.nbase + 1;\n            }\n            nend = end - 1;\n            if (nend < 0){\n                nend += this.nbase + 1;\n            }\n            this.bases[nstart].setX(this.bases[start].getX() + 0.5 * dx);\n            this.bases[nstart].setY(this.bases[start].getY() + 0.5 * dy);\n            this.bases[nend].setX(this.bases[end].getX() - 0.5 * dx);\n            this.bases[nend].setY(this.bases[end].getY() - 0.5 * dy);\n            start = nstart;\n            end = nend;\n        }\n        do {\n            collision = false;\n            this.construct_circle_segment(start, end);\n            nstart = start + 1;\n            if (nstart > this.nbase) {\n                nstart -= this.nbase + 1;\n            }\n            dx = this.bases[nstart].getX() - this.bases[start].getX();\n            dy = this.bases[nstart].getY() - this.bases[start].getY();\n            a1 = Math.atan2(dy, dx);\n            if (a1 < 0.0){\n                a1 += 2 * Math.PI;\n            }\n            dac = a1 - astart;\n            if (dac < 0.0){\n                dac += 2 * Math.PI;\n            }\n            if (dac > Math.PI){\n                collision = true;\n            }\n            nend = end - 1;\n            if (nend < 0){\n                nend += this.nbase + 1;\n            }\n            dx = this.bases[nend].getX() - this.bases[end].getX();\n            dy = this.bases[nend].getY() - this.bases[end].getY();\n            a2 = Math.atan2(dy, dx);\n            if (a2 < 0.0){\n                a2 += 2 * Math.PI;\n            }\n            dac = aend1 - a2;\n            if (dac < 0.0){\n                dac += 2 * Math.PI;\n            }\n            if (dac > Math.PI){\n                collision = true;\n            }\n            if (collision) {\n                ac = this.minf2(aave, astart + 0.5);\n                this.bases[nstart].setX(\n                        this.bases[start].getX() + Math.cos(ac));\n                this.bases[nstart].setY(\n                        this.bases[start].getY() + Math.sin(ac));\n                start = nstart;\n                ac = this.maxf2(aave, aend2 - 0.5);\n                this.bases[nend].setX(this.bases[end].getX() + Math.cos(ac));\n                this.bases[nend].setY(this.bases[end].getY() + Math.sin(ac));\n                end = nend;\n                n -= 2;\n            }\n        } while (collision && n > 1);\n    }\n}\n\nNAView.prototype.construct_circle_segment = function construct_circle_segment(start, end){\n    var dx, dy, rr, midx, midy, xn, yn, nrx, nry, mx, my, a;\n    var l, j, i;\n\n    dx = this.bases[end].getX() - this.bases[start].getX();\n    dy = this.bases[end].getY() - this.bases[start].getY();\n    rr = Math.sqrt(dx * dx + dy * dy);\n    l = end - start;\n    if (l < 0){\n        l += this.nbase + 1;\n    }\n    if (rr >= l) {\n        dx /= rr;\n        dy /= rr;\n        for (j = 1; j < l; j++) {\n            i = start + j;\n            if (i > this.nbase){\n                i -= this.nbase + 1;\n            }\n            this.bases[i].setX(\n                    this.bases[start].getX() + dx * j / l);\n            this.bases[i].setY(\n                    this.bases[start].getY() + dy * j / l);\n        }\n    }\n    else {\n        this.find_center_for_arc((l - 1), rr);\n        dx /= rr;\n        dy /= rr;\n        midx = this.bases[start].getX() + dx * rr / 2.0;\n        midy = this.bases[start].getY() + dy * rr / 2.0;\n        xn = dy;\n        yn = -dx;\n        nrx = midx + this._h * xn;\n        nry = midy + this._h * yn;\n        mx = this.bases[start].getX() - nrx;\n        my = this.bases[start].getY() - nry;\n        rr = Math.sqrt(mx * mx + my * my);\n        a = Math.atan2(my, mx);\n        for (j = 1; j < l; j++) {\n            i = start + j;\n            if (i > this.nbase){\n                i -= this.nbase + 1;\n            }\n            this.bases[i].setX(nrx + rr * Math.cos(a + j * this.angleinc));\n            this.bases[i].setY(nry + rr * Math.sin(a + j * this.angleinc));\n        }\n    }\n}\n\nNAView.prototype.find_center_for_arc = function find_center_for_arc(n, b){\n    var h, hhi, hlow, r, disc, theta, e, phi;\n    var iter;\n\n    hhi = (n + 1.0) / Math.PI;\n    // changed to prevent div by zero if (ih)\n    hlow = -hhi - b / (n + 1.000001 - b);\n    if (b < 1){\n        // otherwise we might fail below (ih)\n        hlow = 0;\n    }\n    iter = 0;\n    do {\n        h = (hhi + hlow) / 2.0;\n        r = Math.sqrt(h * h + b * b / 4.0);\n        disc = 1.0 - 0.5 / (r * r);\n        if (Math.abs(disc) > 1.0) {\n            console.log(\"Unexpected large magnitude discriminant = \" + disc\n                            + \" \" + r);\n        }\n        theta = Math.acos(disc);\n        phi = Math.acos(h / r);\n        e = theta * (n + 1) + 2 * phi - 2 * Math.PI;\n        if (e > 0.0) {\n            hlow = h;\n        }\n        else {\n            hhi = h;\n        }\n    } while (Math.abs(e) > 0.0001 && ++iter < this.MAXITER);\n    if (iter >= this.MAXITER) {\n        if (noIterationFailureYet) {\n            console.log(\"Iteration failed in find_center_for_arc\");\n            noIterationFailureYet = false;\n        }\n        h = 0.0;\n        theta = 0.0;\n    }\n    this._h = h;\n    this.angleinc = theta;\n}\n\nNAView.prototype.generate_region = function generate_region(cp){\n    var l, start, end, i, mate;\n    var rp;\n\n    rp = cp.getRegion();\n    l = 0;\n    if (cp.getStart() == rp.getStart1()) {\n        start = rp.getStart1();\n        end = rp.getEnd1();\n    }\n    else {\n        start = rp.getStart2();\n        end = rp.getEnd2();\n    }\n    if (this.bases[cp.getStart()].getX() > this.ANUM - 100.0\n            || this.bases[cp.getEnd()].getX() > this.ANUM - 100.0) {\n        console.log(\n                \"Bad region passed to generate_region. Coordinates not defined.\");\n    }\n    for (i = start + 1; i <= end; i++) {\n        l++;\n        this.bases[i].setX(\n                this.bases[cp.getStart()].getX() + this.HELIX_FACTOR * l\n                        * cp.getXrad());\n        this.bases[i].setY(\n                this.bases[cp.getStart()].getY() + this.HELIX_FACTOR * l\n                        * cp.getYrad());\n        mate = this.bases[i].getMate();\n        this.bases[mate].setX(\n                this.bases[cp.getEnd()].getX() + this.HELIX_FACTOR * l\n                        * cp.getXrad());\n        this.bases[mate].setY(\n                this.bases[cp.getEnd()].getY() + this.HELIX_FACTOR * l\n                        * cp.getYrad());\n\n    }\n}\n\nNAView.prototype.minf2 = function minf2(x1, x2) {\n    return ((x1) < (x2)) ? (x1) : (x2);\n}\n\nNAView.prototype.maxf2 = function maxf2(x1, x2) {\n    return ((x1) > (x2)) ? (x1) : (x2);\n}\n\nNAView.prototype.connected_connection = function connected_connection(cp, cpnext) {\n    if (cp.isExtruded()) {\n        return true;\n    }\n    else if (cp.getEnd() + 1 == cpnext.getStart()) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/* Version: 0.2\n* Date: 2015-03-15\n*/\n\nimport fstyle from './fornac.css';\n\nimport d3 from 'd3';\nimport slugid from 'slugid';\nimport {contextMenu} from './d3-context-menu.js';\n\nimport {RNAGraph} from './rnagraph.js';\nimport {ColorScheme, rnaUtilities} from './rnautils.js';\n\nimport {simpleXyCoordinates} from './simplernaplot.js';\nimport {NAView} from './naview/naview.js';\n\nexport function FornaContainer(element, passedOptions = {}) {\n    var self = this;\n\n    let options = {\n        'editable': false,\n        'displayAllLinks': false,\n        'labelInterval': 10,\n        'applyForce': true,\n        'chargeDistance': 110,\n        'friction': 0.35,\n        'middleCharge': -30,\n        'otherCharge': -30,\n        'linkDistanceMultiplier': 15,\n        'initialSize': null,\n        'layout': 'standard-polygonal',\n        'allowPanningAndZooming': true,\n        'transitionDuration': 500,\n        'maxNodeRadius': 80,    // the maximum radius of a node when the view is centered\n        'resizeSvgOnResize': true   //change the size of the svg when resizing the container\n                                    //sometimes its beneficial to turn this off, especially when\n                                    //performance is an issue\n    };\n\n    self.options = Object.assign(options, passedOptions);\n\n    if (self.options.initialSize !== null) {\n        self.options.svgW = self.options.initialSize[0];\n        self.options.svgH = self.options.initialSize[1];\n    } else {\n        self.options.svgW = 800;\n        self.options.svgH = 800;\n    }\n\n    if (self.options.editable == true) {\n        let backgroundMenu = [\n            {\n                title: 'Add Node',\n                action: function(elm, d, i, mousePos) {\n\n                },\n                children: [{\n                    'title': 'A',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'A', 'centerPos': canvasMousePos});\n                    }\n                },\n                {\n                    'title': 'C',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'C', 'centerPos': canvasMousePos});\n                    }\n\n                    },\n                {\n                    'title': 'G',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'G', 'centerPos': canvasMousePos});\n                    }\n\n                    },\n                {\n                    'title': 'U',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'U', 'centerPos': canvasMousePos});\n\n                    }\n                }\n                ],\n                disabled: false // optional, defaults to false\n            }\n        ]\n\n        let nodeMenu = [\n            {\n                title: 'Delete Node',\n                action: function(elm, d, i) {\n                    self.deleteNode(d);\n                },\n                disabled: false // optional, defaults to false\n            },\n            {\n                title: 'Change Node',\n                action: function(elm, d, i) {\n                    console.log('You have clicked the second item!');\n                    console.log('The data for this circle is: ' + d);\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            self.changeNode('A', d);\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            self.changeNode('C', d);\n\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            self.changeNode('G', d);\n\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            self.changeNode('U', d);\n                        }\n                    },\n                ]\n            },\n            {\n                title: 'Insert Before',\n                action: function(elm, d, i) {\n\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('A', d, -1);\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('C', d, -1);\n\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('G', d, -1);\n\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('U', d, -1);\n                        }\n                    },\n                ]\n            },\n            {\n                title: 'Insert After',\n                action: function(elm, d, i) {\n                    console.log('d:', d);\n\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('A', d, 0);\n\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('C', d, 0);\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('G', d, 0);\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            self.insertNodeBeforeOrAfter('U', d, 0);\n                        }\n                    },\n                ]\n            }\n        ]\n\n        self.nodeContextMenu = contextMenu(nodeMenu);\n        self.backgroundContextMenu = contextMenu(backgroundMenu);\n\n    }  else {\n        console.log('empty context menu');\n        self.nodeContextMenu = function() {};\n    }\n\n    var fill = d3.scale.category20();\n\n    // mouse event vars\n    var mousedownLink = null,\n        mousedownNode = null,\n        mouseupNode = null;\n    let linkContextMenuShown = false;\n\n    var xScale = d3.scale.linear()\n    .domain([0,self.options.svgW]).range([0,self.options.svgW]);\n    var yScale = d3.scale.linear()\n    .domain([0,self.options.svgH]).range([0, self.options.svgH]);\n\n    var graph = self.graph = {\n        'nodes':[],\n        'links':[]\n    };\n\n    self.linkStrengths = {\n        'pseudoknot': 0.00,\n        'proteinChain': 0.00,\n        'chainChain': 0.00,\n        'intermolecule': 10.00,\n        'external': 0.00,\n        'other': 10.00\n    };\n\n    self.displayParameters = {\n        'displayBackground': 'true',\n        'displayNumbering': 'true',\n        'displayNodeOutline': 'true',\n        'displayNodeLabel': 'true',\n        'displayLinks': 'true',\n        'displayPseudoknotLinks': 'true',\n        'displayProteinLinks': 'true'\n    };\n\n    self.colorScheme = 'structure';\n    self.customColors = {};\n    self.animation = self.options.applyForce;\n    // don't listen to events because a model window is open somewhere\n    self.deaf = false;\n    self.rnas = {};\n    self.extraLinks = []; //store links between different RNAs\n\n    Array.prototype.equals = function (array) {\n        // if the other array is a falsy value, return\n        if (!array)\n            return false;\n\n        // compare lengths - can save a lot of time\n        if (this.length != array.length)\n            return false;\n\n        for (var i = 0, l=this.length; i < l; i++) {\n            // Check if we have nested arrays\n            if (this[i] instanceof Array && array[i] instanceof Array) {\n                // recurse into the nested arrays\n                if (!this[i].equals(array[i]))\n                    return false;\n            }\n            else if (this[i] != array[i]) {\n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false;\n            }\n        }\n        return true;\n    };\n\n\n    self.createInitialLayout = function(structure, passedOptions = {}) {\n        // the default options\n        var options = {\n                        'sequence': '',\n                        'name': 'empty',\n                        'positions': [],\n                        'labelInterval': self.options.labelInterval,\n                        'avoidOthers': true,\n                        'uids': [],\n                        'circularizeExternal': true\n                      };\n\n        options = Object.assign(options, passedOptions);\n\n        console.log('options.uids:', options.uids);\n        var rg = new RNAGraph(options.sequence, structure, options.name);\n        rg.circularizeExternal = options.circularizeExternal;\n\n        var rnaJson = rg.recalculateElements();\n\n        if (options.positions.length === 0) {\n            // no provided positions means we need to calculate an initial layout\n\n            if (self.options.layout == 'naview') {\n                var naview = new NAView();\n\n                let naViewPositions = naview.naview_xy_coordinates(rg.pairtable);\n                options.positions = []\n                for (let i = 0; i < naViewPositions.nbase; i++)\n                    options.positions.push([naViewPositions.x[i], naViewPositions.y[i]]);\n            } else {\n                options.positions = simpleXyCoordinates(rnaJson.pairtable);\n            }\n        }\n\n        rnaJson = rnaJson.elementsToJson()\n        .addUids(options.uids)\n        .addPositions('nucleotide', options.positions)\n        .addLabels(1, options.labelInterval)\n        .reinforceStems()\n        .reinforceLoops()\n        .connectFakeNodes()\n        .reassignLinkUids()\n        .breakNodesToFakeNodes();\n\n        return rnaJson;\n    };\n\n    self.addRNA = function(structure, passedOptions = {}) {\n        var rnaJson = self.createInitialLayout(structure, passedOptions);\n        let centerView = false;\n\n        /*\n         * Code to display the JSONs representing the structure\n         *\n        rnaJson.nodes[0].rna = null;\n        rnaJson.nodes[0].nextNode = null;\n\n        rnaJson.links[0].source = null;\n        rnaJson.links[0].target = null;\n\n        console.log(rnaJson.nodes[0]);\n        console.log(rnaJson.links[0]);\n        console.log(JSON.stringify(rnaJson.nodes[0],null,2));\n        console.log(JSON.stringify(rnaJson.links[0],null,2));\n        */\n\n        if ('extraLinks' in passedOptions) {\n            // presumably the passed in links are within the passed molecule\n            var newLinks = self.addExternalLinks(rnaJson, passedOptions.extraLinks);\n\n            self.extraLinks = self.extraLinks.concat(newLinks);\n        }\n\n        if ('centerPos' in passedOptions)\n            self.addRNAJSON(rnaJson, {centerPos: passedOptions.centerPos,\n                                      centerView: false})\n        else if ('avoidOthers' in passedOptions)\n            self.addRNAJSON(rnaJson, {avoidOthers: passedOptions.avoidOthers});\n        else\n            self.addRNAJSON(rnaJson, {centerView: passedOptions.centerView});\n\n        return rnaJson;\n    };\n\n    self.changeNode = function(nodeName, referenceNode) {\n        //insert a new node before or after another one\n        //positionOffset specifies who far from the original to insert the new node\n        let rna = referenceNode.rna;\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newNodeNum = referenceNode.num;\n\n        let newDotbracket = dotbracket;\n        let newSequence = sequence.slice(0,newNodeNum-1) +  nodeName + sequence.slice(newNodeNum);\n\n        console.log('newSequence:', newSequence);\n\n        console.log('uids:', uids);\n        uids.splice(newNodeNum-1, 1, slugid.nice());\n        let newPositions = positions;\n\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': uids,\n                                 'centerView': false});\n\n    }\n\n    self.insertNodeBeforeOrAfter = function(nodeName, referenceNode, positionOffset) {\n        //insert a new node before or after another one\n        //positionOffset specifies who far from the original to insert the new node\n        let rna = referenceNode.rna;\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newNodeNum = referenceNode.num + positionOffset;\n\n        let newDotbracket = dotbracket.slice(0,newNodeNum) + '.' + dotbracket.slice(newNodeNum);\n        let newSequence = sequence.slice(0,newNodeNum) +  nodeName + sequence.slice(newNodeNum);\n\n        console.log('newSequence:', newSequence);\n\n        uids.splice(newNodeNum, 0, slugid.nice());\n        positions.splice(newNodeNum, 0, positions[newNodeNum - positionOffset-1]);\n\n        let newUids = uids;\n        let newPositions = positions;\n\n        console.log('positions:', positions);\n        console.log('new node positions:', newPositions);\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': newUids,\n                                 'centerView': false});\n\n    }\n\n    self.deleteNode = function(node) {\n        console.log('deleting...', node);\n        // get the dotbracket string for this rna\n        let rna = node.rna;\n        let pair = rna.pairtable[node.num];\n\n        // remove basepairs for this node\n        if (pair != 0) {\n            rna.pairtable[node.num] = 0;\n            rna.pairtable[pair] = 0;\n        }\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newDotbracket = dotbracket.slice(0, node.num-1) + dotbracket.slice(node.num)\n        let newPositions = positions.slice(0, node.num-1)\n                .concat(positions.slice(node.num));\n        let newSequence = sequence.slice(0, node.num-1) + sequence.slice(node.num)\n        let newUids = uids.slice(0, node.num-1)\n                .concat(uids.slice(node.num));\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': newUids,\n                                  'centerView': false});\n\n        console.log('new dotbracket:', newDotbracket);\n        //self.recalculateGraph();\n\n        //remove backbone links associated with this node\n\n        //remove this node\n\n    }\n\n    self.addExternalLinks = function(rnaJson, externalLinks) {\n        var newLinks = [];\n\n        for (var i = 0; i < externalLinks.length; i++) {\n            var newLink = {linkType: 'external', value: 1, uid: slugid.nice(),\n                source: null, target: null};\n            // check if the source node is an array\n            if (Object.prototype.toString.call(externalLinks[i][0]) === '[object Array]') {\n                for (var j = 0; j < rnaJson.nodes.length; j++) {\n                    if ('nucs' in rnaJson.nodes[j]) {\n                        if (rnaJson.nodes[j].nucs.equals(externalLinks[i][0])) {\n                            newLink.source = rnaJson.nodes[j];\n                            break;\n                        }\n                    }\n                }\n            } else {\n                for (var j = 0; j < rnaJson.nodes.length; j++) {\n                    if (rnaJson.nodes[j].num == externalLinks[i][0]) {\n                        newLink.source = rnaJson.nodes[j];\n                    }\n                }\n            }\n\n            // check if the target node is an array\n            if (Object.prototype.toString.call(externalLinks[i][1]) === '[object Array]') {\n                for (var j = 0; j < rnaJson.nodes.length; j++) {\n                    if ('nucs' in rnaJson.nodes[j]) {\n                        if (rnaJson.nodes[j].nucs.equals(externalLinks[i][1])) {\n                            newLink.target = rnaJson.nodes[j];\n                        }\n                    }\n                }\n            } else {\n                for (var j = 0; j < rnaJson.nodes.length; j++) {\n                    if (rnaJson.nodes[j].num == externalLinks[i][1]) {\n                        newLink.target = rnaJson.nodes[j];\n                    }\n                }\n            }\n\n            if (newLink.source == null || newLink.target == null) {\n                console.log('ERROR: source or target of new link not found:', newLink, externalLinks[i]);\n                continue;\n            }\n\n            newLinks.push(newLink);\n        }\n\n        return newLinks;\n    };\n\n    self.addRNAJSON = function(rnaGraph,\n                               { avoidOthers = false,\n                                centerPos = null,\n                                centerView = true} ) {\n        // Add an RNAGraph, which contains nodes and links as part of the\n        // structure\n        // Each RNA will have uid to identify it\n        // when it is modified, it is replaced in the global list of RNAs\n        //\n        var maxX, minX;\n        console.log('centerView:', centerView);\n\n        if (centerPos != null) {\n            // center the newly created RNA at a given position\n            let totalX = 0;\n            let totalY = 0;\n            let nodeCount = 0;\n\n            rnaGraph.nodes.forEach(function(node) {\n                totalX += node.x;\n                totalY += node.y;\n                nodeCount += 1;\n            });\n\n            if (nodeCount > 0) {\n                // center the nodes at centerPos\n\n                rnaGraph.nodes.forEach(function(node) {\n                    node.x = node.x + centerPos[0] - totalX / nodeCount;\n                    node.y = node.y + centerPos[1] - totalY / nodeCount;\n\n                    node.px = node.x;\n                    node.py = node.y;\n                });\n            }\n        }\n\n        if (avoidOthers) {\n            if (self.graph.nodes.length > 0)\n                maxX = d3.max(self.graph.nodes.map(function(d) { return d.x; }));\n            else\n                maxX = 0;\n\n            minX = d3.min(rnaGraph.nodes.map(function(d) { return d.x; }));\n\n            rnaGraph.nodes.forEach(function(node) {\n                node.x += (maxX - minX) + 20;\n                node.px += (maxX - minX);\n            });\n        }\n\n        rnaGraph.nodes.forEach(function(node) {\n            node.rna = rnaGraph;\n        });\n\n        self.rnas[rnaGraph.uid] = rnaGraph;\n        self.recalculateGraph();\n\n        self.update();\n\n        if (centerView)\n            self.centerView();\n\n        return rnaGraph;\n    };\n\n    function magnitude(x) {\n        return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    }\n\n    function positionAnyNode(d) {\n        var endPoint = d;\n        var startPoint = d.prevNode;\n        var lengthMult = 6;\n\n        if (startPoint === null)\n            return;\n\n        // does this node have a link pointing to it?\n        if (!d.linked)\n            return;\n\n        // point back toward the previous node\n        var u = [-(endPoint.x - startPoint.x), -(endPoint.y - startPoint.y)];\n\n        if (u[0] == 0 && u[1] == 0)\n            return;     // will lead to a NaN error\n\n        u = [u[0] / magnitude(u), u[1] / magnitude(u)];\n        var v = [-u[1], u[0]];\n\n        var arrowTip = [d.radius * u[0], d.radius * u[1]];\n\n        var path = 'M' +\n                    (arrowTip[0] + lengthMult * (u[0] + v[0]) / 2) + ',' + (arrowTip[1] + lengthMult * (u[1] + v[1]) / 2) + 'L' +\n                    (arrowTip[0]) + ',' + (arrowTip[1]) + 'L' +\n                    (arrowTip[0] + lengthMult * (u[0] - v[0]) / 2) + ',' + (arrowTip[1] + lengthMult * (u[1] - v[1]) / 2);\n\n        d3.select(this).attr('d', path);\n    }\n\n    function realLinkFilter(d) {\n        return d.linkType == 'basepair' ||\n               d.linkType == 'backbone' ||\n               d.linkType == 'intermolecule' ||\n               d.linkType == 'pseudoknot' ||\n               d.linkType == 'label_link' ||\n               d.linkType == 'external' ||\n               d.linkType == 'chain_chain';\n    }\n\n    self.transitionRNA = function(newStructure, nextFunction) {\n        //transition from an RNA which is already displayed to a new structure\n        var duration = self.options.transitionDuration;\n\n        var uids = self.graph.nodes\n        .filter(function(d) { return d.nodeType == 'nucleotide'; })\n        .map(function(d) { return d.uid; });\n\n        var options = {'uids': uids};\n        var newRNAJson = self.createInitialLayout(newStructure, options);\n\n        var gnodes = visNodes.selectAll('g.gnode').data(newRNAJson.nodes, nodeKey);\n\n        if (duration === 0)\n            gnodes.attr('transform', function(d) {\n                return 'translate(' + [d.x, d.y] + ')';\n            });\n        else {\n            gnodes.transition().attr('transform', function(d) {\n                return 'translate(' + [d.x, d.y] + ')'; }).duration(duration);\n        }\n\n        var links = visLinks.selectAll('line.link')\n        .data(newRNAJson.links.filter(realLinkFilter), linkKey);\n        var newNodes = self.createNewNodes(gnodes.enter())\n        .attr('transform', function(d) {\n            if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                return 'translate(' + [0, 0] + ')';\n            else\n                return '';\n        });\n\n\n        if (duration === 0)\n            gnodes.exit().remove();\n        else\n            gnodes.exit().transition()\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [0, 0] + ')';\n                else\n                    return '';\n            });\n\n        gnodes.select('path')\n        .each(positionAnyNode);\n\n        self.graph.nodes = gnodes.data();\n        self.updateStyle();\n        self.centerView(duration);\n\n        function endall(transition, callback) {\n            if (transition.size() === 0) { setTimeout(callback, duration); }\n            var n = 0;\n            transition\n            .each(function() { ++n; })\n            .each('end', function() { if (!--n) callback.apply(this, arguments); });\n        }\n\n        function addNewLinks() {\n            var newLinks = self.createNewLinks(links.enter());\n            self.graph.links = links.data();\n\n            self.updateStyle();\n\n            if (typeof nextFunction != 'undefined')\n                nextFunction();\n\n        }\n\n        links.exit().remove();\n\n        if (duration === 0) {\n            links\n            .attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) { return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; });\n\n            var newLinks = self.createNewLinks(links.enter());\n            self.graph.links = links.data();\n\n            self.updateStyle();\n        } else {\n            links.transition()\n            .attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) { return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; })\n            .duration(duration)\n            .call(endall, addNewLinks);\n        }\n\n        if (duration === 0) {\n            newNodes\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [d.x, d.y] + ')';\n                else\n                    return '';\n            });\n        } else {\n            newNodes.transition()\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [d.x, d.y] + ')';\n                else\n                    return '';\n            });\n        }\n\n    };\n\n    self.recalculateGraph = function() {\n        // Condense all of the individual RNAs into one\n        // collection of nodes and links\n        self.graph.nodes = [];\n        self.graph.links = [];\n        for (var uid in self.rnas) {\n            self.graph.nodes = self.graph.nodes.concat(self.rnas[uid].nodes);\n            self.graph.links = self.graph.links.concat(self.rnas[uid].links);\n        }\n\n        // Create a lookup table so that we can access each node\n        // based on its uid. This will be used to create the links\n        // between different RNAs\n        var uidsToNodes = {};\n\n        for (var i = 0; i < self.graph.nodes.length; i++)\n            uidsToNodes[self.graph.nodes[i].uid] = self.graph.nodes[i];\n\n        self.graph.links.forEach(function(link) {\n            link.source = uidsToNodes[link.source.uid];\n            link.target = uidsToNodes[link.target.uid];\n        });\n\n        for (i = 0; i < self.extraLinks.length; i++) {\n            // the actual node objects may have changed, so we hae to recreate\n            // the extra links based on the uids\n            if (!(self.extraLinks[i].target.uid in uidsToNodes)) {\n                console.log('not there:', self.extraLinks[i]);\n                continue;\n            }\n\n            self.extraLinks[i].source = uidsToNodes[self.extraLinks[i].source.uid];\n            self.extraLinks[i].target = uidsToNodes[self.extraLinks[i].target.uid];\n\n            if (self.extraLinks[i].linkType == 'intermolecule') {\n                //remove links to middle nodes\n                let fakeLinks = self.graph.links.filter(function(d) {\n                    return ((d.source == self.extraLinks[i].source || d.source == self.extraLinks[i].target ||\n                            d.target == self.extraLinks[i].source || d.target == self.extraLinks[i].source) &&\n                            d.linkType == 'fake');\n                });\n\n                for (var j = 0; j < fakeLinks.length; j++) {\n                    var linkIndex = self.graph.links.indexOf(fakeLinks[j]);\n                    self.graph.links.splice(linkIndex, 1);\n                }\n            }\n\n            graph.links.push(self.extraLinks[i]);\n        }\n    };\n\n    self.addNodes = function addNodes(json) {\n        // add a new set of nodes from a json file\n\n        // Resolve the sources and targets of the links so that they\n        // are not just indeces into an array\n        json.links.forEach(function(entry) {\n            if (typeof entry.source == 'number') entry.source = json.nodes[entry.source];\n            if (typeof entry.target == 'number') entry.target = json.nodes[entry.target];\n        });\n\n        // Get the maximum x and y values of the current graph\n        // so that we don't place a new structure on top of the\n        // old one\n        if (self.graph.nodes.length > 0) {\n            maxX = d3.max(self.graph.nodes.map(function(d) {return d.x;}));\n            maxY = d3.max(self.graph.nodes.map(function(d) {return d.y;}));\n        } else {\n            maxX = 0;\n            maxY = 0;\n        }\n\n        json.nodes.forEach(function(entry) {\n            if (!(entry.rna.uid in self.rnas)) {\n                self.rnas[entry.rna.uid] = entry.rna;\n            }\n\n            entry.x += maxX;\n            //entry.y += maxY;\n\n            entry.px += maxX;\n            //entry.py += maxY;\n        });\n\n        r = new RNAGraph('','');\n        r.nodes = json.nodes;\n        r.links = json.links;\n\n        //self.addRNA(r);\n        self.recalculateGraph();\n\n        self.update();\n        self.centerView();\n    };\n\n    self.addCustomColors = function addCustomColors(json) {\n        // Add a json file containing the custom colors\n        self.customColors = json;\n    };\n\n    self.addCustomColorsText = function(customColorsText) {\n        let cs = new ColorScheme(customColorsText);\n        self.customColors = cs.colorsJson;\n        self.changeColorScheme('custom');\n    };\n\n    self.clearNodes = function clearNodes() {\n        self.graph.nodes = [];\n        self.graph.links = [];\n\n        self.rnas = {};\n        self.extraLinks = [];\n\n        self.update();\n    };\n\n    self.toJSON = function toJSON() {\n       var data = {'rnas': self.rnas, 'extraLinks': self.extraLinks};\n            var dataString = JSON.stringify(data, function(key, value) {\n            //remove circular references\n            if (key == 'rna') {\n                return;\n            } else {\n                return value;\n            }\n       }, '\\t');\n       return dataString;\n    };\n\n    self.fromJSON = function(jsonString) {\n        var rnas, extraLinks;\n\n        try{\n            var data = JSON.parse(jsonString);\n            rnas = data.rnas;\n            extraLinks = data.extraLinks;\n        } catch(err) {\n            throw err;\n        }\n\n        for (var uid in rnas) {\n            if (rnas[uid].type == 'rna') {\n                r = new RNAGraph();\n\n                r.seq = rnas[uid].seq;\n                r.dotbracket = rnas[uid].dotbracket;\n                r.circular = rnas[uid].circular;\n                r.pairtable = rnas[uid].pairtable;\n                r.uid = rnas[uid].uid;\n                r.structName = rnas[uid].structName;\n                r.nodes = rnas[uid].nodes;\n                r.links = rnas[uid].links;\n                r.rnaLength = rnas[uid].rnaLength;\n                r.elements = rnas[uid].elements;\n                r.nucsToNodes = rnas[uid].nucsToNodes;\n                r.pseudoknotPairs = rnas[uid].pseudoknotPairs;\n            } else {\n                r = new ProteinGraph();\n                r.size = rnas[uid].size;\n                r.nodes = rnas[uid].nodes;\n                r.uid = rnas[uid].uid;\n            }\n\n            self.addRNAJSON(r, false);\n        }\n\n        extraLinks.forEach(function(link) {\n            self.extraLinks.push(link);\n        });\n\n        self.recalculateGraph();\n        self.update();\n    };\n\n    self.setSize = function() {\n        if (self.options.initialSize != null)\n            return;\n\n        var svgH = d3.select(element).node().offsetHeight;\n        var svgW = d3.select(element).node().offsetWidth;\n\n        self.options.svgW = svgW;\n        self.options.svgH = svgH;\n\n        //Set the output range of the scales\n        xScale.range([0, svgW]).domain([0, svgW]);\n        yScale.range([0, svgH]).domain([0, svgH]);\n\n        //re-attach the scales to the zoom behaviour\n        self.zoomer.x(xScale)\n        .y(yScale);\n\n        self.brusher.x(xScale)\n        .y(yScale);\n\n        self.centerView();\n\n        if (!self.options.resizeSvgOnResize) {\n            return;\n        }\n\n        //resize the background\n        /*\n        rect.attr('width', svgW)\n        .attr('height', svgH);\n        */\n\n        svg.attr('width', svgW)\n        .attr('height', svgH);\n    }\n\n    function changeColors(moleculeColors, d, scale) {\n        if (moleculeColors.hasOwnProperty(d.num)) {\n            let val = parseFloat(moleculeColors[d.num]);\n\n            if (isNaN(val)) {\n                // passed in color is not a scalar, so\n                // treat it as a color\n                return moleculeColors[d.num];\n            } else {\n                // the user passed in a float, let's use a colormap\n                // to convert it to a color\n                return scale(val);\n            }\n        } else {\n            return 'white';\n        }\n    }\n\n    self.setOutlineColor = function(color) {\n        var nodes = visNodes.selectAll('g.gnode').select('[node_type=nucleotide]');\n        nodes.style('fill', color);\n    }\n\n    self.changeColorScheme = function(newColorScheme) {\n        var proteinNodes = visNodes.selectAll('[node_type=protein]');\n\n        proteinNodes.classed(fstyle.node, true)\n                    .attr('r', function(d) { return d.radius; });\n\n        var gnodes = visNodes.selectAll('g.gnode');\n        var circles = visNodes.selectAll('g.gnode').selectAll('circle');\n        var nodes = visNodes.selectAll('g.gnode').select('[node_type=nucleotide]');\n        self.colorScheme = newColorScheme;\n\n\n        if (newColorScheme == 'sequence') {\n            var scale = d3.scale.ordinal()\n            .range(['#dbdb8d', '#98df8a', '#ff9896', '#aec7e8', '#aec7e8'])\n            .domain(['A','C','G','U','T']);\n            nodes.style('fill', function(d) {\n                return scale(d.name);\n            });\n\n        } else if (newColorScheme == 'structure') {\n            var scale = d3.scale.category10()\n            .domain(['s','m','i','e','t','h','x'])\n            .range(['lightgreen', '#ff9896', '#dbdb8d', 'lightsalmon',\n                   'lightcyan', 'lightblue', 'transparent']);\n\n                   nodes.style('fill', function(d) {\n                       return scale(d.elemType);\n                   });\n\n        } else if (newColorScheme == 'positions') {\n            nodes.style('fill', function(d) {\n                var scale = d3.scale.linear()\n                .range(['#98df8a', '#dbdb8d', '#ff9896'])\n                .interpolate(d3.interpolateLab)\n                .domain([1, 1 + (d.rna.rnaLength - 1) / 2, d.rna.rnaLength]);\n\n                return scale(d.num);\n            });\n        } else if (newColorScheme == 'custom') {\n            // scale to be used in case the user passes scalar\n            // values rather than color names\n            if (typeof self.customColors != 'undefined' &&\n                'domain' in self.customColors &&\n               'range' in self.customColors) {\n                var scale = d3.scale.linear()\n                .interpolate(d3.interpolateLab)\n                .domain(self.customColors.domain)\n                .range(self.customColors.range);\n            }\n\n            nodes.style('fill', function(d) {\n                if (typeof self.customColors == 'undefined' ||\n                   !self.customColors.hasOwnProperty('colorValues')) {\n                    return 'white';\n                }\n\n                if (self.customColors.colorValues.hasOwnProperty(d.structName) &&\n                    self.customColors.colorValues[d.structName].hasOwnProperty(d.num)) {\n                    // if a molecule name is specified, it supercedes the default colors\n                    // (for which no molecule name has been specified)\n                    let moleculeColors = self.customColors.colorValues[d.structName];\n                    return changeColors(moleculeColors, d, scale);\n                } else if (self.customColors.colorValues.hasOwnProperty('')) {\n                    let moleculeColors = self.customColors.colorValues[''];\n                    return changeColors(moleculeColors, d, scale);\n                }\n\n                return 'white';\n            });\n        }\n    };\n\n    function mousedown() {\n\n    }\n\n    function mousemove() {\n        // only if we are dragging\n        if (!mousedownNode) return;\n\n        // if mouse starts to move, deselect all\n        let node = visNodes.selectAll('g.gnode');\n        node.classed(fstyle.selectedNode, function(p) { return p.selected =  self.options.applyForce && (p.previouslySelected = false); });\n\n        // update drag line\n        let mpos = d3.mouse(vis.node());\n        dragLine\n        .attr('x1', mousedownNode.x)\n        .attr('y1', mousedownNode.y)\n        .attr('x2', mpos[0])\n        .attr('y2', mpos[1]);\n    }\n\n    function mouseup() {\n        if (mousedownNode) {\n\n            if (!linkContextMenuShown)\n                dragLine\n                .attr('class', fstyle.transparent);\n        }\n\n        // clear mouse event vars\n        resetMouseVars();\n        //update()\n    }\n    //adapt size to window changes:\n    window.addEventListener('resize', self.setSize, false);\n\n    self.zoomer = d3.behavior.zoom()\n        .scaleExtent([0.1,10])\n        .x(xScale)\n        .y(yScale)\n        .on('zoomstart', zoomstart)\n        .on('zoom', redraw);\n\n    d3.select(element).select('svg').remove();\n\n    var svg = d3.select(element)\n    .attr('tabindex', 1)\n    .on('keydown.brush', keydown)\n    .on('keyup.brush', keyup)\n    .each(function() { this.focus(); })\n    .append('svg:svg')\n    .attr('width', self.options.svgW)\n    .attr('height', self.options.svgH)\n\n    self.options.svg = svg;\n\n    var svgGraph = svg.append('svg:g')\n    .on('mousemove', mousemove)\n    .on('mousedown', mousedown)\n    .on('mouseup', mouseup)\n    .classed('mouseEventHelper', true)\n\n    if (self.options.allowPanningAndZooming)\n        svgGraph.call(self.zoomer);\n\n    if (self.options.editable)\n        svgGraph.on('contextmenu', self.backgroundContextMenu);\n\n    /*\n    var rect = svgGraph.append('svg:rect')\n    .attr('width', self.options.svgW)\n    .attr('height', self.options.svgH)\n    .attr('fill', 'white')\n    //.attr('stroke', 'grey')\n    //.attr('stroke-width', 1)\n    //.attr('pointer-events', 'all')\n    .attr('id', 'zrect');\n    */\n\n    var brush = svgGraph.append('g')\n    .datum(function() { return {selected: false, previouslySelected: false}; })\n    .attr('class', fstyle.brush);\n\n    var vis = svgGraph.append('svg:g')\n    .classed(fstyle.plot, true)\n    var visLinks = vis.append('svg:g');\n    var visNodes = vis.append('svg:g');\n\n    self.brusher = d3.svg.brush()\n                .x(xScale)\n                .y(yScale)\n               .on('brushstart', function(d) {\n                   var gnodes = visNodes.selectAll('g.gnode');\n                   gnodes.each(function(d) { d.previouslySelected = ctrlKeydown && d.selected; });\n               })\n               .on('brush', function() {\n                   var gnodes = visNodes.selectAll('g.gnode');\n                   var extent = d3.event.target.extent();\n\n                   gnodes.classed(fstyle.selectedNode, function(d) {\n                       return d.selected = self.options.applyForce && d.previouslySelected ^\n                       (extent[0][0] <= d.x && d.x < extent[1][0]\n                        && extent[0][1] <= d.y && d.y < extent[1][1]);\n                   });\n               })\n               .on('brushend', function() {\n                   d3.event.target.clear();\n                   d3.select(this).call(d3.event.target);\n               });\n\n      brush.call(self.brusher)\n          .on('mousedown.brush', null)\n          .on('touchstart.brush', null)\n          .on('touchmove.brush', null)\n          .on('touchend.brush', null);\n      brush.select('.background').style('cursor', 'auto');\n\n    function zoomstart() {\n        var node = visNodes.selectAll('g.gnode');\n        node.each(function(d) {\n                d.selected = false;\n                d.previouslySelected = false;\n                });\n        node.classed(fstyle.selectedNode, false);\n    }\n\n    function redraw() {\n        vis.attr('transform',\n                 'translate(' + d3.event.translate + ')' + ' scale(' + d3.event.scale + ')');\n    }\n\n    self.getBoundingBoxTransform = function() {\n        // Center the view on the molecule(s) and scale it so that everything\n        // fits in the window\n\n        //no molecules, nothing to do\n        if (self.graph.nodes.length === 0)\n            return {'translate': [0,0], 'scale': 1};\n\n        // Get the bounding box\n        var minX = d3.min(self.graph.nodes.map(function(d) {return d.x;}));\n        var minY = d3.min(self.graph.nodes.map(function(d) {return d.y;}));\n\n        var maxX = d3.max(self.graph.nodes.map(function(d) {return d.x;}));\n        var maxY = d3.max(self.graph.nodes.map(function(d) {return d.y;}));\n\n        var maxRadius = d3.max(self.graph.nodes.map(function(d) { return d.radius; }));\n\n        // The width and the height of the molecule\n        var molWidth = maxX - minX;\n        var molHeight = maxY - minY;\n\n        // how much larger the drawing area is than the width and the height\n        var widthRatio = self.options.svgW / (molWidth + 1);\n        var heightRatio = self.options.svgH / (molHeight + 1);\n\n        // we need to fit it in both directions, so we scale according to\n        // the direction in which we need to shrink the most\n        var minRatio = Math.min(widthRatio, heightRatio,\n                                self.options.maxNodeRadius / maxRadius) * 0.8;\n\n        // the new dimensions of the molecule\n        var newMolWidth = molWidth * minRatio;\n        var newMolHeight = molHeight * minRatio;\n\n        // translate so that it's in the center of the window\n        var xTrans = -(minX) * minRatio + (self.options.svgW - newMolWidth) / 2;\n        var yTrans = -(minY) * minRatio + (self.options.svgH - newMolHeight) / 2;\n\n        return {'translate': [xTrans, yTrans], 'scale': minRatio};\n    };\n\n    self.centerView = function(duration) {\n        if (arguments.length === 0)\n            duration = 0;\n\n        var bbTransform = self.getBoundingBoxTransform();\n\n        if (bbTransform === null)\n            return;\n\n        // do the actual moving\n        vis.transition().attr('transform',\n                 'translate(' + bbTransform.translate + ')' + ' scale(' + bbTransform.scale + ')').duration(duration);\n\n        // tell the zoomer what we did so that next we zoom, it uses the\n        // transformation we entered here\n        self.zoomer.translate(bbTransform.translate);\n        self.zoomer.scale(bbTransform.scale);\n    };\n\n    self.force = d3.layout.force()\n    .charge(function(d) { if (d.nodeType == 'middle')  {\n            return self.options.middleCharge;\n    }\n        else\n            return self.options.otherCharge;})\n    .friction(self.options.friction)\n    .linkDistance(function(d) { return self.options.linkDistanceMultiplier * d.value; })\n    .linkStrength(function(d) { if (d.linkType in self.linkStrengths) {\n                                  return self.linkStrengths[d.linkType];\n                                } else {\n                                  return self.linkStrengths.other; }\n    })\n    .gravity(0.000)\n    .nodes(self.graph.nodes)\n    .links(self.graph.links)\n    .chargeDistance(self.options.chargeDistance)\n    .size([self.options.svgW, self.options.svgH]);\n\n    // line displayed when dragging new nodes\n    var dragLine = vis.append('line')\n    .attr('class', fstyle.dragLine)\n    .attr('x1', 0)\n    .attr('y1', 0)\n    .attr('x2', 0)\n    .attr('y2', 0);\n\n    function resetMouseVars() {\n        mousedownNode = null;\n        mouseupNode = null;\n        mousedownLink = null;\n    }\n\n    var shiftKeydown = false;\n    var ctrlKeydown = false;\n\n    function selectedNodes(mouseDownNode) {\n        var gnodes = visNodes.selectAll('g.gnode');\n\n        if (ctrlKeydown) {\n            return gnodes.filter(function(d) { return d.selected; });\n\n            //return d3.selectAll('[struct_name=' + mouseDownNode.struct_name + ']');\n        } else {\n            return gnodes.filter(function(d) { return d.selected ; });\n            //return d3.select(this);\n        }\n    }\n\n    function dragstarted(d) {\n        d3.event.sourceEvent.stopPropagation();\n\n      if (!d.selected && !ctrlKeydown) {\n          // if this node isn't selected, then we have to unselect every other node\n            var node = visNodes.selectAll('g.gnode');\n            node.classed(fstyle.selectedNode, function(p) { return p.selected =  self.options.applyForce && (p.previouslySelected = false); });\n          }\n\n        d3.select(this).classed(fstyle.selectedNode, function(p) { d.previouslySelected = d.selected; return d.selected = self.options.applyForce && true; });\n\n        var toDrag = selectedNodes(d);\n        toDrag.each(function(d1) {\n            d1.fixed |= 2;\n        });\n\n        //d3.event.sourceEvent.stopPropagation();\n        //d3.select(self).classed('dragging', true);\n        //\n    }\n\n    function dragged(d) {\n\n        var toDrag = selectedNodes(d);\n\n        toDrag.each(function(d1) {\n            d1.x += d3.event.dx;\n            d1.y += d3.event.dy;\n\n            d1.px += d3.event.dx;\n            d1.py += d3.event.dy;\n        });\n\n        self.resumeForce();\n        d3.event.sourceEvent.preventDefault();\n    }\n\n    self.resumeForce = function() {\n        if (self.animation)\n            self.force.resume();\n    };\n\n    function dragended(d) {\n        var toDrag = selectedNodes(d);\n\n        toDrag.each(function(d1) {\n            d1.fixed &= ~6;\n        });\n    }\n\n    function collide(node) {\n        var r = node.radius + 16,\n        nx1 = node.x - r,\n        nx2 = node.x + r,\n        ny1 = node.y - r,\n        ny2 = node.y + r;\n        return function(quad, x1, y1, x2, y2) {\n            if (quad.point && (quad.point !== node)) {\n                var x = node.x - quad.point.x,\n                y = node.y - quad.point.y,\n                l = Math.sqrt(x * x + y * y),\n                r = node.radius + quad.point.radius;\n                if (l < r) {\n                    l = (l - r) / l * 0.1;\n                    node.x -= x *= l;\n                    node.y -= y *= l;\n                    quad.point.x += x;\n                    quad.point.y += y;\n                }\n            }\n            return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n        };\n    }\n\n\n    var drag = d3.behavior.drag()\n    //.origin(function(d) { return d; })\n    .on('dragstart', dragstarted)\n    .on('drag', dragged)\n    .on('dragend', dragended);\n\n    function keydown() {\n        if (self.deaf)\n            // lalalalal, not listening\n            return;\n\n        if (shiftKeydown) return;\n\n        switch (d3.event.keyCode) {\n            case 68:    //'d' key\n                console.log('dotbracket:', self.getStructuresDotBracket());\n                break;\n            case 16:\n                shiftKeydown = true;\n                break;\n            case 17:\n                ctrlKeydown = true;\n                break;\n            case 67: //c\n                self.centerView();\n                break;\n        }\n\n        if (shiftKeydown || ctrlKeydown) {\n            svgGraph.call(self.zoomer)\n            .on('mousedown.zoom', null)\n            .on('touchstart.zoom', null)\n            .on('touchmove.zoom', null)\n            .on('touchend.zoom', null);\n\n            //svgGraph.on('zoom', null);\n            vis.selectAll('g.gnode')\n            .on('mousedown.drag', null);\n        }\n\n        if (ctrlKeydown) {\n          brush.select('.background').style('cursor', 'crosshair');\n          brush.call(self.brusher);\n        }\n    }\n\n    function keyup() {\n        shiftKeydown = false;\n        ctrlKeydown = false;\n\n        brush.call(self.brusher)\n        .on('mousedown.brush', null)\n        .on('touchstart.brush', null)\n        .on('touchmove.brush', null)\n        .on('touchend.brush', null);\n\n        brush.select('.background').style('cursor', 'auto');\n        svgGraph.call(self.zoomer);\n\n        vis.selectAll('g.gnode')\n        .call(drag);\n    }\n\n    d3.select(element)\n    .on('keydown', keydown)\n    .on('keyup', keyup)\n    .on('contextmenu', function() {\n            d3.event.preventDefault();\n    });\n\n    var linkKey = function(d) {\n        return d.uid;\n    };\n\n    var nodeKey = function(d) {\n        var key = d.uid;\n        return key;\n    };\n\n\n    var updateRnaGraph = function(r) {\n        var nucleotidePositions = r.getPositions('nucleotide');\n        var labelPositions = r.getPositions('label');\n\n        var uids = r.getUids();\n\n        r.recalculateElements()\n        .elementsToJson()\n        .addPseudoknots()\n        .addPositions('nucleotide', nucleotidePositions)\n        .addUids(uids)\n        .addLabels(1, self.options.labelInterval)\n        .addPositions('label', labelPositions)\n        .reinforceStems()\n        .reinforceLoops()\n        .updateLinkUids();\n    };\n\n    var removeBackBoneLink = function(d) {\n        if (d.target.num - d.source.num != 1) {\n            console.log('ERROR: non adjacent nodes. Target:', d.target,\n                        'Source:', d.source, 'Link:', d);\n            return;\n        }\n\n        let rna = d.target.rna;\n        let toRemove = [];\n\n        for (let i = 0; i < rna.links.length; i++) {\n            let link = rna.links[i];\n\n            if (link.linkType != 'basepair')\n                continue;\n\n            if (link.source.num <= d.source.num && link.target.num >= d.target.num) {\n                console.log('crossing basepair', link);\n                toRemove.push(link);\n            }\n        }\n\n\n        // Remove all base pairs that are between these two nodes and add them as extra\n        // links\n        console.log('toRemove:', toRemove);\n\n        for (let i = 0; i < toRemove.length; i++) {\n            rna.pairtable[toRemove[i].source.num] = 0;\n            rna.pairtable[toRemove[i].target.num] = 0;\n\n            toRemove[i].from = toRemove[i].source.num;\n            toRemove[i].to = toRemove[i].target.num - d.source.num;\n        }\n\n        // extract the dotbracket string of the rna\n        // cut it at the position of this backbone bond\n        let sequence = rna.seq;\n        let sequence1 = rna.seq.slice(0, d.source.num);\n        let sequence2 = rna.seq.slice(d.source.num);\n\n        let rnaDotBracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let dotBracket1 = rnaDotBracket.slice(0, d.source.num);\n        let dotBracket2 = rnaDotBracket.slice(d.source.num)\n\n        // get the nucleotide positions\n        // cut them at the positions of the backbone bond\n        let positions = rna.getPositions('nucleotide')\n        let uids = rna.getUids();\n\n        let positions1 = positions.slice(0, d.source.num);\n        let positions2 = positions.slice(d.source.num);\n\n        let uids1 = uids.slice(0, d.source.num);\n        let uids2 = uids.slice(d.source.num);\n\n        console.log('positions1:', positions1);\n        console.log('positions2:', positions2);\n\n        delete self.rnas[rna.uid];\n        let rna1 = self.addRNA(dotBracket1, { 'sequence': sequence1,\n                                   'positions': positions1,\n                                   'uids': uids1 });\n        let rna2 = self.addRNA(dotBracket2, { 'sequence': sequence2,\n                                   'positions': positions2,\n                                   'uids': uids2 });\n        for (let i = 0; i < toRemove.length; i++) {\n            console.log('rna1:', rna1);\n            console.log('rna2:', rna2);\n            console.log('toRemove[i]', toRemove[i]);\n            self.extraLinks.push(\n                {'source': rna1.nodes[toRemove[i].from-1],\n                 'target': rna2.nodes[toRemove[i].to-1],\n                 'value': 1,\n                 'uid': slugid.nice(),\n                 'linkType': 'intermolecule'});\n                self.recalculateGraph();\n                self.update();\n\n        }\n        console.log('self.extraLinks:', self.extraLinks);\n        //self.extraLinks.push({'source': rna1.nodes[\n\n        // create two new rnas\n        // add their positions\n        // add them back to the plot\n    }\n\n    var removeLink = function(d) {\n        // remove a link between two nodes\n        let index = self.graph.links.indexOf(d);\n        console.log('removing link:', index);\n\n        if (index > -1) {\n            //remove a link\n            //graph.links.splice(index, 1);\n\n            // there should be two cases\n            // 1. The link is within a single molecule\n\n            if (d.source.rna == d.target.rna) {\n                if (d.linkType == 'backbone') {\n                    console.log('trying to remove a backbone link', d.source.num, d.target.num);\n\n                    removeBackBoneLink(d);\n\n                    return;\n\n\n                } else {\n                    var r = d.source.rna;\n\n                    r.addPseudoknots();\n                    r.pairtable[d.source.num] = 0;\n                    r.pairtable[d.target.num] = 0;\n\n                    updateRnaGraph(r);\n                }\n\n\n            } else {\n                // 2. The link is between two different molecules\n                let extraLinkIndex = self.extraLinks.indexOf(d);\n\n                self.extraLinks.splice(extraLinkIndex, 1);\n            }\n\n            self.recalculateGraph();\n        }\n\n        self.update();\n    };\n\n    var linkClick = function(d) {\n        if (!shiftKeydown) {\n            return;\n        }\n\n        var invalidLinks = { //'backbone': true,\n                             'fake': true,\n                             'fake_fake': true,\n                             'label_link': true};\n\n        console.log('d.linkType:', d.linkType);\n        if (d.linkType in invalidLinks )\n            return;\n\n        removeLink(d);\n    };\n\n    self.getStructuresDotBracket = function() {\n        console.log('self.rnas:', self.rnas);\n        let sequence = [];\n        let currIdx = 1;\n        let nodeIdxs = {};\n        let breaks = [];\n        let pairtable = [];\n\n        // add the nodes\n        for (let uid in self.rnas) {\n            let rna = self.rnas[uid];\n\n            for (let j = 0; j < rna.nodes.length; j++) {\n                let node = rna.nodes[j];\n\n                if (node.nodeType != 'nucleotide')\n                    continue;\n\n                console.log('node:', node);\n                nodeIdxs[node.uid] = currIdx;\n                currIdx += 1;\n\n                sequence.push(node.name);\n            }\n\n            breaks.push(currIdx);\n        }\n\n        pairtable = [currIdx-1]\n        for (let i = 0; i < currIdx; i++)\n            pairtable.push(0)\n\n        // add the links\n        for (let uid in self.rnas) {\n            let rna = self.rnas[uid];\n\n            for (let j = 0; j < rna.links.length; j++) {\n                let link = rna.links[j];\n\n                if (link.linkType != 'basepair')\n                    continue;\n\n                let idx1 = nodeIdxs[link.source.uid];\n                let idx2 = nodeIdxs[link.target.uid];\n                pairtable[idx1] = idx2;\n                pairtable[idx2] = idx1;\n            }\n        }\n\n        for (let i = 0; i < self.extraLinks.length; i++) {\n            let link = self.extraLinks[i];\n\n            let idx1 = nodeIdxs[link.source.uid];\n            let idx2 = nodeIdxs[link.target.uid];\n\n            pairtable[idx1] = idx2;\n            pairtable[idx2] = idx1;\n        }\n\n        let structure = rnaUtilities.pairtableToDotbracket(pairtable).split('');\n\n        for (let i = 0; i < breaks.length - 1; i++) {\n            console.log('breaks[i]:', breaks[i]);\n            sequence.splice(breaks[i] + i - 1, 0, '&');\n            structure.splice(breaks[i] + i - 1, 0, '&');\n        }\n\n        console.log('sequence:', sequence, sequence.join(''));\n        console.log('structure:', structure, structure.join(''));\n        return [sequence.join(''), structure.join('')];\n    };\n\n    self.addBackBoneLink = function(newLink) {\n        // opposite of deleting a link\n        // get the two dotbracket strings\n        let rna1 = newLink.source.rna;\n        let rna2 = newLink.target.rna;\n\n        let dotbracket1 = rnaUtilities.pairtableToDotbracket(rna1.pairtable);\n        let dotbracket2 = rnaUtilities.pairtableToDotbracket(rna2.pairtable);\n\n        let seq1 = newLink.source.rna.seq;\n        let seq2 = newLink.target.rna.seq;\n\n        let positions1 = rna1.getPositions('nucleotide');\n        let positions2 = rna2.getPositions('nucleotide');\n\n        // concatenate them\n        let newDotbracket = dotbracket1 + dotbracket2;\n        let newSeq = seq1 + seq2;\n        let newPositions = positions1.concat(positions2);\n\n        let toAddInternal = [];\n        let toAddExternal = [];\n        let toDelete = {};\n\n        for (let i = 0; i < self.extraLinks.length; i++) {\n            console.log('self.extraLinks[i]', self.extraLinks[i]);\n            console.log('rna1:', rna1);\n            console.log('rna2:', rna2);\n            if (self.extraLinks[i].source.rna == rna1) {\n                if ( self.extraLinks[i].target.rna == rna2) {\n                    // both ends of the extra link are within what will become the new molecule\n                    // need to be added as base pairs afterwards\n                    //self.extraLinks[i].from = self.extraLinks[i].source.num;\n                    //self.extraLinks[i].to = dotbracket1.length + self.extraLinks[i].target.num;\n                    //toAddInternal.push(self.extraLinks[i]);\n                } else {\n                    // only one end of the extra link is within what will become the newly\n                    // created molecule, needs to remain an extra link\n                    // source will always be the unchanged molecule, whereas target will be\n                    // the newly created one\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].target,\n                        'target': self.extraLinks[i].source.num\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            } else if (self.extraLinks[i].source.rna == rna2) {\n                if ( self.extraLinks[i].target.rna == rna1) {\n                    // add internal link\n                    // both ends of the extra link are within what will become the new molecule\n                    // need to be added as base pairs afterwards\n                    //self.extraLinks[i].from = self.extraLinks[i].target.num;\n                    //self.extraLinks[i].to = dotbracket1.length + self.extraLinks[i].source.num;\n\n                    //toAddInternal.push(self.extraLinks[i]);\n                } else {\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].target,\n                        'target': self.extraLinks[i].source.num + dotbracket1.length\n                    });\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            }\n\n            if (self.extraLinks[i].target.rna == rna1) {\n                if (self.extraLinks[i].source.rna == rna2) {\n                    // covered in previous if statement\n                } else {\n                    // only one end of the extra link is within what will become the newly\n                    // created molecule, needs to remain an extra link\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].source,\n                        'target': self.extraLinks[i].target.num\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            } else if (self.extraLinks[i].target.rna == rna2) {\n                if (self.extraLinks[i].source.rna == rna1) {\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].source,\n                        'target': self.extraLinks[i].target.num + dotbracket1.length\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            }\n        }\n\n\n        self.extraLinks = self.extraLinks.filter((e) => { return !(e.uid in toDelete) });\n\n        delete self.rnas[rna1.uid];\n        delete self.rnas[rna2.uid];\n\n        let newRna = null;\n        // create a new RNA\n        if (self.options.applyForce)\n            newRna = self.addRNA(newDotbracket, { 'sequence': newSeq,\n                                'positions': newPositions,\n                                'centerView': false});\n        else\n            newRna = self.addRNA(newDotbracket, { 'sequence': newSeq,\n                        'centerView': false });\n\n\n\n        // add new external links\n        for (let i = 0; i < toAddExternal.length; i++) {\n            self.extraLinks.push({\n                'source': toAddExternal[i].source,\n                'target': newRna.nodes[toAddExternal[i].target-1],\n                'value': 1,\n                'uid': slugid.nice(),\n                'linkType': 'intermolecule'\n            });\n        }\n\n        self.recalculateGraph();\n        self.update();\n        console.log('self.extraLinks:', self.extraLinks);\n    };\n\n    self.addLink =  function(newLink) {\n        // this means we have a new json, which means we have\n        // to recalculate the structure and change the colors\n        // appropriately\n        //\n        console.log('adding new link');\n        if (newLink.source.rna == newLink.target.rna) {\n            // must be a basepair\n            let r = newLink.source.rna;\n\n            r.pairtable[newLink.source.num] = newLink.target.num;\n            r.pairtable[newLink.target.num] = newLink.source.num;\n\n            updateRnaGraph(r);\n\n        } else {\n            //Add an extra link\n            console.log('intermolecule');\n            newLink.linkType = 'intermolecule';\n            self.extraLinks.push(newLink);\n        }\n        self.recalculateGraph();\n        self.update();\n    };\n\n    var nodeMouseclick = function(d) {\n        if (d3.event.defaultPrevented) return;\n\n        if (!ctrlKeydown) {\n            //if the shift key isn't down, unselect everything\n            var node = visNodes.selectAll('g.gnode');\n            node.classed(fstyle.selectedNode, function(p) { return p.selected =  self.options.applyForce && (p.previouslySelected = false); });\n        }\n\n        // always select this node\n        d3.select(this).classed(fstyle.selectedNode, d.selected = self.options.applyForce && !d.previouslySelected);\n        d3.event.stopPropagation();\n    };\n\n    var nodeMouseup = function(d,i) {\n        let backbonePossible = true, basepairPossible = true;\n\n        if (mousedownNode) {\n            mouseupNode = d;\n\n            // if the node isn't a nucleotide, we can't create a link\n            if (mouseupNode.nodeType == 'middle' || mousedownNode.nodeType == 'middle' || mouseupNode.nodeType == 'label' || mousedownNode.nodeType == 'label')\n                return;\n\n            if (mouseupNode == mousedownNode) { resetMouseVars(); return; }\n            var newLink = {source: mousedownNode, target: mouseupNode, linkType: 'basepair', value: 1, uid: slugid.nice()};\n\n            for (let i = 0; i < self.graph.links.length; i++) {\n                if ((self.graph.links[i].source == mousedownNode)  ||\n                    (self.graph.links[i].target == mousedownNode) ||\n                    (self.graph.links[i].source == mouseupNode) ||\n                    (self.graph.links[i].target == mouseupNode)) {\n                    // either one of the nodes is already in a link\n\n                    // if any of the nodes are already involved in a basepair or a pseudoknot\n                    // then we can't make a basepair link\n                    if (self.graph.links[i].linkType == 'basepair' ||\n                        self.graph.links[i].linkType == 'pseudoknot' ||\n                        self.graph.links[i].linkType == 'intermolecule') {\n                        // although should be able to make a backbone link\n                        console.log('no basepair possible');\n                        basepairPossible = false;\n                    }\n                }\n\n                if (((self.graph.links[i].source == mouseupNode)  &&\n                     (self.graph.links[i].target == mousedownNode)) ||\n                         ((self.graph.links[i].source == mousedownNode)  &&\n                          (self.graph.links[i].target == mouseupNode))) {\n\n                    // if we're trying to make a link between two nodes which already have\n                    // a backbone between them, then we can't make a link\n                    if (self.graph.links[i].linkType == 'backbone') {\n                        return;\n                    }\n                }\n            }\n\n\n            if (newLink.source.rna != newLink.target.rna) {\n                    // could be either a backbone link or an intermolecule link\n\n                if ((newLink.source.num == 1 &&\n                     newLink.target.num == newLink.target.rna.rnaLength) ||\n                     (newLink.target.num == 1 &&\n                      newLink.source.num == newLink.source.rna.rnaLength)) {\n                          //\n                          let linkMenu = [\n                              {\n                                  title: 'Backbone Link',\n                                  action: function(elm, d, i) {\n                                      linkContextMenuShown = false;\n                                      console.log('Item #1 clicked!');\n                                      console.log('The data for this circle is: ' + d);\n                                      dragLine.attr('class', fstyle.transparent);\n                                      self.addBackBoneLink(newLink);\n                                  },\n                                  disabled: false // optional, defaults to false\n                              },\n                              {\n                                  title: 'Basepair Link',\n                                  action: function(elm, d, i) {\n                                      linkContextMenuShown = false;\n                                      console.log('You have clicked the second item!');\n                                      console.log('The data for this circle is: ' + d);\n                                      dragLine.attr('class', fstyle.transparent);\n                                      self.addLink(newLink);\n                                  }\n                              }\n                          ]\n                          linkContextMenuShown = true;\n                          let linkContextMenu = contextMenu(linkMenu);\n                          console.log('newLinkMenu');\n                          linkContextMenu.apply(this, [d,i,true,\n                                                function() { dragLine.attr('class', fstyle.transparent) }]);\n                      } else {\n                          // between end points but can't make a backbone\n                          if (basepairPossible)\n                            self.addLink(newLink);\n                      }\n            } else {\n                if (basepairPossible)\n                    self.addLink(newLink);\n            }\n\n        }\n    };\n\n    var nodeMousedown = function(d) {\n      if (!d.selected && !ctrlKeydown) {\n          // if this node isn't selected, then we have to unselect every other node\n            var node = visNodes.selectAll('g.gnode');\n            node.classed(fstyle.selectedNode, function(p) { return p.selected = p.previouslySelected = false; })\n          }\n\n\n          d3.select(this).classed(fstyle.selectedNode, function(p) { d.previouslySelected = d.selected; return d.selected = self.options.applyForce && true; });\n\n        if (!shiftKeydown) {\n            return;\n        }\n\n        mousedownNode = d;\n\n        dragLine\n        .attr('class', fstyle.dragLine)\n        .attr('x1', mousedownNode.x)\n        .attr('y1', mousedownNode.y)\n        .attr('x2', mousedownNode.x)\n        .attr('y2', mousedownNode.y);\n    };\n\n    self.startAnimation = function() {\n      self.animation = true;\n      vis.selectAll('g.gnode')\n        .call(drag);\n      self.force.start();\n    };\n\n    self.stopAnimation = function() {\n      self.animation = false;\n      vis.selectAll('g.gnode')\n           .on('mousedown.drag', null);\n      self.force.stop();\n    };\n\n    self.setFriction = function(value) {\n      self.force.friction(value);\n      self.resumeForce();\n    };\n\n    self.setCharge = function(value) {\n      self.force.charge(value);\n      self.resumeForce();\n    };\n\n    self.setGravity = function(value) {\n      self.force.gravity(value);\n      self.resumeForce();\n    };\n\n    self.setPseudoknotStrength = function(value) {\n      self.linkStrengths.pseudoknot = value;\n      self.update();\n    };\n\n    self.displayBackground = function(value) {\n      self.displayParameters.displayBackground = value;\n      self.updateStyle();\n    };\n\n    self.displayNumbering = function(value) {\n      self.displayParameters.displayNumbering = value;\n      self.updateStyle();\n    };\n\n    self.displayNodeOutline = function(value) {\n      self.displayParameters.displayNodeOutline = value;\n      self.updateStyle();\n    };\n\n    self.displayNodeLabel = function(value) {\n      self.displayParameters.displayNodeLabel = value;\n      self.updateStyle();\n    };\n\n    self.displayLinks = function(value) {\n      self.displayParameters.displayLinks = value;\n      self.updateStyle();\n    };\n\n    self.displayPseudoknotLinks = function(value) {\n      self.displayParameters.displayPseudoknotLinks = value;\n      self.updateStyle();\n    };\n\n    self.displayProteinLinks = function(value) {\n      self.displayParameters.displayProteinLinks = value;\n      self.updateStyle();\n    };\n\n    self.updateStyle = function() {\n        // Background\n        //rect.classed('transparent', !self.displayParameters.displayBackground);\n        // Numbering\n        visNodes.selectAll('[node_type=label]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        visNodes.selectAll('[label_type=label]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        visLinks.selectAll('[linkType=label_link]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        // Node Outline\n        svg.selectAll('circle').classed(fstyle.transparent, !self.displayParameters.displayNodeOutline);\n        // Node Labels\n        visNodes.selectAll('[label_type=nucleotide]').classed(fstyle.transparent, !self.displayParameters.displayNodeLabel);\n        // Links\n        svg.selectAll('[link_type=real],[link_type=basepair],[link_type=backbone],[link_type=pseudoknot],[link_type=protein_chain],[link_type=chain_chain],[link_type=external]').classed(fstyle.transparent, !self.displayParameters.displayLinks);\n        // Pseudoknot Links\n        svg.selectAll('[link_type=pseudoknot]').classed(fstyle.transparent, !self.displayParameters.displayPseudoknotLinks);\n        // Protein Links\n        svg.selectAll('[link_type=protein_chain]').classed(fstyle.transparent, !self.displayParameters.displayProteinLinks);\n        // Fake Links\n        visLinks.selectAll('[link_type=fake]').classed(fstyle.transparent, !self.options.displayAllLinks);\n        visLinks.selectAll('[link_type=fake_fake]').classed(fstyle.transparent, !self.options.displayAllLinks);\n    };\n\n    function nudge(dx, dy) {\n        node.filter(function(d) { return d.selected; })\n        .attr('cx', function(d) { return d.x += dx; })\n        .attr('cy', function(d) { return d.y += dy; });\n\n        link.filter(function(d) { return d.source.selected; })\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('y1', function(d) { return d.source.y; });\n\n        link.filter(function(d) { return d.target.selected; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y2', function(d) { return d.target.y; });\n\n        d3.event.preventDefault();\n    }\n\n    self.createNewLinks = function(linksEnter) {\n        var linkLines = linksEnter.append('svg:line');\n\n        linkLines.append('svg:title')\n        .text(linkKey);\n\n        linkLines\n        .classed('link', true)\n        .classed(fstyle.link, true)\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('y1', function(d) { return d.source.y; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y2', function(d) { return d.target.y; })\n        .attr('link_type', function(d) { return d.linkType; } )\n        .attr('pointer-events', function(d) { if (d.linkType == 'fake') return 'none'; else return 'all';});\n\n        /* We don't need to update the positions of the stabilizing links */\n        /*\n        basepairLinks = visLinks.selectAll('[link_type=basepair]');\n        basepairLinks.classed('basepair', true);\n\n        fakeLinks = visLinks.selectAll('[link_type=fake]')\n        fakeLinks.classed('fake', true);\n\n        intermolecule_links = vis_links.selectAll('[link_type=intermolecule]');\n        intermolecule_links.classed('intermolecule', true);\n\n        plink = vis_links.selectAll('[link_type=protein_chain],[link_type=chain_chain]');\n        plink.classed('chain_chain', true);\n        */\n\n       return linkLines;\n    };\n\n    self.createNewNodes = function(gnodesEnter) {\n        gnodesEnter = gnodesEnter.append('g')\n        .classed('gnode', true)\n        .attr('struct_name', function(d) { return d.structName; })\n        .attr('transform', function(d) {\n            if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                return 'translate(' + [d.x, d.y] + ')';\n            else\n                return '';\n        })\n        .each( function(d) { d.selected = d.previouslySelected = false; });\n\n        gnodesEnter\n        .call(drag)\n        .on('mousedown', nodeMousedown)\n        .on('mousedrag', function(d) {})\n        .on('mouseup', nodeMouseup)\n        .attr('num', function(d) { return 'n' + d.num; })\n        .attr('rnum', function(d) {\n            return 'n' + (d.rna.rnaLength - d.num + 1); })\n        .on('click', nodeMouseclick)\n        .on('contextmenu', self.nodeContextMenu)\n        .transition()\n        .duration(750)\n        .ease('elastic');\n\n        // create nodes behind the circles which will serve to highlight them\n        var labelAndProteinNodes = gnodesEnter.filter(function(d) {\n            return d.nodeType == 'label' || d.nodeType == 'protein';\n        });\n\n        var nucleotideNodes = gnodesEnter.filter(function(d) {\n            return d.nodeType == 'nucleotide';\n        });\n\n        labelAndProteinNodes.append('svg:circle')\n        .classed(fstyle.node, function(d) { return d.nodeType == 'label'; })\n        .attr('r', function(d) {\n            if (d.nodeType == 'middle') return 0;\n            else {\n                return d.radius;\n            }\n        })\n        .attr('node_type', function(d) { return d.nodeType; })\n        .attr('node_num', function(d) { return d.num; });\n\n        nucleotideNodes.append('svg:circle')\n        .attr('class', fstyle.node)\n        .attr('node_type', function(d) { return d.nodeType; })\n        .attr('node_num', function(d) { return d.num; })\n        .attr('r', function(d) { return d.radius; })\n        .append('svg:title')\n        .text(function(d) {\n            if (d.nodeType == 'nucleotide') {\n                return d.structName + ':' + d.num;\n            } else {\n                return '';\n            }\n        });\n\n        nucleotideNodes.append('svg:path')\n        .attr('class', fstyle.node)\n        .attr('node_type', function(d) { return d.nodeType; })\n        .attr('node_num', function(d) { return d.num; })\n        .append('svg:title')\n        .text(function(d) {\n            if (d.nodeType == 'nucleotide') {\n                return d.structName + ':' + d.num;\n            } else {\n                return '';\n            }\n        });\n\n\n        var labelsEnter = gnodesEnter.append('text')\n        .text(function(d) { return d.name; })\n        .attr('class', fstyle.nodeLabel)\n        .attr('label_type', function(d) { return d.nodeType; })\n\n        /*\n        labelsEnter.text(function(d) {\n            return d.num;\n        });\n        */\n\n        labelsEnter.append('svg:title')\n        .text(function(d) {\n            if (d.nodeType == 'nucleotide') {\n                return d.structName + ':' + d.num;\n            } else {\n                return '';\n            }\n        });\n\n\n        return gnodesEnter;\n    };\n\n    var nodeTooltip = function(d) {\n        nodeTooltips = {};\n\n        nodeTooltips.nucleotide = d.num;\n        nodeTooltips.label = '';\n        nodeTooltips.pseudo = '';\n        nodeTooltips.middle = '';\n        nodeTooltips.protein = d.structName;\n\n        return nodeTooltips[d.nodeType];\n    };\n\n    self.update = function () {\n        self.force.nodes(self.graph.nodes)\n        .links(self.graph.links);\n\n        if (self.animation) {\n          self.force.start();\n        }\n\n        var allLinks = visLinks.selectAll('line.link')\n        .data(self.graph.links.filter(realLinkFilter), linkKey);\n\n        allLinks.attr('class', '')\n        .classed('link', true)\n        .classed(fstyle.link, true)\n        .attr('link_type', function(d) { return d.linkType; } )\n\n        var linksEnter = allLinks.enter();\n        self.createNewLinks(linksEnter);\n\n        allLinks.exit().remove();\n\n\n        var domain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        var colors = d3.scale.category10().domain(domain);\n\n            var gnodes = visNodes.selectAll('g.gnode')\n            .data(self.graph.nodes, nodeKey);\n            //.attr('pointer-events', 'all');\n\n            var gnodesEnter = gnodes.enter();\n\n            self.createNewNodes(gnodesEnter);\n            gnodes.exit().remove();\n\n\n            //fake_nodes = self.graph.nodes.filter(function(d) { return d.nodeType == 'middle'; });\n            //fakeNodes = self.graph.nodes.filter(function(d) { return true; });\n            var realNodes = self.graph.nodes.filter(function(d) { return d.nodeType == 'nucleotide' || d.nodeType == 'label';});\n\n            var xlink;\n            if (self.displayFakeLinks)\n                xlink = allLinks;\n            else\n                xlink = visLinks.selectAll('[link_type=real],[link_type=pseudoknot],[link_type=protein_chain],[link_type=chain_chain],[link_type=label_link],[link_type=backbone],[link_type=basepair],[link_type=intermolecule],[link_type=external]');\n\n            var position;\n\n            gnodes.selectAll('path')\n            .each(positionAnyNode);\n\n            xlink.on('click', linkClick);\n\n            self.force.on('tick', function() {\n                var q = d3.geom.quadtree(realNodes);\n                var i = 0;\n                var n = realNodes.length;\n\n                while (++i < n) q.visit(collide(realNodes[i]));\n\n                xlink.attr('x1', function(d) { return d.source.x; })\n                .attr('y1', function(d) {  return d.source.y; })\n                .attr('x2', function(d) { return d.target.x; })\n                .attr('y2', function(d) { return d.target.y; });\n\n                // Translate the groups\n                gnodes.attr('transform', function(d) {\n                    return 'translate(' + [d.x, d.y] + ')';\n                });\n\n                gnodes.select('path')\n                .each(positionAnyNode);\n\n            });\n\n            self.force.on('end', () => {\n                gnodes.selectAll('[node_type=nucleotide]')\n                .filter((d,i) => { if (i == 0) return true; else return false; })\n                .each((d,i) => {\n                    //console.log(\"pos\", d.num, d.x, d.y);\n                });\n\n                for (let uid in self.rnas) {\n                    for (let i = 1; i < self.rnas[uid].pairtable[0]; i++) {\n                        //console.log('pt', i, self.rnas[uid].pairtable[i]);\n                    }\n                }\n\n            });\n\n        self.changeColorScheme(self.colorScheme);\n\n        if (self.animation) {\n          self.force.start();\n        }\n\n        self.updateStyle();\n    };\n\n    self.setSize();\n}\n\n/************************* END FORNAF **********************************/\n","import {RNAGraph} from './rnagraph.js';\n\nimport {simpleXyCoordinates} from './simplernaplot.js';\nimport {NAView} from './naview/naview.js'\n\nimport fstyle from './fornac.css';\n\nexport function rnaPlot(passedOptions = {}) {\n    var options = {\n        'width': 300,\n        'height': 300,\n        'nucleotideRadius': 5,\n        'rnaEdgePadding': 1,     // how far the leftmost, rightmost, topmost and bottomost\n                                // nucleotides are from the edge of the plot\n        'labelInterval': 10,\n        'showNucleotideLabels': true,\n        'startNucleotideNumber': 1,\n        'bundleExternalLinks': false,\n\n        'rnaLayout': 'simple', // simple or naview\n        'namePosition': '0 0' // for x and y either 0, 0.5 or 1\n    };\n    var options = Object.assign(options, passedOptions);\n\n    var xScale, yScale;\n\n    function createTransformToFillViewport(xValues, yValues) {\n        // create transform that will scale the x and y values so that\n        // they fill the available viewport\n        let xExtent = d3.extent(xValues);\n        let yExtent = d3.extent(yValues);\n\n        // add the radius of the nucleotides\n        xExtent[0] -= options.nucleotideRadius + options.rnaEdgePadding;\n        yExtent[0] -= options.nucleotideRadius + options.rnaEdgePadding;\n\n        xExtent[1] += options.nucleotideRadius + options.rnaEdgePadding;\n        yExtent[1] += options.nucleotideRadius + options.rnaEdgePadding;\n\n        // find out how wide and height the molecule\n        var xRange = xExtent[1] - xExtent[0];\n        var yRange = yExtent[1] - yExtent[0];\n\n        // how much wider / taller is it than the available viewport\n        var xExtra = xRange - options.width;\n        var yExtra = yRange - options.height;\n\n        // once we have a scale for one dimension, we can create the scale for the other\n        // keeping the same expansion / shrinking ratio\n        function createOtherScale(firstScale, newDomain, newRange) {\n            var scaleFactor = (firstScale.range()[1] - firstScale.range()[0]) /\n                              (firstScale.domain()[1] - firstScale.domain()[0]);\n            var newWidth = (newDomain[1] - newDomain[0]) * scaleFactor\n            var newMargin = ((newRange[1] - newRange[0]) - newWidth) / 2;\n\n            return {'scaleFactor': scaleFactor,\n                    'scale': d3.scale.linear()\n                                     .domain(newDomain)\n                                     .range([newRange[0] + newMargin, newRange[1] - newMargin])};\n        }\n\n        var ret;\n\n        if (xExtra > yExtra) {\n            // we have to shrink more in the x-dimension than the y\n            xScale = d3.scale.linear()\n            .domain(xExtent)\n            .range([0, options.width])\n\n            ret = createOtherScale(xScale, yExtent, [0, options.height]);\n            yScale = ret.scale;\n        } else {\n            // we have to shrink more in the x-dimension than the y\n            yScale = d3.scale.linear()\n            .domain(yExtent)\n            .range([0, options.height])\n\n            ret = createOtherScale(yScale, xExtent, [0, options.width]);\n            xScale = ret.scale;\n        }\n\n        var xOffset = xScale.range()[0] - xScale.domain()[0];\n        var yOffset = yScale.range()[0] - yScale.domain()[0];\n\n        return 'translate(' + -(xScale.domain()[0] * ret.scaleFactor - xScale.range()[0]) +\n                  ',' + -(yScale.domain()[0] * ret.scaleFactor - yScale.range()[0]) + ')' +\n            'scale(' + ret.scaleFactor + ')';\n    }\n\n    function createNucleotides(selection, nucleotideNodes) {\n        // create groupings for each nucleotide and label\n        var gs = selection\n        .selectAll('.gnode')\n        .data(nucleotideNodes)\n        .enter()\n        .append('svg:g')\n        .classed('gnode', true)\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n\n        var circles = gs.append('svg:circle')\n        .classed(fstyle.node, true)\n        .attr('node_type', 'nucleotide')\n        .attr('base_type', (d) => { if (d.name) { return d.name.toLowerCase(); }})\n        .attr('r', options.nucleotideRadius)\n\n\n        if (options.showNucleotideLabels) {\n            var nucleotideLabels = gs.append('svg:text')\n            .text(function(d) { return d.name; })\n            .classed(fstyle.nodeLabel, true)\n            .append('svg:title')\n            .text(function(d) { return d.struct_name + ':' + d.num; });\n        }\n    }\n\n    function createLabels(selection, labelNodes) {\n        // create groupings for each nucleotide and label\n\n        var gs = selection\n        .selectAll()\n        .data(labelNodes)\n        .enter()\n        .append('svg:g')\n        .classed('gnode', true)\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n\n        var circles = gs.append('svg:circle')\n        .classed(fstyle.node, true)\n        .attr('node_type', 'label')\n        .attr('r', options.nucleotideRadius)\n\n        var numberLabels = gs.append('svg:text')\n        .classed(fstyle.nodeLabel, true)\n        .text(function(d) { return d.name; })\n    }\n\n    function createName(selection, name) {\n        let nameLabel = selection.append('svg:text')\n        //.attr('dy', -10)\n        .classed(fstyle.plotLabel, true)\n        .text(name);\n\n        let xyPos = options.namePosition.split(\" \", 2) // 0 0.5 1\n        let xy = []\n        let textBBox = nameLabel.node().getBBox()\n        let textSize = [textBBox.width, textBBox.height]\n        let plotSize = [options.width, options.height]\n\n        for (let p in [0, 1]) {\n            switch (xyPos[p]) {\n                case '0':\n                    xy[p] = textSize[p] / 2\n                    break;\n                case '1':\n                    xy[p] = plotSize[p] - textSize[p] / 2\n                    break;\n                case '0.5':\n                    xy[p] = plotSize[p] / 2\n                    break;\n            }\n        }\n        nameLabel.attr('x', xy[0]).attr('y', xy[1])\n    }\n\n    function makeExternalLinksBundle(selection, links) {\n        var nodesDict = {};\n        var linksList = [];\n        links = links.filter(function(d) { return d.linkType == 'correct' || d.linkType == 'incorrect' || d.linkType == 'extra'; });\n\n        selection.selectAll('[link-type=extra]')\n        .remove();\n\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].source === null || links[i].target === null)\n                continue;\n\n            nodesDict[links[i].source.uid] = links[i].source;\n            nodesDict[links[i].target.uid] = links[i].target;\n\n            linksList.push({'source': links[i].source.uid, 'target': links[i].target.uid, 'linkType': links[i].linkType, 'extraLinkType': links[i].extraLinkType}) ;\n        }\n\n        var fbundling = d3.ForceEdgeBundling().nodes(nodesDict).edges(linksList)\n        .compatibility_threshold(0.8).step_size(0.2);\n        var results   = fbundling();\n\n        var d3line = d3.svg.line()\n            .x(function(d){return d.x;})\n            .y(function(d){return d.y;})\n            .interpolate('linear');\n\n        for (var i = 0; i < results.length; i++) {\n            var edge_subpoint_data = results[i];\n            // for each of the arrays in the results\n            // draw a line between the subdivions points for that edge\n\n            selection.append('path').attr('d', d3line(edge_subpoint_data))\n            .style('fill', 'none')\n            .attr('link-type', function(d) { return linksList[i].linkType; })\n            .attr('extra-link-type', function(d) { return linksList[i].extraLinkType; })\n            .style('stroke-opacity',0.4); //use opacity as blending\n        }\n\n    }\n\n    function createLinks(selection, links) {\n        links = links.filter(function(d) { return d.source !== null && d.target !== null; });\n        var gs = selection.selectAll('.link')\n        .data(links)\n        .enter()\n        .append('svg:line')\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y1', function(d) { return d.source.y; })\n        .attr('y2', function(d) { return d.target.y; })\n        .attr('link-type', function(d) { return d.linkType; })\n        .attr('extra-link-type', function(d) { return d.extraLinkType; })\n        .classed('link', true)\n        .classed(fstyle.link, true)\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            let plot = d3.select(this).append('g')\n            .classed(fstyle.plot, true)\n\n            // data should be a dictionary containing at least a structure\n            // and possibly a sequence\n            let rg = new RNAGraph(data.sequence, data.structure, data.name, options.startNucleotideNumber)\n                    .recalculateElements()\n                    .elementsToJson()\n                    .addName(data.name);\n\n            data.rnaGraph = rg;\n            // calculate the position of each nucleotide\n            // the positions of the labels will be calculated in\n            // the addLabels function\n            let positions = [];\n\n            if (options.rnaLayout === 'naview') {\n                var naview = new NAView();\n                var naViewPositions = naview.naview_xy_coordinates(rg.pairtable);\n\n                for (var i = 0; i < naViewPositions.nbase; i++) {\n                    positions.push([naViewPositions.x[i], naViewPositions.y[i]]);\n                }\n            } else {\n                positions = simpleXyCoordinates(rg.pairtable);\n            }\n\n            rg.addPositions('nucleotide', positions)\n            //.reinforceStems()\n            //.reinforceLoops()\n            //.addExtraLinks(data.extraLinks)\n            .addLabels(options.startNucleotideNumber, options.labelInterval);\n\n            // create a transform that will fit the molecule to the\n            // size of the viewport (canvas, svg, whatever)\n            let fillViewportTransform = createTransformToFillViewport(\n                rg.nodes.map(function(d) { return d.x; }),\n                rg.nodes.map(function(d) { return d.y; })\n            );\n            plot.attr('transform', fillViewportTransform);\n\n            let nucleotideNodes = rg.nodes.filter(function(d) {\n                return d.nodeType == 'nucleotide';\n            });\n\n            let labelNodes = rg.nodes.filter(function(d) {\n                return d.nodeType == 'label';\n            });\n\n            let links = rg.links;\n\n            createLinks(plot, links);\n            createNucleotides(plot, nucleotideNodes);\n            createLabels(plot, labelNodes);\n            createName(d3.select(this), data.name);\n\n            if (options.bundleExternalLinks) {\n                makeExternalLinksBundle(plot, links);\n            }\n\n        });\n    }\n\n    chart.width = function(_) {\n        if (!arguments.length) return options.width;\n        options.width = _;\n        return chart;\n    };\n\n    chart.height = function(_) {\n        if (!arguments.length) return options.height;\n        options.height = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.rnaEdgePadding = function(_) {\n        if (!arguments.length) return options.rnaEdgePadding;\n        options.rnaEdgePadding = _;\n        return chart;\n    };\n\n    chart.nucleotideRadius = function(_) {\n        if (!arguments.length) return options.nucleotideRadius;\n        options.nucleotideRadius = _;\n        return chart;\n    };\n\n    chart.labelInterval = function(_) {\n        if (!arguments.length) return options.labelInterval;\n        options.labelInterval = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.startNucleotideNumber = function(_) {\n        if (!arguments.length) return options.startNucleotideNumber;\n        options.startNucleotideNumber = _;\n        return chart;\n    };\n\n    chart.bundleExternalLinks = function(_) {\n        if (!arguments.length) return options.bundleExternalLinks;\n        options.bundleExternalLinks = _;\n        return chart;\n    };\n\n    chart.rnaLayout = function(_) {\n        if (!arguments.length) return options.rnaLayout;\n        options.rnaLayout = _;\n        return chart;\n    };\n\n    chart.namePosition = function(_) {\n        if (!arguments.length) return options.namePosition;\n        options.namePosition = _;\n        return chart;\n    };\n\n    return chart;\n}\n","import {rnaPlot} from './rnaplot.js';\n\nexport function rnaTreemap(passedOptions = {}) {\n    var options = {\n        'width': 300,\n        'height': 300,\n        'nucleotideRadius': 5,\n        'rnaEdgePadding': 1,     // how far the leftmost, rightmost, topmost and bottomost\n                                // nucleotides are from the edge of the plot\n        'labelInterval': 10,\n        'showNucleotideLabels': true,\n        'startNucleotideNumber': 1,\n        'bundleExternalLinks': false,\n\n        'rnaLayout': 'simple', // simple or naview\n        'namePosition': '0 0', // for x and y either 0, 0.5 or 1\n    };\n\n    var options = Object.assign(options, passedOptions);\n\n    function rnaTreemapNode(selection) {\n        // create a background rectangle for each RNA structure\n        selection.each(function(d) {\n            d3.select(this)\n            .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')' })\n            .append('rect')\n            .attr('fill', 'transparent')\n            .attr('width', function(d) { return Math.max(0, d.dx); })\n            .attr('height', function(d) { return Math.max(0, d.dy); })\n\n            // draw the actual RNA structure\n            var chart = rnaPlot(options)\n            .width( Math.max(0, d.dx))\n            .height( Math.max(0, d.dy))\n\n            if ('structure' in d) d3.select(this).call(chart)\n        });\n    }\n\n    var chart = function(selection) {\n        selection.each(function(data) {\n            console.log('data:', data)\n            // initialize the treemap structure\n            // sample input\n            // { 'name': 'blah',\n            // 'children: [{'structure': '..((..))',\n            //               'sequence': 'ACCGGCC',\n            //               'size': 50}]\n            // }\n            var treemap = d3.layout.treemap()\n            .size([options.width, options.height])\n            .sticky(false)\n            .value(function(d) { return d.size; });\n\n            // create a new <g> for each node in the treemap\n            // this may be a little redundant, since we expect the calling\n            // selection to contain their own g elements\n            var gEnter = d3.select(this)\n                .append('g')\n                .classed('rnatreemap', true)\n            var treemapGnodes = gEnter.datum(data).selectAll('.treemapnode')\n                .data(treemap.nodes)\n                .enter()\n                .append('g')\n                .classed('treemapnode', true)\n                .call(rnaTreemapNode);\n        });\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return options.width;\n        options.width = _;\n        return chart;\n    };\n\n    chart.height = function(_) {\n        if (!arguments.length) return options.height;\n        options.height = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.rnaEdgePadding = function(_) {\n        if (!arguments.length) return options.rnaEdgePadding;\n        options.rnaEdgePadding = _;\n        return chart;\n    };\n\n    chart.nucleotideRadius = function(_) {\n        if (!arguments.length) return options.nucleotideRadius;\n        options.nucleotideRadius = _;\n        return chart;\n    };\n\n    chart.labelInterval = function(_) {\n        if (!arguments.length) return options.labelInterval;\n        options.labelInterval = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.startNucleotideNumber = function(_) {\n        if (!arguments.length) return options.startNucleotideNumber;\n        options.startNucleotideNumber = _;\n        return chart;\n    };\n\n    chart.bundleExternalLinks = function(_) {\n        if (!arguments.length) return options.bundleExternalLinks;\n        options.bundleExternalLinks = _;\n        return chart;\n    };\n\n    chart.rnaLayout = function(_) {\n        if (!arguments.length) return options.rnaLayout;\n        options.rnaLayout = _;\n        return chart;\n    };\n\n    chart.namePosition = function(_) {\n        if (!arguments.length) return options.namePosition;\n        options.namePosition = _;\n        return chart;\n    };\n\n    chart.zoom = function(_) {\n        if (!arguments.length) return options.zoom;\n        options.zoom = _;\n        return chart;\n    };\n\n    return chart;\n}\n","export {FornaContainer} from './fornac.js';\nexport {rnaPlot} from './rnaplot.js';\nexport {rnaTreemap} from './rnatreemap.js';\n\n//export {RNAUtilities, ColorScheme} from './rnautils.js';\n//export {ProteinGraph, RNAGraph, moleculesToJson} from './rnagraph.js';\n//export {simpleXyCoordinates} from './simplernaplot.js';"],"sourceRoot":""}